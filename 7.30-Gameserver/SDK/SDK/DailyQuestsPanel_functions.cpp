#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyQuestsPanel

#include "Basic.hpp"

#include "DailyQuestsPanel_classes.hpp"
#include "DailyQuestsPanel_parameters.hpp"


namespace SDK
{

// Function DailyQuestsPanel.DailyQuestsPanel_C.ExecuteUbergraph_DailyQuestsPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyQuestsPanel_C::ExecuteUbergraph_DailyQuestsPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "ExecuteUbergraph_DailyQuestsPanel");

	Params::DailyQuestsPanel_C_ExecuteUbergraph_DailyQuestsPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.WidgetAnimationEvt_ClaimReward_K2Node_WidgetAnimationEvent_0
// (BlueprintEvent)

void UDailyQuestsPanel_C::WidgetAnimationEvt_ClaimReward_K2Node_WidgetAnimationEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "WidgetAnimationEvt_ClaimReward_K2Node_WidgetAnimationEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyQuestsPanel_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "Tick");

	Params::DailyQuestsPanel_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyQuestsPanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "PreConstruct");

	Params::DailyQuestsPanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDailyQuestsPanel_C::BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature");

	Params::DailyQuestsPanel_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_66_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UDailyQuestsPanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.BindEventListeners
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::BindEventListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "BindEventListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestsUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::OnQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "OnQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.CreateQuestWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVerticalBox*                     QuestList                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    QuestCompleted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyQuestsPanel_C::CreateQuestWidget(class UFortQuestItem* Quest, class UVerticalBox* QuestList, bool* QuestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "CreateQuestWidget");

	Params::DailyQuestsPanel_C_CreateQuestWidget Parms{};

	Parms.Quest = Quest;
	Parms.QuestList = QuestList;

	UObject::ProcessEvent(Func, &Parms);

	if (QuestCompleted != nullptr)
		*QuestCompleted = Parms.QuestCompleted;
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestsGranted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           NewQuests                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDailyQuestsPanel_C::OnQuestsGranted(TArray<class UFortQuestItem*>& NewQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "OnQuestsGranted");

	Params::DailyQuestsPanel_C_OnQuestsGranted Parms{};

	Parms.NewQuests = std::move(NewQuests);

	UObject::ProcessEvent(Func, &Parms);

	NewQuests = std::move(Parms.NewQuests);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.OnQuestRewardClaimed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UDailyQuestsPanel_C::OnQuestRewardClaimed(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "OnQuestRewardClaimed");

	Params::DailyQuestsPanel_C_OnQuestRewardClaimed Parms{};

	Parms.Quest = Quest;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.OnNoQuestRewardsToClaim
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::OnNoQuestRewardsToClaim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "OnNoQuestRewardsToClaim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.ClaimNextQuestReward
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::ClaimNextQuestReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "ClaimNextQuestReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.ShowModalQuests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCommitted                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyQuestsPanel_C::ShowModalQuests(bool* bCommitted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "ShowModalQuests");

	Params::DailyQuestsPanel_C_ShowModalQuests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCommitted != nullptr)
		*bCommitted = Parms.bCommitted;
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.ProcessQuestUpdate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UFortQuestItem*>           QuestArray                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UVerticalBox*                     QuestList                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    QuestIsCompleted                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyQuestsPanel_C::ProcessQuestUpdate(class UFortQuestItem* Quest, TArray<class UFortQuestItem*>& QuestArray, class UVerticalBox* QuestList, bool* QuestIsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "ProcessQuestUpdate");

	Params::DailyQuestsPanel_C_ProcessQuestUpdate Parms{};

	Parms.Quest = Quest;
	Parms.QuestArray = std::move(QuestArray);
	Parms.QuestList = QuestList;

	UObject::ProcessEvent(Func, &Parms);

	QuestArray = std::move(Parms.QuestArray);

	if (QuestIsCompleted != nullptr)
		*QuestIsCompleted = Parms.QuestIsCompleted;
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.SetInputActionHandlers
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::SetInputActionHandlers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "SetInputActionHandlers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.CreateMultiQuestWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           Quests                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UVerticalBox*                     QuestList                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    QuestCompleted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UDailyQuestsPanel_C::CreateMultiQuestWidget(TArray<class UFortQuestItem*>& Quests, class UVerticalBox* QuestList, bool* QuestCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "CreateMultiQuestWidget");

	Params::DailyQuestsPanel_C_CreateMultiQuestWidget Parms{};

	Parms.Quests = std::move(Quests);
	Parms.QuestList = QuestList;

	UObject::ProcessEvent(Func, &Parms);

	Quests = std::move(Parms.Quests);

	if (QuestCompleted != nullptr)
		*QuestCompleted = Parms.QuestCompleted;
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.NotifyQuestsDirty
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::NotifyQuestsDirty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "NotifyQuestsDirty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DailyQuestsPanel.DailyQuestsPanel_C.Reset Button Anim
// (Public, BlueprintCallable, BlueprintEvent)

void UDailyQuestsPanel_C::Reset_Button_Anim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DailyQuestsPanel_C", "Reset Button Anim");

	UObject::ProcessEvent(Func, nullptr);
}

}

