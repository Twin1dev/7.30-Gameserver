#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCraftingIngredientList

#include "Basic.hpp"

#include "ItemCraftingIngredientList_classes.hpp"
#include "ItemCraftingIngredientList_parameters.hpp"


namespace SDK
{

// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.ExecuteUbergraph_ItemCraftingIngredientList
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::ExecuteUbergraph_ItemCraftingIngredientList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "ExecuteUbergraph_ItemCraftingIngredientList");

	Params::ItemCraftingIngredientList_C_ExecuteUbergraph_ItemCraftingIngredientList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemCraftingIngredientList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemCraftingIngredientList_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.AddListEntry
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItemQuantityListEntryBase*   ListEntry                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::AddListEntry(class UFortItemQuantityListEntryBase* ListEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "AddListEntry");

	Params::ItemCraftingIngredientList_C_AddListEntry Parms{};

	Parms.ListEntry = ListEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.SetItemToRepresent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemQuantity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::SetItemToRepresent(class UFortItem* Item, int32 ItemQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "SetItemToRepresent");

	Params::ItemCraftingIngredientList_C_SetItemToRepresent Parms{};

	Parms.Item = Item;
	Parms.ItemQuantity = ItemQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.Refresh
// (Public, BlueprintCallable, BlueprintEvent)

void UItemCraftingIngredientList_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.HandleWorldItemListChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortWorldItem*>           ItemsAdded                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UFortWorldItem*>           ItemsRemoved                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UItemCraftingIngredientList_C::HandleWorldItemListChanged(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "HandleWorldItemListChanged");

	Params::ItemCraftingIngredientList_C_HandleWorldItemListChanged Parms{};

	Parms.ItemsAdded = std::move(ItemsAdded);
	Parms.ItemsRemoved = std::move(ItemsRemoved);

	UObject::ProcessEvent(Func, &Parms);

	ItemsAdded = std::move(Parms.ItemsAdded);
	ItemsRemoved = std::move(Parms.ItemsRemoved);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.RefreshInventoryTracking
// (Public, BlueprintCallable, BlueprintEvent)

void UItemCraftingIngredientList_C::RefreshInventoryTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "RefreshInventoryTracking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.HandleItemChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ItemChanged                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AmmoChanged                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IngredientsChanged                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemCraftingIngredientList_C::HandleItemChanged(bool ItemChanged, bool AmmoChanged, bool IngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "HandleItemChanged");

	Params::ItemCraftingIngredientList_C_HandleItemChanged Parms{};

	Parms.ItemChanged = ItemChanged;
	Parms.AmmoChanged = AmmoChanged;
	Parms.IngredientsChanged = IngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.ItemNeedsInventoryTracking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NeedsTracking                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemCraftingIngredientList_C::ItemNeedsInventoryTracking(class UFortItem* Item, bool* NeedsTracking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "ItemNeedsInventoryTracking");

	Params::ItemCraftingIngredientList_C_ItemNeedsInventoryTracking Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (NeedsTracking != nullptr)
		*NeedsTracking = Parms.NeedsTracking;
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.SetItemToCompare
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        ItemToCompare                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::SetItemToCompare(class UFortItem* ItemToCompare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "SetItemToCompare");

	Params::ItemCraftingIngredientList_C_SetItemToCompare Parms{};

	Parms.ItemToCompare = ItemToCompare;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.GetIngredients
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FFortItemQuantityPair>    ReturnIngredients                                      (Parm, OutParm, ZeroConstructor)

void UItemCraftingIngredientList_C::GetIngredients(class UObject* Item, TArray<struct FFortItemQuantityPair>* ReturnIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "GetIngredients");

	Params::ItemCraftingIngredientList_C_GetIngredients Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnIngredients != nullptr)
		*ReturnIngredients = std::move(Parms.ReturnIngredients);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.HandleCraftItemFailed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortCraftFailCause                     FailCause                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::HandleCraftItemFailed(EFortCraftFailCause FailCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "HandleCraftItemFailed");

	Params::ItemCraftingIngredientList_C_HandleCraftItemFailed Parms{};

	Parms.FailCause = FailCause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.UnbindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UItemCraftingIngredientList_C::UnbindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "UnbindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.Bind Delegates
// (Public, BlueprintCallable, BlueprintEvent)

void UItemCraftingIngredientList_C::Bind_Delegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "Bind Delegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemCraftingIngredientList.ItemCraftingIngredientList_C.SetItemQuantity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ItemQuantity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UItemCraftingIngredientList_C::SetItemQuantity(int32 ItemQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCraftingIngredientList_C", "SetItemQuantity");

	Params::ItemCraftingIngredientList_C_SetItemQuantity Parms{};

	Parms.ItemQuantity = ItemQuantity;

	UObject::ProcessEvent(Func, &Parms);
}

}

