#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionDifficultyIncreasePanel

#include "Basic.hpp"

#include "MissionDifficultyIncreasePanel_classes.hpp"
#include "MissionDifficultyIncreasePanel_parameters.hpp"


namespace SDK
{

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.LockoutEndedAnimFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::LockoutEndedAnimFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "LockoutEndedAnimFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.HidePanelAnimFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::HidePanelAnimFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "HidePanelAnimFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ExecuteUbergraph_MissionDifficultyIncreasePanel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionDifficultyIncreasePanel_C::ExecuteUbergraph_MissionDifficultyIncreasePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "ExecuteUbergraph_MissionDifficultyIncreasePanel");

	Params::MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVoteActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   VoteResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionDifficultyIncreasePanel_C::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "OnActiveVoteChangedBP");

	Params::MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.HandleHidePanelFinished
// (BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::HandleHidePanelFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "HandleHidePanelFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.RewardAnimTrigger
// (BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::RewardAnimTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "RewardAnimTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.InfoObjectUpdated
// (Event, Protected, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::InfoObjectUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "InfoObjectUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.HidePanel
// (BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::HidePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "HidePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ShowPanel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceFinalState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionDifficultyIncreasePanel_C::ShowPanel(bool ForceFinalState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "ShowPanel");

	Params::MissionDifficultyIncreasePanel_C_ShowPanel Parms{};

	Parms.ForceFinalState = ForceFinalState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateRewards
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::UpdateRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "UpdateRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateDifficultyRating
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::UpdateDifficultyRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "UpdateDifficultyRating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Hover-Anim
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::HoverMinusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Hover-Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Leave-Anim
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::LeaveMinusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Leave-Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Reward-ListAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::RewardMinusListAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Reward-ListAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Rewad-IntroRewind
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::RewadMinusIntroRewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Rewad-IntroRewind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Reward-IntroReset
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::RewardMinusIntroReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "Reward-IntroReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ShowLockoutState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::ShowLockoutState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "ShowLockoutState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateLockoutTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::UpdateLockoutTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "UpdateLockoutTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.DifficultyVoteUpdated
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortVoteStatus                         VoteStatus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FVoter>                   Voters                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UMissionDifficultyIncreasePanel_C::DifficultyVoteUpdated(EFortVoteStatus VoteStatus, TArray<struct FVoter>& Voters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "DifficultyVoteUpdated");

	Params::MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated Parms{};

	Parms.VoteStatus = VoteStatus;
	Parms.Voters = std::move(Voters);

	UObject::ProcessEvent(Func, &Parms);

	Voters = std::move(Parms.Voters);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.HideLockoutState
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::HideLockoutState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "HideLockoutState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.BindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::BindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "BindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UnbindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionDifficultyIncreasePanel_C::UnbindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "UnbindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.GetIsGroupMission
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsGroupMission                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionDifficultyIncreasePanel_C::GetIsGroupMission(bool* IsGroupMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionDifficultyIncreasePanel_C", "GetIsGroupMission");

	Params::MissionDifficultyIncreasePanel_C_GetIsGroupMission Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsGroupMission != nullptr)
		*IsGroupMission = Parms.IsGroupMission;
}

}

