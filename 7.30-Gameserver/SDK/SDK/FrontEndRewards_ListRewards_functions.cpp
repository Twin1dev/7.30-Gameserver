#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_ListRewards

#include "Basic.hpp"

#include "FrontEndRewards_ListRewards_classes.hpp"
#include "FrontEndRewards_ListRewards_parameters.hpp"


namespace SDK
{

// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.ExecuteUbergraph_FrontEndRewards_ListRewards
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::ExecuteUbergraph_FrontEndRewards_ListRewards(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "ExecuteUbergraph_FrontEndRewards_ListRewards");

	Params::FrontEndRewards_ListRewards_C_ExecuteUbergraph_FrontEndRewards_ListRewards Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.BndEvt__ActionWidgetScroll_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bUsingGamepad                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::BndEvt__ActionWidgetScroll_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "BndEvt__ActionWidgetScroll_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature");

	Params::FrontEndRewards_ListRewards_C_BndEvt__ActionWidgetScroll_K2Node_ComponentBoundEvent_5_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.bUsingGamepad = bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.OnPrimaryAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::OnPrimaryAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "OnPrimaryAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.OnDeactivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.OnActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.OnNavigationRight
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.OnNavigationLeft
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.TransitionOutBegin
// (Event, Protected, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::TransitionOutBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "TransitionOutBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.TransitionInBegin
// (Event, Protected, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::TransitionInBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "TransitionInBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.DelayedCheckScroll
// (BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::DelayedCheckScroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "DelayedCheckScroll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "PreConstruct");

	Params::FrontEndRewards_ListRewards_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.InitDesignView
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::InitDesignView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "InitDesignView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.AddCard
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewards_ItemCard_C*              Card                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::AddCard(class URewards_ItemCard_C* Card)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "AddCard");

	Params::FrontEndRewards_ListRewards_C_AddCard Parms{};

	Parms.Card = Card;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SelectNextCard
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::SelectNextCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SelectNextCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.GetCardAlignment
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CardQueueIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CardListIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Alignment                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAnchors                         Anchors                                                (Parm, OutParm, NoDestructor)
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Offset                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Translation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DropShadowDepth                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::GetCardAlignment(int32 CardQueueIndex, int32 CardListIndex, struct FVector2D* Alignment, struct FAnchors* Anchors, float* Scale, float* Offset, float* Angle, struct FVector2D* Translation, float* DropShadowDepth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "GetCardAlignment");

	Params::FrontEndRewards_ListRewards_C_GetCardAlignment Parms{};

	Parms.CardQueueIndex = CardQueueIndex;
	Parms.CardListIndex = CardListIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Alignment != nullptr)
		*Alignment = std::move(Parms.Alignment);

	if (Anchors != nullptr)
		*Anchors = std::move(Parms.Anchors);

	if (Scale != nullptr)
		*Scale = Parms.Scale;

	if (Offset != nullptr)
		*Offset = Parms.Offset;

	if (Angle != nullptr)
		*Angle = Parms.Angle;

	if (Translation != nullptr)
		*Translation = std::move(Parms.Translation);

	if (DropShadowDepth != nullptr)
		*DropShadowDepth = Parms.DropShadowDepth;
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleLastSlideAnimFinished
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewards_ItemCard_C*              RewardsItemCard                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::HandleLastSlideAnimFinished(class URewards_ItemCard_C* RewardsItemCard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleLastSlideAnimFinished");

	Params::FrontEndRewards_ListRewards_C_HandleLastSlideAnimFinished Parms{};

	Parms.RewardsItemCard = RewardsItemCard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SelectPreviousCard
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::SelectPreviousCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SelectPreviousCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SetCardAlignment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          CardWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SelectionIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::SetCardAlignment(class UWidget* CardWidget, int32 SelectionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SetCardAlignment");

	Params::FrontEndRewards_ListRewards_C_SetCardAlignment Parms{};

	Parms.CardWidget = CardWidget;
	Parms.SelectionIndex = SelectionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SetItemDescription
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::SetItemDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SetItemDescription");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.PlayCardSlide
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewards_ItemCard_C*              RewardsItemCard                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   StaggerDelay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::PlayCardSlide(class URewards_ItemCard_C* RewardsItemCard, float StaggerDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "PlayCardSlide");

	Params::FrontEndRewards_ListRewards_C_PlayCardSlide Parms{};

	Parms.RewardsItemCard = RewardsItemCard;
	Parms.StaggerDelay = StaggerDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.ClearCards
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::ClearCards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "ClearCards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleCardClicked
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewards_ItemCard_C*              Card                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::HandleCardClicked(class URewards_ItemCard_C* Card)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleCardClicked");

	Params::FrontEndRewards_ListRewards_C_HandleCardClicked Parms{};

	Parms.Card = Card;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SetCardSelected
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class URewards_ItemCard_C*              Card                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::SetCardSelected(class URewards_ItemCard_C* Card)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SetCardSelected");

	Params::FrontEndRewards_ListRewards_C_SetCardSelected Parms{};

	Parms.Card = Card;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SelectCard
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InNewIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_ListRewards_C::SelectCard(int32 InNewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SelectCard");

	Params::FrontEndRewards_ListRewards_C_SelectCard Parms{};

	Parms.InNewIndex = InNewIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleOutroAnimFinished
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::HandleOutroAnimFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleOutroAnimFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleLastPopInFinished
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::HandleLastPopInFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleLastPopInFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SetArrowVisibility
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::SetArrowVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SetArrowVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleCollectAllAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Committed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::HandleCollectAllAction(bool* Committed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleCollectAllAction");

	Params::FrontEndRewards_ListRewards_C_HandleCollectAllAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Committed != nullptr)
		*Committed = Parms.Committed;
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleScrollAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Committed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::HandleScrollAction(bool* Committed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleScrollAction");

	Params::FrontEndRewards_ListRewards_C_HandleScrollAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Committed != nullptr)
		*Committed = Parms.Committed;
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleInspectAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Committed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::HandleInspectAction(bool* Committed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleInspectAction");

	Params::FrontEndRewards_ListRewards_C_HandleInspectAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Committed != nullptr)
		*Committed = Parms.Committed;
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.PopulateFromCardsList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class URewards_ItemCard_C*>      Cards                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEndRewards_ListRewards_C::PopulateFromCardsList(TArray<class URewards_ItemCard_C*>& Cards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "PopulateFromCardsList");

	Params::FrontEndRewards_ListRewards_C_PopulateFromCardsList Parms{};

	Parms.Cards = std::move(Cards);

	UObject::ProcessEvent(Func, &Parms);

	Cards = std::move(Parms.Cards);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.EnableInputActions
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::EnableInputActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "EnableInputActions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.DisableInputActions
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::DisableInputActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "DisableInputActions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.AddInputActions
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::AddInputActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "AddInputActions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.HandleTransitionInComplete
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::HandleTransitionInComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "HandleTransitionInComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.BindEvents
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::BindEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "BindEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.TickTransitionIn
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::TickTransitionIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "TickTransitionIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.SkipTransitionIn
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::SkipTransitionIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "SkipTransitionIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.Clear DisplayName and Description Widgets
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_ListRewards_C::Clear_DisplayName_and_Description_Widgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "Clear DisplayName and Description Widgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.Set DisplayName and Description Widget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UFrontEndRewards_ListRewards_C::Set_DisplayName_and_Description_Widget(class UFortItem* Item, const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "Set DisplayName and Description Widget");

	Params::FrontEndRewards_ListRewards_C_Set_DisplayName_and_Description_Widget Parms{};

	Parms.Item = Item;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.Get Item Description
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             OutDescription                                         (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UFrontEndRewards_ListRewards_C::Get_Item_Description(class UFortItem* Object, class FText* OutDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "Get Item Description");

	Params::FrontEndRewards_ListRewards_C_Get_Item_Description Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FrontEndRewards_ListRewards.FrontEndRewards_ListRewards_C.UpdateScrollHintVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUsingGamepad                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFrontEndRewards_ListRewards_C::UpdateScrollHintVisibility(bool IsUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_ListRewards_C", "UpdateScrollHintVisibility");

	Params::FrontEndRewards_ListRewards_C_UpdateScrollHintVisibility Parms{};

	Parms.IsUsingGamepad = IsUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}

}

