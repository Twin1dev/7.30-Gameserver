#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_Hoverboard_Running

#include "Basic.hpp"

#include "GCN_Hoverboard_Running_classes.hpp"
#include "GCN_Hoverboard_Running_parameters.hpp"


namespace SDK
{

// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.ExecuteUbergraph_GCN_Hoverboard_Running
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_Hoverboard_Running_C::ExecuteUbergraph_GCN_Hoverboard_Running(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "ExecuteUbergraph_GCN_Hoverboard_Running");

	Params::GCN_Hoverboard_Running_C_ExecuteUbergraph_GCN_Hoverboard_Running Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.Setup
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.BindSetup
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::BindSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "BindSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.ResetSpawnIn
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::ResetSpawnIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "ResetSpawnIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnDespawned
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::OnDespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnDespawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnSpawnedIn
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::OnSpawnedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnSpawnedIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.Moving
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::Moving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "Moving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.Idle
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "Idle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnJump
// (BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::OnJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.K2_OnReset
// (Event, Public, BlueprintEvent)

void AGCN_Hoverboard_Running_C::K2_OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "K2_OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_Hoverboard_Running_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "ReceiveTick");

	Params::GCN_Hoverboard_Running_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.Spawnin__UpdateFunc
// (BlueprintEvent)

void AGCN_Hoverboard_Running_C::Spawnin__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "Spawnin__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.Spawnin__FinishedFunc
// (BlueprintEvent)

void AGCN_Hoverboard_Running_C::Spawnin__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "Spawnin__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.IsPlayerJumping
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          InVec                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::IsPlayerJumping(const struct FVector& InVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "IsPlayerJumping");

	Params::GCN_Hoverboard_Running_C_IsPlayerJumping Parms{};

	Parms.InVec = std::move(InVec);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.PlayerIsDecelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::PlayerIsDecelerating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "PlayerIsDecelerating");

	Params::GCN_Hoverboard_Running_C_PlayerIsDecelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.PlayerIsAccelerating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::PlayerIsAccelerating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "PlayerIsAccelerating");

	Params::GCN_Hoverboard_Running_C_PlayerIsAccelerating Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnRemove");

	Params::GCN_Hoverboard_Running_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::OnActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnActive");

	Params::GCN_Hoverboard_Running_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.ClearSounds
// (Public, BlueprintCallable, BlueprintEvent)

void AGCN_Hoverboard_Running_C::ClearSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "ClearSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.GetHoverboardSkeletal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USkeletalMeshComponent*           Param_SK_HoverboardComponent                           (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_Hoverboard_Running_C::GetHoverboardSkeletal(class USkeletalMeshComponent** Param_SK_HoverboardComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "GetHoverboardSkeletal");

	Params::GCN_Hoverboard_Running_C_GetHoverboardSkeletal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SK_HoverboardComponent != nullptr)
		*Param_SK_HoverboardComponent = Parms.Param_SK_HoverboardComponent;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.GetPlayerLeanValuePercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float AGCN_Hoverboard_Running_C::GetPlayerLeanValuePercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "GetPlayerLeanValuePercent");

	Params::GCN_Hoverboard_Running_C_GetPlayerLeanValuePercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.OnExecute
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "OnExecute");

	Params::GCN_Hoverboard_Running_C_OnExecute Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GCN_Hoverboard_Running.GCN_Hoverboard_Running_C.WhileActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_Hoverboard_Running_C::WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_Hoverboard_Running_C", "WhileActive");

	Params::GCN_Hoverboard_Running_C_WhileActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

