#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LiveStreamerDescription

#include "Basic.hpp"

#include "BP_LiveStreamerDescription_classes.hpp"
#include "BP_LiveStreamerDescription_parameters.hpp"


namespace SDK
{

// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.Set Quest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Param_Quest                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LiveStreamerDescription_C::Set_Quest(class UFortQuestItem* Param_Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "Set Quest");

	Params::BP_LiveStreamerDescription_C_Set_Quest Parms{};

	Parms.Param_Quest = Param_Quest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.Update Visibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItemDefinition*         Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_LiveStreamerDescription_C::Update_Visibility(class UFortQuestItemDefinition* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "Update Visibility");

	Params::BP_LiveStreamerDescription_C_Update_Visibility Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.Is Viewer Quest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ViewerQuest                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_LiveStreamerDescription_C::Is_Viewer_Quest(bool* ViewerQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "Is Viewer Quest");

	Params::BP_LiveStreamerDescription_C_Is_Viewer_Quest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ViewerQuest != nullptr)
		*ViewerQuest = Parms.ViewerQuest;
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.Setup Broadcaster Name
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_LiveStreamerDescription_C::Setup_Broadcaster_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "Setup Broadcaster Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.Update Viewer Note Visibility
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_LiveStreamerDescription_C::Update_Viewer_Note_Visibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "Update Viewer Note Visibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.SetViewerQuestText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_LiveStreamerDescription_C::SetViewerQuestText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "SetViewerQuestText");

	Params::BP_LiveStreamerDescription_C_SetViewerQuestText Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LiveStreamerDescription.BP_LiveStreamerDescription_C.GetBroadcasterName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             BroadcasterName                                        (Parm, OutParm)

void UBP_LiveStreamerDescription_C::GetBroadcasterName(class FText* BroadcasterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LiveStreamerDescription_C", "GetBroadcasterName");

	Params::BP_LiveStreamerDescription_C_GetBroadcasterName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BroadcasterName != nullptr)
		*BroadcasterName = std::move(Parms.BroadcasterName);
}

}

