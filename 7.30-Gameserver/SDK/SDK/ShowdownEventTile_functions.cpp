#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownEventTile

#include "Basic.hpp"

#include "ShowdownEventTile_classes.hpp"
#include "ShowdownEventTile_parameters.hpp"


namespace SDK
{

// Function ShowdownEventTile.ShowdownEventTile_C.OnWindowSelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UShowdownEventTile_C::OnWindowSelected__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "OnWindowSelected__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.ExecuteUbergraph_ShowdownEventTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShowdownEventTile_C::ExecuteUbergraph_ShowdownEventTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "ExecuteUbergraph_ShowdownEventTile");

	Params::ShowdownEventTile_C_ExecuteUbergraph_ShowdownEventTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.EventColorizeDispatch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortTournamentDisplayInfo       DisplayInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UShowdownEventTile_C::EventColorizeDispatch(const struct FFortTournamentDisplayInfo& DisplayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "EventColorizeDispatch");

	Params::ShowdownEventTile_C_EventColorizeDispatch Parms{};

	Parms.DisplayInfo = std::move(DisplayInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.EventColorize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortTournamentDisplayInfo       DisplayInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UShowdownEventTile_C::EventColorize(const struct FFortTournamentDisplayInfo& DisplayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "EventColorize");

	Params::ShowdownEventTile_C_EventColorize Parms{};

	Parms.DisplayInfo = std::move(DisplayInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.EventSetState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortShowdownEventState                 EventState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShowdownEventTile_C::EventSetState(EFortShowdownEventState EventState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "EventSetState");

	Params::ShowdownEventTile_C_EventSetState Parms{};

	Parms.EventState = EventState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UShowdownEventTile_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "OnRemovedFromFocusPath");

	Params::ShowdownEventTile_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UShowdownEventTile_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "OnAddedToFocusPath");

	Params::ShowdownEventTile_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UShowdownEventTile_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UShowdownEventTile_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UShowdownEventTile_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UShowdownEventTile_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.EventResize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Out                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UShowdownEventTile_C::EventResize(bool Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "EventResize");

	Params::ShowdownEventTile_C_EventResize Parms{};

	Parms.Out = Out;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UShowdownEventTile_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UShowdownEventTile_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ShowdownEventTile.ShowdownEventTile_C.EventIntro
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UShowdownEventTile_C::EventIntro(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "EventIntro");

	Params::ShowdownEventTile_C_EventIntro Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ShowdownEventTile.ShowdownEventTile_C.SetData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TournamentInfo                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           EventInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UShowdownEventTile_C::SetData(const class FString& TournamentInfo, const class FString& EventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShowdownEventTile_C", "SetData");

	Params::ShowdownEventTile_C_SetData Parms{};

	Parms.TournamentInfo = std::move(TournamentInfo);
	Parms.EventInfo = std::move(EventInfo);

	UObject::ProcessEvent(Func, &Parms);
}

}

