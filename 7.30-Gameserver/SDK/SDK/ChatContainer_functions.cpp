#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChatContainer

#include "Basic.hpp"

#include "ChatContainer_classes.hpp"
#include "ChatContainer_parameters.hpp"


namespace SDK
{

// Function ChatContainer.ChatContainer_C.ExecuteUbergraph_ChatContainer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChatContainer_C::ExecuteUbergraph_ChatContainer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "ExecuteUbergraph_ChatContainer");

	Params::ChatContainer_C_ExecuteUbergraph_ChatContainer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChatContainer_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "Tick");

	Params::ChatContainer_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChatContainer_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChatContainer.ChatContainer_C.BndEvt__ConsoleChatShortcut_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChatContainer_C::BndEvt__ConsoleChatShortcut_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "BndEvt__ConsoleChatShortcut_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature");

	Params::ChatContainer_C_BndEvt__ConsoleChatShortcut_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.OnSendButtonDisplayChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowSendButton                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChatContainer_C::OnSendButtonDisplayChanged(bool bShowSendButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "OnSendButtonDisplayChanged");

	Params::ChatContainer_C_OnSendButtonDisplayChanged Parms{};

	Parms.bShowSendButton = bShowSendButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.OnChatOpenChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShouldBeOpen                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChatContainer_C::OnChatOpenChanged(bool bShouldBeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "OnChatOpenChanged");

	Params::ChatContainer_C_OnChatOpenChanged Parms{};

	Parms.bShouldBeOpen = bShouldBeOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChatContainer_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChatContainer.ChatContainer_C.HandleCursorModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChatContainer_C::HandleCursorModeChanged(bool bEnabled, class FName ActionName, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "HandleCursorModeChanged");

	Params::ChatContainer_C_HandleCursorModeChanged Parms{};

	Parms.bEnabled = bEnabled;
	Parms.ActionName = ActionName;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.OnSizeAnimationComplete
// (Public, BlueprintCallable, BlueprintEvent)

void UChatContainer_C::OnSizeAnimationComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "OnSizeAnimationComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChatContainer.ChatContainer_C.HandleChatOpenChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bChatShouldBeOpen                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChatContainer_C::HandleChatOpenChanged(bool bChatShouldBeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "HandleChatOpenChanged");

	Params::ChatContainer_C_HandleChatOpenChanged Parms{};

	Parms.bChatShouldBeOpen = bChatShouldBeOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChatContainer.ChatContainer_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UChatContainer_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatContainer_C", "OnKeyDown");

	Params::ChatContainer_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

