#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteUI

#include "Basic.hpp"

#include "FortniteUI_classes.hpp"
#include "FortniteUI_parameters.hpp"


namespace SDK
{

// Function FortniteUI.FortTeamMemberEntryBase.OnTeamMemberEstablished
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTeamMemberEntryBase::OnTeamMemberEstablished(const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberEntryBase", "OnTeamMemberEstablished");

	Params::FortTeamMemberEntryBase_OnTeamMemberEstablished Parms{};

	Parms.UniqueId = std::move(UniqueId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaAccountContext.GetBattleBookPurchaseLimit
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   MaxNumLevelsPossibleToPurchase                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BonusLevelsGranted                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAccountContext::GetBattleBookPurchaseLimit(int32* MaxNumLevelsPossibleToPurchase, int32* BonusLevelsGranted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "GetBattleBookPurchaseLimit");

	Params::AthenaAccountContext_GetBattleBookPurchaseLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MaxNumLevelsPossibleToPurchase != nullptr)
		*MaxNumLevelsPossibleToPurchase = Parms.MaxNumLevelsPossibleToPurchase;

	if (BonusLevelsGranted != nullptr)
		*BonusLevelsGranted = Parms.BonusLevelsGranted;
}


// Function FortniteUI.AthenaAccountContext.GetCurrentSeasonDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaSeasonItemDefinition*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaSeasonItemDefinition* UAthenaAccountContext::GetCurrentSeasonDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "GetCurrentSeasonDefinition");

	Params::AthenaAccountContext_GetCurrentSeasonDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaAccountContext.SimulateBattleBookPurchase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   NumLevelsToPurchase                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BonusLevelsGranted                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverLimit                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAccountContext::SimulateBattleBookPurchase(int32 NumLevelsToPurchase, int32* BonusLevelsGranted, bool* bOverLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "SimulateBattleBookPurchase");

	Params::AthenaAccountContext_SimulateBattleBookPurchase Parms{};

	Parms.NumLevelsToPurchase = NumLevelsToPurchase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BonusLevelsGranted != nullptr)
		*BonusLevelsGranted = Parms.BonusLevelsGranted;

	if (bOverLimit != nullptr)
		*bOverLimit = Parms.bOverLimit;
}


// Function FortniteUI.AthenaAccountContext.GetCurrentSeasonName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaAccountContext::GetCurrentSeasonName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "GetCurrentSeasonName");

	Params::AthenaAccountContext_GetCurrentSeasonName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaAccountContext.GetCurrentSeasonNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaAccountContext::GetCurrentSeasonNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "GetCurrentSeasonNumber");

	Params::AthenaAccountContext_GetCurrentSeasonNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaAccountContext.IsAtMaxBattlePassTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaAccountContext::IsAtMaxBattlePassTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "IsAtMaxBattlePassTier");

	Params::AthenaAccountContext_IsAtMaxBattlePassTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaAccountContext.ShouldReplaceBattleStarsWithAlternateReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaAccountContext::ShouldReplaceBattleStarsWithAlternateReward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAccountContext", "ShouldReplaceBattleStarsWithAlternateReward");

	Params::AthenaAccountContext_ShouldReplaceBattleStarsWithAlternateReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementInventoryPanel.AddItemStackToMulch
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::AddItemStackToMulch(class UFortItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "AddItemStackToMulch");

	Params::FortItemManagementInventoryPanel_AddItemStackToMulch Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.AdvanceSelection
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::AdvanceSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "AdvanceSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::CycleSortType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "CycleSortType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.GetShouldPrioritizeFavorites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel::GetShouldPrioritizeFavorites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "GetShouldPrioritizeFavorites");

	Params::FortItemManagementInventoryPanel_GetShouldPrioritizeFavorites Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleCraftItemStarted
// (Final, Native, Private)

void UFortItemManagementInventoryPanel::HandleCraftItemStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleCraftItemStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::HandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleCursorModeChanged");

	Params::FortItemManagementInventoryPanel_HandleCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::HandleCursorModeChangedBP(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleCursorModeChangedBP");

	Params::FortItemManagementInventoryPanel_HandleCursorModeChangedBP Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleCustomInventoryFilterChanged
// (Final, Native, Protected)

void UFortItemManagementInventoryPanel::HandleCustomInventoryFilterChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleCustomInventoryFilterChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleDifferentFilterSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleDifferentFilterSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleDifferentFilterSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleDifferentFrontendInventoryFilterSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleDifferentFrontendInventoryFilterSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleDifferentFrontendInventoryFilterSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleDifferentSortTypeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleDifferentSortTypeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleDifferentSortTypeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabButtonCreated
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButton*                    TabButton                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::HandleFilterTabButtonCreated(class FName TabNameID, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleFilterTabButtonCreated");

	Params::FortItemManagementInventoryPanel_HandleFilterTabButtonCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::HandleFilterTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleFilterTabSelected");

	Params::FortItemManagementInventoryPanel_HandleFilterTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleFocusEquipSlotsBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleFocusEquipSlotsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleFocusEquipSlotsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleInventoryUpdatedEvent
// (Final, Native, Private)

void UFortItemManagementInventoryPanel::HandleInventoryUpdatedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleInventoryUpdatedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleQuickBarChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::HandleQuickBarChangedBP(EFortQuickBars QuickBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleQuickBarChangedBP");

	Params::FortItemManagementInventoryPanel_HandleQuickBarChangedBP Parms{};

	Parms.QuickBarType = QuickBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementInventoryPanel.HandleSetOfItemsToMulchChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementInventoryPanel::HandleSetOfItemsToMulchChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "HandleSetOfItemsToMulchChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementInventoryPanel.MarkAllItemsAsSeen
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::MarkAllItemsAsSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "MarkAllItemsAsSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.RefreshCraftingSort
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::RefreshCraftingSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "RefreshCraftingSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.RequestFocusEquipSlots
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::RequestFocusEquipSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "RequestFocusEquipSlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.SetFilter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             FilterName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::SetFilter(const class FName FilterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "SetFilter");

	Params::FortItemManagementInventoryPanel_SetFilter Parms{};

	Parms.FilterName = FilterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.SetSortType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EInventoryContentSortType               SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementInventoryPanel::SetSortType(EInventoryContentSortType SortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "SetSortType");

	Params::FortItemManagementInventoryPanel_SetSortType Parms{};

	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.SwitchPanelFocus
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::SwitchPanelFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "SwitchPanelFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.TogglePrioritizeFavorites
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::TogglePrioritizeFavorites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "TogglePrioritizeFavorites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.ToggleTileSize
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::ToggleTileSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "ToggleTileSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.UpdateSchematicTiles
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementInventoryPanel::UpdateSchematicTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "UpdateSchematicTiles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementInventoryPanel.GetQualifiedFilterDisplayName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemManagementInventoryPanel::GetQualifiedFilterDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "GetQualifiedFilterDisplayName");

	Params::FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementInventoryPanel.GetSupportedSortTypesForCurrentInventory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EInventoryContentSortType>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EInventoryContentSortType> UFortItemManagementInventoryPanel::GetSupportedSortTypesForCurrentInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "GetSupportedSortTypesForCurrentInventory");

	Params::FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementInventoryPanel.GetUpgradeItemDefinitionsForCurrentInventory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItemDefinition*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItemDefinition*> UFortItemManagementInventoryPanel::GetUpgradeItemDefinitionsForCurrentInventory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "GetUpgradeItemDefinitionsForCurrentInventory");

	Params::FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementInventoryPanel.IsSwitchPanelAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementInventoryPanel::IsSwitchPanelAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementInventoryPanel", "IsSwitchPanelAvailable");

	Params::FortItemManagementInventoryPanel_IsSwitchPanelAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDElementWidget.HandleOnHUDElementVisibilityChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTagContainer            HiddenHUDElementTags                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortHUDElementWidget::HandleOnHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenHUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDElementWidget", "HandleOnHUDElementVisibilityChanged");

	Params::FortHUDElementWidget_HandleOnHUDElementVisibilityChanged Parms{};

	Parms.HiddenHUDElementTags = std::move(HiddenHUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDElementWidget.HandleOnHUDResetToDefaults
// (Final, Native, Protected)

void UFortHUDElementWidget::HandleOnHUDResetToDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDElementWidget", "HandleOnHUDResetToDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDElementWidget.OnVisibilitySetEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDElementWidget::OnVisibilitySetEvent(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDElementWidget", "OnVisibilitySetEvent");

	Params::FortHUDElementWidget_OnVisibilitySetEvent Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaAIKillsBase.SetKillsSourcePlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAIKillsBase::SetKillsSourcePlayerController(class AFortPlayerControllerAthena* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAIKillsBase", "SetKillsSourcePlayerController");

	Params::AthenaAIKillsBase_SetKillsSourcePlayerController Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaAIKillsBase.SetKillsSourcePlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAIKillsBase::SetKillsSourcePlayerState(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAIKillsBase", "SetKillsSourcePlayerState");

	Params::AthenaAIKillsBase_SetKillsSourcePlayerState Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaAwardAlertBase.OnAwardGranted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAwardItemDefinition*         AwardDefinition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAwardAlertBase::OnAwardGranted(class UFortAwardItemDefinition* AwardDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAwardAlertBase", "OnAwardGranted");

	Params::AthenaAwardAlertBase_OnAwardGranted Parms{};

	Parms.AwardDefinition = AwardDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaAwardAlertBase.SetDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           PlayerViewModel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaAwardAlertBase::SetDataSource(class UAthenaPlayerViewModel* PlayerViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaAwardAlertBase", "SetDataSource");

	Params::AthenaAwardAlertBase_SetDataSource Parms{};

	Parms.PlayerViewModel = PlayerViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTravelLogFormatting.FormatTravelLogEntry
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaTravelLogEntry            Entry                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaTravelLogFormatting::FormatTravelLogEntry(class UObject* WorldContextObject, const struct FAthenaTravelLogEntry& Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AthenaTravelLogFormatting", "FormatTravelLogEntry");

	Params::AthenaTravelLogFormatting_FormatTravelLogEntry Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Entry = std::move(Entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaTravelLogFormatting.IsTravelLogTextDisplayEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaTravelLogFormatting::IsTravelLogTextDisplayEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AthenaTravelLogFormatting", "IsTravelLogTextDisplayEnabled");

	Params::AthenaTravelLogFormatting_IsTravelLogTextDisplayEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaTravelLogFormatting.ShouldDisplayText
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAthenaTravelLogEntry            Entry                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaTravelLogFormatting::ShouldDisplayText(const struct FAthenaTravelLogEntry& Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AthenaTravelLogFormatting", "ShouldDisplayText");

	Params::AthenaTravelLogFormatting_ShouldDisplayText Parms{};

	Parms.Entry = std::move(Entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActivatablePanel.RestoreCenterWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          FallbackWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanel::RestoreCenterWidget(class UWidget* FallbackWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanel", "RestoreCenterWidget");

	Params::FortActivatablePanel_RestoreCenterWidget Parms{};

	Parms.FallbackWidget = FallbackWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortActivatablePanel.RestoreScrollWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          FallbackWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanel::RestoreScrollWidget(class UWidget* FallbackWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanel", "RestoreScrollWidget");

	Params::FortActivatablePanel_RestoreScrollWidget Parms{};

	Parms.FallbackWidget = FallbackWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIMessageItemWidget.OnBeginRemove
// (Event, Protected, BlueprintEvent)

void UFortUIMessageItemWidget::OnBeginRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageItemWidget", "OnBeginRemove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIMessageItemWidget.OnReturnedToPool
// (Event, Protected, BlueprintEvent)

void UFortUIMessageItemWidget::OnReturnedToPool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageItemWidget", "OnReturnedToPool");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIMessageItemWidget.OnStackSizeChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   OldStackSize                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIMessageItemWidget::OnStackSizeChanged(int32 OldStackSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageItemWidget", "OnStackSizeChanged");

	Params::FortUIMessageItemWidget_OnStackSizeChanged Parms{};

	Parms.OldStackSize = OldStackSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.DynamicHandleLoadingScreenVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    Param_IsVisible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::DynamicHandleLoadingScreenVisibilityChanged(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "DynamicHandleLoadingScreenVisibilityChanged");

	Params::FortUIStateWidget_NUI_DynamicHandleLoadingScreenVisibilityChanged Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_NUI.OnEnterState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            PreviousUIState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::OnEnterState(EFortUIState PreviousUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "OnEnterState");

	Params::FortUIStateWidget_NUI_OnEnterState Parms{};

	Parms.PreviousUIState = PreviousUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.OnExitState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            NextUIState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::OnExitState(EFortUIState NextUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "OnExitState");

	Params::FortUIStateWidget_NUI_OnExitState Parms{};

	Parms.NextUIState = NextUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.OnFrontEndVisibilityUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::OnFrontEndVisibilityUpdated(bool bHideHeader, bool bHideFooter, bool bHideChatWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "OnFrontEndVisibilityUpdated");

	Params::FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated Parms{};

	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.OnHUDScaleChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HUDScale                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::OnHUDScaleChanged(float HUDScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "OnHUDScaleChanged");

	Params::FortUIStateWidget_NUI_OnHUDScaleChanged Parms{};

	Parms.HUDScale = HUDScale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.OnLoadingScreenVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    Param_IsVisible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::OnLoadingScreenVisibilityChanged(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "OnLoadingScreenVisibilityChanged");

	Params::FortUIStateWidget_NUI_OnLoadingScreenVisibilityChanged Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_NUI.PopAllContentWidgets
// (Final, Native, Public, BlueprintCallable)

void UFortUIStateWidget_NUI::PopAllContentWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PopAllContentWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_NUI.PopContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortUIStateWidget_NUI::PopContentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PopContentWidget");

	Params::FortUIStateWidget_NUI_PopContentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_NUI.PopContentWidgetInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FContentPushState                State                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortUIStateWidget_NUI::PopContentWidgetInternal(const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PopContentWidgetInternal");

	Params::FortUIStateWidget_NUI_PopContentWidgetInternal Parms{};

	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::PushContentWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PushContentWidget");

	Params::FortUIStateWidget_NUI_PushContentWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidgetAdvanced
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::PushContentWidgetAdvanced(class UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PushContentWidgetAdvanced");

	Params::FortUIStateWidget_NUI_PushContentWidgetAdvanced Parms{};

	Parms.Widget = Widget;
	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidgetInternal
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FContentPushState                State                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "PushContentWidgetInternal");

	Params::FortUIStateWidget_NUI_PushContentWidgetInternal Parms{};

	Parms.Widget = Widget;
	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_NUI.RequestOpenSocialMenu
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUIStateWidget_NUI::RequestOpenSocialMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "RequestOpenSocialMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIStateWidget_NUI.SetFrontEndVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_NUI::SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_NUI", "SetFrontEndVisibility");

	Params::FortUIStateWidget_NUI_SetFrontEndVisibility Parms{};

	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleCursorModeChanging
// (Final, Native, Protected)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleCursorModeChanging(bool bCursorModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleCursorModeChanging");

	Params::AthenaHUDBase_HandleCursorModeChanging Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleEnteredVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleEnteredVolume(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleEnteredVolume");

	Params::AthenaHUDBase_HandleEnteredVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleExitVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleExitVolume(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleExitVolume");

	Params::AthenaHUDBase_HandleExitVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleVolumeLoaded
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleVolumeLoaded(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleVolumeLoaded");

	Params::AthenaHUDBase_HandleVolumeLoaded Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleVolumeStateChanged
// (Final, Native, Protected)
// Parameters:
// EVolumeState                            NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleVolumeStateChanged(EVolumeState NewState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleVolumeStateChanged");

	Params::AthenaHUDBase_HandleVolumeStateChanged Parms{};

	Parms.NewState = NewState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.HandleVolumeUnloaded
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::HandleVolumeUnloaded(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "HandleVolumeUnloaded");

	Params::AthenaHUDBase_HandleVolumeUnloaded Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDBase.OnPlaylistExtensionWidgetCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPlaylistUIExtensionSlot                ExtensionSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::OnPlaylistExtensionWidgetCreated(EPlaylistUIExtensionSlot ExtensionSlot, class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "OnPlaylistExtensionWidgetCreated");

	Params::AthenaHUDBase_OnPlaylistExtensionWidgetCreated Parms{};

	Parms.ExtensionSlot = ExtensionSlot;
	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDBase.SetFullScreenMapVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::SetFullScreenMapVisibility(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "SetFullScreenMapVisibility");

	Params::AthenaHUDBase_SetFullScreenMapVisibility Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDBase.SetQuickBarNative
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShouldDoQuickBarNative                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::SetQuickBarNative(bool bShouldDoQuickBarNative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "SetQuickBarNative");

	Params::AthenaHUDBase_SetQuickBarNative Parms{};

	Parms.bShouldDoQuickBarNative = bShouldDoQuickBarNative;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDBase.ViewModelChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaPlayerViewModel*           ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDBase::ViewModelChanged(class UAthenaPlayerViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDBase", "ViewModelChanged");

	Params::AthenaHUDBase_ViewModelChanged Parms{};

	Parms.ViewModel = ViewModel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadManagementScreenBase.ClearSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::ClearSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "ClearSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleBackInputAction
// (Final, Native, Protected, BlueprintCallable)

void UFortSquadManagementScreenBase::HandleBackInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleBackInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleClosePickerInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleClosePickerInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleClosePickerInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleCyclePickerSortInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleCyclePickerSortInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleCyclePickerSortInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleDifferentSquadSlotSelected
// (Native, Protected)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleDifferentSquadSlotSelected(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleDifferentSquadSlotSelected");

	Params::FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleInspectInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleInspectInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleInspectInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleInventoryInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleInventoryInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleInventoryInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleManageInputAction
// (Final, Native, Protected)

void UFortSquadManagementScreenBase::HandleManageInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleManageInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleNextSquadInputAction
// (Event, Public, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleNextSquadInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleNextSquadInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleOpenSquadSlot
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleOpenSquadSlot(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleOpenSquadSlot");

	Params::FortSquadManagementScreenBase_HandleOpenSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandlePickerSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandlePickerSelectionChanged(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandlePickerSelectionChanged");

	Params::FortSquadManagementScreenBase_HandlePickerSelectionChanged Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandlePickerSelectionCommitted
// (Final, Native, Private)
// Parameters:
// class UFortItem*                        CommittedItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandlePickerSelectionCommitted(class UFortItem* CommittedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandlePickerSelectionCommitted");

	Params::FortSquadManagementScreenBase_HandlePickerSelectionCommitted Parms{};

	Parms.CommittedItem = CommittedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandlePreviousSquadInputAction
// (Event, Public, BlueprintEvent)

void UFortSquadManagementScreenBase::HandlePreviousSquadInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandlePreviousSquadInputAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleSelectPickerSlotInputAction
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleSelectPickerSlotInputAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleSelectPickerSlotInputAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleShouldAutoSlotSurvivorSquadsChanged
// (Final, Native, Private)

void UFortSquadManagementScreenBase::HandleShouldAutoSlotSurvivorSquadsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleShouldAutoSlotSurvivorSquadsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleSquadSlotPickerHidden
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadSlotPickerHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleSquadSlotPickerHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleSquadSlotPickerShown
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadSlotPickerShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleSquadSlotPickerShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleSquadStateChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadManagementScreenBase::HandleSquadStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleSquadStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadManagementScreenBase.HandleViewInAll
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::HandleViewInAll(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "HandleViewInAll");

	Params::FortSquadManagementScreenBase_HandleViewInAll Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.NavigateToSquadSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::NavigateToSquadSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "NavigateToSquadSlot");

	Params::FortSquadManagementScreenBase_NavigateToSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.SelectNextSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::SelectNextSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "SelectNextSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.SelectPreviousSquad
// (Final, Native, Public, BlueprintCallable)

void UFortSquadManagementScreenBase::SelectPreviousSquad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "SelectPreviousSquad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.SelectSquadWithOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::SelectSquadWithOffset(int32 Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "SelectSquadWithOffset");

	Params::FortSquadManagementScreenBase_SelectSquadWithOffset Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadManagementScreenBase::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "SetIdOfSquadToManageBP");

	Params::FortSquadManagementScreenBase_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadManagementScreenBase.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadManagementScreenBase::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "GetIdOfSquadToManageBP");

	Params::FortSquadManagementScreenBase_GetIdOfSquadToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadManagementScreenBase.GetNumUnlockedSquads
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSquadManagementScreenBase::GetNumUnlockedSquads() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "GetNumUnlockedSquads");

	Params::FortSquadManagementScreenBase_GetNumUnlockedSquads Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadManagementScreenBase.TryGetAttributeValueFromSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetAttributeValueFromSquad(float* OutValue, const struct FGameplayAttribute& Attribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "TryGetAttributeValueFromSquad");

	Params::FortSquadManagementScreenBase_TryGetAttributeValueFromSquad Parms{};

	Parms.Attribute = std::move(Attribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadManagementScreenBase.TryGetSquadMainAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               OutGameplayAttribute                                   (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetSquadMainAttribute(struct FGameplayAttribute* OutGameplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "TryGetSquadMainAttribute");

	Params::FortSquadManagementScreenBase_TryGetSquadMainAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGameplayAttribute != nullptr)
		*OutGameplayAttribute = std::move(Parms.OutGameplayAttribute);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadManagementScreenBase.TryGetSquadTeamAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               OutGameplayAttribute                                   (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetSquadTeamAttribute(struct FGameplayAttribute* OutGameplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "TryGetSquadTeamAttribute");

	Params::FortSquadManagementScreenBase_TryGetSquadTeamAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGameplayAttribute != nullptr)
		*OutGameplayAttribute = std::move(Parms.OutGameplayAttribute);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadManagementScreenBase.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadManagementScreenBase::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadManagementScreenBase", "TryGetStaticSquadDataBP");

	Params::FortSquadManagementScreenBase_TryGetStaticSquadDataBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSquadManagementScreen.PlayFeedbackForSlottingPerson
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCharacter*                   Character                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSquadManagementScreen::PlayFeedbackForSlottingPerson(class UFortCharacter* Character, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSquadManagementScreen", "PlayFeedbackForSlottingPerson");

	Params::FortHeroSquadManagementScreen_PlayFeedbackForSlottingPerson Parms{};

	Parms.Character = Character;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTeamMemberButton.OnFriendshipStatusDetermined
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortFriendRequestStatus                RequestStatus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamMemberButton::OnFriendshipStatusDetermined(EFortFriendRequestStatus RequestStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamMemberButton", "OnFriendshipStatusDetermined");

	Params::AthenaTeamMemberButton_OnFriendshipStatusDetermined Parms{};

	Parms.RequestStatus = RequestStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTeamMemberButton.OpenSocialPanel
// (Event, Public, BlueprintEvent)

void UAthenaTeamMemberButton::OpenSocialPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamMemberButton", "OpenSocialPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnCursorModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDBase::OnCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnCursorModeChanged");

	Params::AthenaSpectatorHUDBase_OnCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnIndicatorModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIndicatorsEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDBase::OnIndicatorModeChanged(bool bIndicatorsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnIndicatorModeChanged");

	Params::AthenaSpectatorHUDBase_OnIndicatorModeChanged Parms{};

	Parms.bIndicatorsEnabled = bIndicatorsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnNameplatesEnabledChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bInNameplatesEnabled                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDBase::OnNameplatesEnabledChanged(bool bInNameplatesEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnNameplatesEnabledChanged");

	Params::AthenaSpectatorHUDBase_OnNameplatesEnabledChanged Parms{};

	Parms.bInNameplatesEnabled = bInNameplatesEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnPlayerTargetingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTargeting                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDBase::OnPlayerTargetingChanged(bool bIsTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnPlayerTargetingChanged");

	Params::AthenaSpectatorHUDBase_OnPlayerTargetingChanged Parms{};

	Parms.bIsTargeting = bIsTargeting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnSpectatorViewTargetChanged
// (Final, Native, Private)

void UAthenaSpectatorHUDBase::OnSpectatorViewTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnSpectatorViewTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDBase.OnUnableToPerformAction
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            FailedReason                                           (Parm, NativeAccessSpecifierPublic)
// class FText                             FailureText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDBase::OnUnableToPerformAction(const struct FGameplayTagContainer& FailedReason, const class FText& FailureText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDBase", "OnUnableToPerformAction");

	Params::AthenaSpectatorHUDBase_OnUnableToPerformAction Parms{};

	Parms.FailedReason = std::move(FailedReason);
	Parms.FailureText = std::move(FailureText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.BacchusHUDElement.HandleInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusHUDElement::HandleInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusHUDElement", "HandleInputMethodChanged");

	Params::BacchusHUDElement_HandleInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusHUDElement.OnHUDStateUpdate
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortHUDState                    NewState                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UBacchusHUDElement::OnHUDStateUpdate(const struct FFortHUDState& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusHUDElement", "OnHUDStateUpdate");

	Params::BacchusHUDElement_OnHUDStateUpdate Parms{};

	Parms.NewState = std::move(NewState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusHUDElement.BP_GetMobileVisualType
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UBacchusHUDElement::BP_GetMobileVisualType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusHUDElement", "BP_GetMobileVisualType");

	Params::BacchusHUDElement_BP_GetMobileVisualType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.BacchusButton.OnClicked
// (Native, Event, Public, BlueprintEvent)

void UBacchusButton::OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusButton", "OnClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusButton.SetButtonDisplayScale
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewDisplayScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusButton::SetButtonDisplayScale(float NewDisplayScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusButton", "SetButtonDisplayScale");

	Params::BacchusButton_SetButtonDisplayScale Parms{};

	Parms.NewDisplayScale = NewDisplayScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusButton.SetButtonSize
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewButtonSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusButton::SetButtonSize(float NewButtonSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusButton", "SetButtonSize");

	Params::BacchusButton_SetButtonSize Parms{};

	Parms.NewButtonSize = NewButtonSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusButton.SetButtonSprite
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPaperSprite*                     NewSprite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusButton::SetButtonSprite(class UPaperSprite* NewSprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusButton", "SetButtonSprite");

	Params::BacchusButton_SetButtonSprite Parms{};

	Parms.NewSprite = NewSprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUserWidget.AddGrantCheatMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InstanceId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUserWidget::AddGrantCheatMenu(const class FString& TemplateId, const class FString& InstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUserWidget", "AddGrantCheatMenu");

	Params::FortUserWidget_AddGrantCheatMenu Parms{};

	Parms.TemplateId = std::move(TemplateId);
	Parms.InstanceId = std::move(InstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUserWidget.AddStoreCheatMenu
// (Final, Native, Public, BlueprintCallable)

void UFortUserWidget::AddStoreCheatMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUserWidget", "AddStoreCheatMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementEquipSlot.UpdateInventoryChangedDelegate
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementEquipSlot::UpdateInventoryChangedDelegate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementEquipSlot", "UpdateInventoryChangedDelegate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleActiveGridScreenActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleActiveGridScreenActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleActiveGridScreenActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleActiveGridScreenActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleEliminatedGridScreenActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleEliminatedGridScreenActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleEliminatedGridScreenActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleEliminatedGridScreenActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleMatchStatusActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleMatchStatusActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleMatchStatusActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleMatchStatusActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleMatchStatusScreenActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleMatchStatusScreenActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleMatchStatusScreenActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleMatchStatusScreenActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleScoreboardScreenActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleScoreboardScreenActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleScoreboardScreenActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleScoreboardScreenActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaBroadcastHUDBase.OnToggleSquadStatusActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDBase::OnToggleSquadStatusActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDBase", "OnToggleSquadStatusActionExecuted");

	Params::AthenaBroadcastHUDBase_OnToggleSquadStatusActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.CMSContext.GetLatestAthenaPlaylistData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAthenaLatestPlaylistData        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaLatestPlaylistData UCMSContext::GetLatestAthenaPlaylistData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestAthenaPlaylistData");

	Params::CMSContext_GetLatestAthenaPlaylistData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.GetLatestCreativeAds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCreativeAdSource                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FCreativeAdSource UCMSContext::GetLatestCreativeAds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestCreativeAds");

	Params::CMSContext_GetLatestCreativeAds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.GetLatestEmergencyNotice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAthenaNewsEntry                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaNewsEntry UCMSContext::GetLatestEmergencyNotice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestEmergencyNotice");

	Params::CMSContext_GetLatestEmergencyNotice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.GetLatestNews
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAthenaNews                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaNews UCMSContext::GetLatestNews()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestNews");

	Params::CMSContext_GetLatestNews Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.GetLatestPCBInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// const struct FKoreanCafeSource          ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FKoreanCafeSource UCMSContext::GetLatestPCBInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestPCBInfo");

	Params::CMSContext_GetLatestPCBInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.GetLatestShowdownTournamentData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FShowdownLatestTournamentData    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FShowdownLatestTournamentData UCMSContext::GetLatestShowdownTournamentData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "GetLatestShowdownTournamentData");

	Params::CMSContext_GetLatestShowdownTournamentData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.MarkNewsAsViewed
// (Final, Native, Public, BlueprintCallable)

void UCMSContext::MarkNewsAsViewed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "MarkNewsAsViewed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CMSContext.MarkPlaylistInformationAsViewed
// (Final, Native, Public, BlueprintCallable)

void UCMSContext::MarkPlaylistInformationAsViewed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "MarkPlaylistInformationAsViewed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CMSContext.IsNewNewsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCMSContext::IsNewNewsAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "IsNewNewsAvailable");

	Params::CMSContext_IsNewNewsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CMSContext.IsNewPlaylistInformationAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCMSContext::IsNewPlaylistInformationAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CMSContext", "IsNewPlaylistInformationAvailable");

	Params::CMSContext_IsNewPlaylistInformationAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaBroadcastHUDMenuStatusBase.InventoryActivated
// (Event, Public, BlueprintEvent)

void UAthenaBroadcastHUDMenuStatusBase::InventoryActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDMenuStatusBase", "InventoryActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaBroadcastHUDMenuStatusBase.MapActivated
// (Event, Public, BlueprintEvent)

void UAthenaBroadcastHUDMenuStatusBase::MapActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDMenuStatusBase", "MapActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase.AddHUDMenuStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaBroadcastHUDMenuStatusBase*HUDMenuStatusWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDMenuStatusLayerBase::AddHUDMenuStatus(class UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDMenuStatusLayerBase", "AddHUDMenuStatus");

	Params::AthenaBroadcastHUDMenuStatusLayerBase_AddHUDMenuStatus Parms{};

	Parms.HUDMenuStatusWidget = HUDMenuStatusWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase.RemoveHUDMenuStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaBroadcastHUDMenuStatusBase*HUDMenuStatusWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastHUDMenuStatusLayerBase::RemoveHUDMenuStatus(class UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastHUDMenuStatusLayerBase", "RemoveHUDMenuStatus");

	Params::AthenaBroadcastHUDMenuStatusLayerBase_RemoveHUDMenuStatus Parms{};

	Parms.HUDMenuStatusWidget = HUDMenuStatusWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.BacchusQuickbarComboSlot.Refresh
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBacchusQuickbarComboSlot::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusQuickbarComboSlot", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusQuickbarComboSlot.SetQuickbarType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusQuickbarComboSlot::SetQuickbarType(int32 NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusQuickbarComboSlot", "SetQuickbarType");

	Params::BacchusQuickbarComboSlot_SetQuickbarType Parms{};

	Parms.NewType = NewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusQuickbarComboSlot.SetSize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewButtonSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusQuickbarComboSlot::SetSize(float NewButtonSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusQuickbarComboSlot", "SetSize");

	Params::BacchusQuickbarComboSlot_SetSize Parms{};

	Parms.NewButtonSize = NewButtonSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusQuickbarComboSlot.GetQuickbarType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuickBars                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortQuickBars UBacchusQuickbarComboSlot::GetQuickbarType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusQuickbarComboSlot", "GetQuickbarType");

	Params::BacchusQuickbarComboSlot_GetQuickbarType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaBroadcastKillFeedBase.AddKillFeedEntry
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FAthenaBroadcastKillFeedEntryInfoKillFeedEntryInfo                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaBroadcastKillFeedBase::AddKillFeedEntry(const struct FAthenaBroadcastKillFeedEntryInfo& KillFeedEntryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastKillFeedBase", "AddKillFeedEntry");

	Params::AthenaBroadcastKillFeedBase_AddKillFeedEntry Parms{};

	Parms.KillFeedEntryInfo = std::move(KillFeedEntryInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaBroadcastMapPanelBase.OnMapIconAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSpectateClickableMapIcon*    MapIconIn                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastMapPanelBase::OnMapIconAdded(class UFortSpectateClickableMapIcon* MapIconIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastMapPanelBase", "OnMapIconAdded");

	Params::AthenaBroadcastMapPanelBase_OnMapIconAdded Parms{};

	Parms.MapIconIn = MapIconIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaBroadcastMatchStatusWidget.OnStormPhaseChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   StormPhase                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastMatchStatusWidget::OnStormPhaseChanged(int32 StormPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastMatchStatusWidget", "OnStormPhaseChanged");

	Params::AthenaBroadcastMatchStatusWidget_OnStormPhaseChanged Parms{};

	Parms.StormPhase = StormPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.CarmineHUDBase.OnBossHealthBarChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FAthenaBossHealthData            BossData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCarmineHUDBase::OnBossHealthBarChanged(const struct FAthenaBossHealthData& BossData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CarmineHUDBase", "OnBossHealthBarChanged");

	Params::CarmineHUDBase_OnBossHealthBarChanged Parms{};

	Parms.BossData = std::move(BossData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemPlacementActor.HandlePawnBeginCursorOver
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPlacementActor::HandlePawnBeginCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "HandlePawnBeginCursorOver");

	Params::FortItemPlacementActor_HandlePawnBeginCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPlacementActor.HandlePawnClicked
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ButtonPressed                                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPlacementActor::HandlePawnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "HandlePawnClicked");

	Params::FortItemPlacementActor_HandlePawnClicked Parms{};

	Parms.TouchedActor = TouchedActor;
	Parms.ButtonPressed = std::move(ButtonPressed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPlacementActor.HandlePawnEndCursorOver
// (Final, Native, Private)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPlacementActor::HandlePawnEndCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "HandlePawnEndCursorOver");

	Params::FortItemPlacementActor_HandlePawnEndCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPlacementActor.HandlePawnFinishedApplyingCharacterParts
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPlacementActor::HandlePawnFinishedApplyingCharacterParts(class AFortPlayerPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "HandlePawnFinishedApplyingCharacterParts");

	Params::FortItemPlacementActor_HandlePawnFinishedApplyingCharacterParts Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPlacementActor.HandlePawnTouchReleased
// (Final, Native, Private)
// Parameters:
// ETouchIndex                             FingerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPlacementActor::HandlePawnTouchReleased(ETouchIndex FingerIndex, class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "HandlePawnTouchReleased");

	Params::FortItemPlacementActor_HandlePawnTouchReleased Parms{};

	Parms.FingerIndex = FingerIndex;
	Parms.TouchedActor = TouchedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPlacementActor.OnHeroPawnSetupCompleted
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnHeroPawnSetupCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnHeroPawnSetupCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemPlacementActor.OnHovered
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemPlacementActor.OnItemClicked
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnItemClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnItemClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemPlacementActor.OnPreviewActorSpawned
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnPreviewActorSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnPreviewActorSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemPlacementActor.OnRemovePreviewActor
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnRemovePreviewActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnRemovePreviewActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemPlacementActor.OnUnhovered
// (Event, Protected, BlueprintEvent)

void AFortItemPlacementActor::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPlacementActor", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortTeamMemberPedestal.ApplyUniformOverrideMaterial
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               OverrideMaterial                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::ApplyUniformOverrideMaterial(class UMaterialInterface* OverrideMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "ApplyUniformOverrideMaterial");

	Params::FortTeamMemberPedestal_ApplyUniformOverrideMaterial Parms{};

	Parms.OverrideMaterial = OverrideMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTeamMemberPedestal.ClearOverrideMaterial
// (Final, Native, Protected, BlueprintCallable)

void AFortTeamMemberPedestal::ClearOverrideMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "ClearOverrideMaterial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTeamMemberPedestal.HandleContextSaysLobbyPlayerHovered
// (Final, Native, Private)
// Parameters:
// int32                                   HoveredMemberIdx                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::HandleContextSaysLobbyPlayerHovered(int32 HoveredMemberIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "HandleContextSaysLobbyPlayerHovered");

	Params::FortTeamMemberPedestal_HandleContextSaysLobbyPlayerHovered Parms{};

	Parms.HoveredMemberIdx = HoveredMemberIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTeamMemberPedestal.HandleContextSaysLobbyPlayerUnhovered
// (Final, Native, Private)
// Parameters:
// int32                                   HoveredMemberIdx                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::HandleContextSaysLobbyPlayerUnhovered(int32 HoveredMemberIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "HandleContextSaysLobbyPlayerUnhovered");

	Params::FortTeamMemberPedestal_HandleContextSaysLobbyPlayerUnhovered Parms{};

	Parms.HoveredMemberIdx = HoveredMemberIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTeamMemberPedestal.OnConnectedToCampaignLobby
// (Event, Protected, BlueprintEvent)

void AFortTeamMemberPedestal::OnConnectedToCampaignLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "OnConnectedToCampaignLobby");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortTeamMemberPedestal.OnIsCurrentlyInMatchChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInMatch                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::OnIsCurrentlyInMatchChanged(bool bIsInMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "OnIsCurrentlyInMatchChanged");

	Params::FortTeamMemberPedestal_OnIsCurrentlyInMatchChanged Parms{};

	Parms.bIsInMatch = bIsInMatch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTeamMemberPedestal.OnPedestalIsPopulatedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPopulated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::OnPedestalIsPopulatedChanged(bool bIsPopulated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "OnPedestalIsPopulatedChanged");

	Params::FortTeamMemberPedestal_OnPedestalIsPopulatedChanged Parms{};

	Parms.bIsPopulated = bIsPopulated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTeamMemberPedestal.RefreshBattlePassOwnerVisuals
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bOwnsBattlePass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamMemberPedestal::RefreshBattlePassOwnerVisuals(bool bOwnsBattlePass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "RefreshBattlePassOwnerVisuals");

	Params::FortTeamMemberPedestal_RefreshBattlePassOwnerVisuals Parms{};

	Parms.bOwnsBattlePass = bOwnsBattlePass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTeamMemberPedestal.IsInFrontend
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTeamMemberPedestal::IsInFrontend() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestal", "IsInFrontend");

	Params::FortTeamMemberPedestal_IsInFrontend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.OnPlayerAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::OnPlayerAdded(class UAthenaRemoteSquadViewData* InSquadData, class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "OnPlayerAdded");

	Params::AthenaEventMatchSquadWidgetBase_OnPlayerAdded Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InPlayerData = InPlayerData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadColorChanged
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InSquadColor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::OnSquadColorChanged(class UAthenaRemoteSquadViewData* InSquadData, const struct FLinearColor& InSquadColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "OnSquadColorChanged");

	Params::AthenaEventMatchSquadWidgetBase_OnSquadColorChanged Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InSquadColor = std::move(InSquadColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::OnSquadIdChanged(class UAthenaRemoteSquadViewData* InSquadData, uint8 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "OnSquadIdChanged");

	Params::AthenaEventMatchSquadWidgetBase_OnSquadIdChanged Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InSquadId = InSquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadKillscoreChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSquadKills                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::OnSquadKillscoreChanged(class UAthenaRemoteSquadViewData* InSquadData, int32 InSquadKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "OnSquadKillscoreChanged");

	Params::AthenaEventMatchSquadWidgetBase_OnSquadKillscoreChanged Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InSquadKills = InSquadKills;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadPlaceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSquadPlace                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::OnSquadPlaceChanged(class UAthenaRemoteSquadViewData* InSquadData, int32 InSquadPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "OnSquadPlaceChanged");

	Params::AthenaEventMatchSquadWidgetBase_OnSquadPlaceChanged Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InSquadPlace = InSquadPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.SetSquadIdVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::SetSquadIdVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "SetSquadIdVisible");

	Params::AthenaEventMatchSquadWidgetBase_SetSquadIdVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchSquadWidgetBase.SetStormcapDamageVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchSquadWidgetBase::SetStormcapDamageVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchSquadWidgetBase", "SetStormcapDamageVisible");

	Params::AthenaEventMatchSquadWidgetBase_SetStormcapDamageVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaBroadcastSquadStatusWidget.HandleFollowedPlayerChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorController                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 NewFollowedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastSquadStatusWidget::HandleFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorController, class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastSquadStatusWidget", "HandleFollowedPlayerChanged");

	Params::AthenaBroadcastSquadStatusWidget_HandleFollowedPlayerChanged Parms{};

	Parms.SpectatorController = SpectatorController;
	Parms.NewFollowedPlayer = NewFollowedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaBroadcastSquadStatusWidget.OnFollowedPlayerChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerState*                 NewFollowedPlayer                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaBroadcastSquadStatusWidget::OnFollowedPlayerChanged(const class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBroadcastSquadStatusWidget", "OnFollowedPlayerChanged");

	Params::AthenaBroadcastSquadStatusWidget_OnFollowedPlayerChanged Parms{};

	Parms.NewFollowedPlayer = NewFollowedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemDetailsPanel.HandleCursorModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CustomWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsPanel::HandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CustomWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "HandleCursorModeChanged");

	Params::FortItemDetailsPanel_HandleCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CustomWidget = CustomWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsPanel.HandleDifferentItemToCompareSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsPanel::HandleDifferentItemToCompareSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "HandleDifferentItemToCompareSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsPanel.HandleDifferentItemToDetailSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsPanel::HandleDifferentItemToDetailSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "HandleDifferentItemToDetailSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsPanel.HandleItemToCompareWithChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsPanel::HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "HandleItemToCompareWithChanged");

	Params::FortItemDetailsPanel_HandleItemToCompareWithChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsPanel.HandleItemToDetailChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsPanel::HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "HandleItemToDetailChanged");

	Params::FortItemDetailsPanel_HandleItemToDetailChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsPanel.SetItemToCompareWith
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToCompareWith                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsPanel::SetItemToCompareWith(const class UFortItem* Param_ItemToCompareWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "SetItemToCompareWith");

	Params::FortItemDetailsPanel_SetItemToCompareWith Parms{};

	Parms.Param_ItemToCompareWith = Param_ItemToCompareWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsPanel.SetItemToDetail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToDetail                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsPanel::SetItemToDetail(const class UFortItem* Param_ItemToDetail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsPanel", "SetItemToDetail");

	Params::FortItemDetailsPanel_SetItemToDetail Parms{};

	Parms.Param_ItemToDetail = Param_ItemToDetail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.EnableMultiFactorModal.AnimationsComplete
// (Final, Native, Protected, BlueprintCallable)

void UEnableMultiFactorModal::AnimationsComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnableMultiFactorModal", "AnimationsComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.EnableMultiFactorModal.OnConsoleDisplayURLProvided
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             UniquePlayerURLText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEnableMultiFactorModal::OnConsoleDisplayURLProvided(const class FText& UniquePlayerURLText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnableMultiFactorModal", "OnConsoleDisplayURLProvided");

	Params::EnableMultiFactorModal_OnConsoleDisplayURLProvided Parms{};

	Parms.UniquePlayerURLText = std::move(UniquePlayerURLText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.EnableMultiFactorModal.OnSetExitButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NewButtonText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEnableMultiFactorModal::OnSetExitButtonText(const class FText& NewButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnableMultiFactorModal", "OnSetExitButtonText");

	Params::EnableMultiFactorModal_OnSetExitButtonText Parms{};

	Parms.NewButtonText = std::move(NewButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.EnableMultiFactorModal.OnSetScreenConfiguration
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsConsole                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEnableMultiFactorModal::OnSetScreenConfiguration(bool bIsConsole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnableMultiFactorModal", "OnSetScreenConfiguration");

	Params::EnableMultiFactorModal_OnSetScreenConfiguration Parms{};

	Parms.bIsConsole = bIsConsole;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.EnableMultiFactorModal.QueueModal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowPermanentOptOut                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UEnableMultiFactorModal::QueueModal(bool bAllowPermanentOptOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnableMultiFactorModal", "QueueModal");

	Params::EnableMultiFactorModal_QueueModal Parms{};

	Parms.bAllowPermanentOptOut = bAllowPermanentOptOut;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleCategoryInfo.GetChallengeBundleInfos
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortChallengeBundleInfo*> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortChallengeBundleInfo*> UFortChallengeBundleCategoryInfo::GetChallengeBundleInfos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleCategoryInfo", "GetChallengeBundleInfos");

	Params::FortChallengeBundleCategoryInfo_GetChallengeBundleInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleCategoryInfo.GetExpirationDate
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ExpirationDate                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleCategoryInfo::GetExpirationDate(struct FDateTime* ExpirationDate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleCategoryInfo", "GetExpirationDate");

	Params::FortChallengeBundleCategoryInfo_GetExpirationDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ExpirationDate != nullptr)
		*ExpirationDate = std::move(Parms.ExpirationDate);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleCategoryInfo.GetFirstScheduleDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortChallengeBundleScheduleDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortChallengeBundleScheduleDefinition* UFortChallengeBundleCategoryInfo::GetFirstScheduleDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleCategoryInfo", "GetFirstScheduleDefinition");

	Params::FortChallengeBundleCategoryInfo_GetFirstScheduleDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleCategoryInfo.GetNumberOfBundles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortChallengeBundleCategoryInfo::GetNumberOfBundles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleCategoryInfo", "GetNumberOfBundles");

	Params::FortChallengeBundleCategoryInfo_GetNumberOfBundles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.CraftAndSlotTargetItem
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::CraftAndSlotTargetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "CraftAndSlotTargetItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.CraftTargetItem
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::CraftTargetItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "CraftTargetItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.DecreaseSelectedQuantity
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::DecreaseSelectedQuantity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "DecreaseSelectedQuantity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.IncreaseSelectedQuantity
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::IncreaseSelectedQuantity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "IncreaseSelectedQuantity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.OnBaseItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               NewBaseItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::OnBaseItemChanged(class UFortSchematicItem* NewBaseItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "OnBaseItemChanged");

	Params::FortItemCraftingOptionsActivatablePanel_OnBaseItemChanged Parms{};

	Parms.NewBaseItem = NewBaseItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.OnMaxQuantityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewMaxQuantity                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::OnMaxQuantityChanged(int32 NewMaxQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "OnMaxQuantityChanged");

	Params::FortItemCraftingOptionsActivatablePanel_OnMaxQuantityChanged Parms{};

	Parms.NewMaxQuantity = NewMaxQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.OnSelectedQuantityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewSelectedQuantity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::OnSelectedQuantityChanged(int32 NewSelectedQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "OnSelectedQuantityChanged");

	Params::FortItemCraftingOptionsActivatablePanel_OnSelectedQuantityChanged Parms{};

	Parms.NewSelectedQuantity = NewSelectedQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.OnTargetItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               NewTargetItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::OnTargetItemChanged(class UFortSchematicItem* NewTargetItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "OnTargetItemChanged");

	Params::FortItemCraftingOptionsActivatablePanel_OnTargetItemChanged Parms{};

	Parms.NewTargetItem = NewTargetItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SelectNextTier
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::SelectNextTier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SelectNextTier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SelectPreviousTier
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::SelectPreviousTier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SelectPreviousTier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SetBaseSchematicItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               InBaseItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::SetBaseSchematicItem(class UFortSchematicItem* InBaseItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SetBaseSchematicItem");

	Params::FortItemCraftingOptionsActivatablePanel_SetBaseSchematicItem Parms{};

	Parms.InBaseItem = InBaseItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SetItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemManagementScreen*        InItemManagementScreen                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::SetItemManagementScreen(class UFortItemManagementScreen* InItemManagementScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SetItemManagementScreen");

	Params::FortItemCraftingOptionsActivatablePanel_SetItemManagementScreen Parms{};

	Parms.InItemManagementScreen = InItemManagementScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SetSelectedQuantity_BP
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewQuantity                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::SetSelectedQuantity_BP(int32 NewQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SetSelectedQuantity_BP");

	Params::FortItemCraftingOptionsActivatablePanel_SetSelectedQuantity_BP Parms{};

	Parms.NewQuantity = NewQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.SetTargetCraftingTierIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NewTierIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftingOptionsActivatablePanel::SetTargetCraftingTierIndex(int32 NewTierIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "SetTargetCraftingTierIndex");

	Params::FortItemCraftingOptionsActivatablePanel_SetTargetCraftingTierIndex Parms{};

	Parms.NewTierIndex = NewTierIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCraftingOptionsActivatablePanel.UpdateTierImages
// (Final, Native, Protected, BlueprintCallable)

void UFortItemCraftingOptionsActivatablePanel::UpdateTierImages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftingOptionsActivatablePanel", "UpdateTierImages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.ForwardOnDropToFloorChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bDropToFloorOn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::ForwardOnDropToFloorChanged(bool bDropToFloorOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "ForwardOnDropToFloorChanged");

	Params::CreativeHUDLContext_ForwardOnDropToFloorChanged Parms{};

	Parms.bDropToFloorOn = bDropToFloorOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.ForwardOnLOSChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bLOSBlockingOn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::ForwardOnLOSChanged(bool bLOSBlockingOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "ForwardOnLOSChanged");

	Params::CreativeHUDLContext_ForwardOnLOSChanged Parms{};

	Parms.bLOSBlockingOn = bLOSBlockingOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.ForwardOnPrecisionChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bPrecisionOn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   GridSnapIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::ForwardOnPrecisionChanged(bool bPrecisionOn, uint8 GridSnapIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "ForwardOnPrecisionChanged");

	Params::CreativeHUDLContext_ForwardOnPrecisionChanged Parms{};

	Parms.bPrecisionOn = bPrecisionOn;
	Parms.GridSnapIndex = GridSnapIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.ForwardOnRotationAxisChanged
// (Final, Native, Public)
// Parameters:
// uint8                                   AxisIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::ForwardOnRotationAxisChanged(uint8 AxisIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "ForwardOnRotationAxisChanged");

	Params::CreativeHUDLContext_ForwardOnRotationAxisChanged Parms{};

	Parms.AxisIndex = AxisIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.OnPlayerPawnSet
// (Final, Native, Public)

void UCreativeHUDLContext::OnPlayerPawnSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "OnPlayerPawnSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.OnWeaponEquipped
// (Final, Native, Public)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "OnWeaponEquipped");

	Params::CreativeHUDLContext_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativeHUDLContext.GetDropToFloorEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCreativeHUDLContext::GetDropToFloorEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "GetDropToFloorEnabled");

	Params::CreativeHUDLContext_GetDropToFloorEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CreativeHUDLContext.GetOwningPlayerPawn
// (Final, Native, Public, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UCreativeHUDLContext::GetOwningPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "GetOwningPlayerPawn");

	Params::CreativeHUDLContext_GetOwningPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CreativeHUDLContext.GetPrecisionLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    SnappingEnabled                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   GridSnappingIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativeHUDLContext::GetPrecisionLevel(bool* SnappingEnabled, uint8* GridSnappingIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "GetPrecisionLevel");

	Params::CreativeHUDLContext_GetPrecisionLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SnappingEnabled != nullptr)
		*SnappingEnabled = Parms.SnappingEnabled;

	if (GridSnappingIndex != nullptr)
		*GridSnappingIndex = Parms.GridSnappingIndex;
}


// Function FortniteUI.CreativeHUDLContext.GetRotationAxis
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UCreativeHUDLContext::GetRotationAxis() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "GetRotationAxis");

	Params::CreativeHUDLContext_GetRotationAxis Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.CreativeHUDLContext.IsIgnoringLOSBlockers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UCreativeHUDLContext::IsIgnoringLOSBlockers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativeHUDLContext", "IsIgnoringLOSBlockers");

	Params::CreativeHUDLContext_IsIgnoringLOSBlockers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.FormatLockedReason
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            InFortPC                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortChallengeBundleInfoLockedReasonInReason                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FTimespan                        TimeSinceStart                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortChallengeBundleInfo::FormatLockedReason(class AFortPlayerController* InFortPC, const struct FFortChallengeBundleInfoLockedReason& InReason, const struct FTimespan& TimeSinceStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortChallengeBundleInfo", "FormatLockedReason");

	Params::FortChallengeBundleInfo_FormatLockedReason Parms{};

	Parms.InFortPC = InFortPC;
	Parms.InReason = std::move(InReason);
	Parms.TimeSinceStart = std::move(TimeSinceStart);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.GetAchievedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutTotalAchievedCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTotalRequiredCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutAchievedPercent                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutThresholdPercent                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChallengeBundleInfo::GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount, float* OutAchievedPercent, float* OutThresholdPercent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "GetAchievedCount");

	Params::FortChallengeBundleInfo_GetAchievedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalAchievedCount != nullptr)
		*OutTotalAchievedCount = Parms.OutTotalAchievedCount;

	if (OutTotalRequiredCount != nullptr)
		*OutTotalRequiredCount = Parms.OutTotalRequiredCount;

	if (OutAchievedPercent != nullptr)
		*OutAchievedPercent = Parms.OutAchievedPercent;

	if (OutThresholdPercent != nullptr)
		*OutThresholdPercent = Parms.OutThresholdPercent;
}


// Function FortniteUI.FortChallengeBundleInfo.GetBundleDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortChallengeBundleItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortChallengeBundleItemDefinition* UFortChallengeBundleInfo::GetBundleDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "GetBundleDefinition");

	Params::FortChallengeBundleInfo_GetBundleDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.GetOwningBundleCategoryInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortChallengeBundleCategoryInfo* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortChallengeBundleCategoryInfo* UFortChallengeBundleInfo::GetOwningBundleCategoryInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "GetOwningBundleCategoryInfo");

	Params::FortChallengeBundleInfo_GetOwningBundleCategoryInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.GetQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestManager*                QuestManager                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EChallengeBundleQuestVisualStyle        QuestStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortQuestItem*>           OwnedQuests                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UFortQuestItemDefinition*> UnownedQuests                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bGetAllQuestsInChain                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChallengeBundleInfo::GetQuests(class UFortQuestManager* QuestManager, EChallengeBundleQuestVisualStyle QuestStyle, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests, bool bGetAllQuestsInChain) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "GetQuests");

	Params::FortChallengeBundleInfo_GetQuests Parms{};

	Parms.QuestManager = QuestManager;
	Parms.QuestStyle = QuestStyle;
	Parms.bGetAllQuestsInChain = bGetAllQuestsInChain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OwnedQuests != nullptr)
		*OwnedQuests = std::move(Parms.OwnedQuests);

	if (UnownedQuests != nullptr)
		*UnownedQuests = std::move(Parms.UnownedQuests);
}


// Function FortniteUI.FortChallengeBundleInfo.GetRewardItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortChallengeBundleInfo::GetRewardItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "GetRewardItem");

	Params::FortChallengeBundleInfo_GetRewardItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.HasAnyAssociatedSecretQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   BundleQuest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::HasAnyAssociatedSecretQuests(class UFortQuestItem* BundleQuest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "HasAnyAssociatedSecretQuests");

	Params::FortChallengeBundleInfo_HasAnyAssociatedSecretQuests Parms{};

	Parms.BundleQuest = BundleQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.HasAnyAssociatedSecretQuestsAndAllAreComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   BundleQuest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::HasAnyAssociatedSecretQuestsAndAllAreComplete(class UFortQuestItem* BundleQuest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "HasAnyAssociatedSecretQuestsAndAllAreComplete");

	Params::FortChallengeBundleInfo_HasAnyAssociatedSecretQuestsAndAllAreComplete Parms{};

	Parms.BundleQuest = BundleQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.HasQuestReward
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDef                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutRecievedCount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTotalCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::HasQuestReward(class UFortItemDefinition* ItemDef, int32* OutRecievedCount, int32* OutTotalCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "HasQuestReward");

	Params::FortChallengeBundleInfo_HasQuestReward Parms{};

	Parms.ItemDef = ItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRecievedCount != nullptr)
		*OutRecievedCount = Parms.OutRecievedCount;

	if (OutTotalCount != nullptr)
		*OutTotalCount = Parms.OutTotalCount;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsCompleted");

	Params::FortChallengeBundleInfo_IsCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsLinearChainQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   BundleQuest                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChainLength                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentChainIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsLinearChainQuest(class UFortQuestItem* BundleQuest, int32* ChainLength, int32* CurrentChainIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsLinearChainQuest");

	Params::FortChallengeBundleInfo_IsLinearChainQuest Parms{};

	Parms.BundleQuest = BundleQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ChainLength != nullptr)
		*ChainLength = Parms.ChainLength;

	if (CurrentChainIndex != nullptr)
		*CurrentChainIndex = Parms.CurrentChainIndex;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsQuestDefALinearChain
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         InQuestDef                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ChainLength                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentChainIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsQuestDefALinearChain(const class UFortQuestItemDefinition* InQuestDef, int32* ChainLength, int32* CurrentChainIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsQuestDefALinearChain");

	Params::FortChallengeBundleInfo_IsQuestDefALinearChain Parms{};

	Parms.InQuestDef = InQuestDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ChainLength != nullptr)
		*ChainLength = Parms.ChainLength;

	if (CurrentChainIndex != nullptr)
		*CurrentChainIndex = Parms.CurrentChainIndex;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsQuestUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         LockedQuest                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortChallengeBundleInfoLockedReasonLockedReason                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsQuestUnlocked(const class UFortQuestItemDefinition* LockedQuest, struct FFortChallengeBundleInfoLockedReason* LockedReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsQuestUnlocked");

	Params::FortChallengeBundleInfo_IsQuestUnlocked Parms{};

	Parms.LockedQuest = LockedQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LockedReason != nullptr)
		*LockedReason = std::move(Parms.LockedReason);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsRewardThresholdAchieved
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsRewardThresholdAchieved() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsRewardThresholdAchieved");

	Params::FortChallengeBundleInfo_IsRewardThresholdAchieved Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.IsUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortChallengeBundleInfoLockedReasonLockedReason                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::IsUnlocked(struct FFortChallengeBundleInfoLockedReason* LockedReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "IsUnlocked");

	Params::FortChallengeBundleInfo_IsUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LockedReason != nullptr)
		*LockedReason = std::move(Parms.LockedReason);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleInfo.OwnsBattlePass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleInfo::OwnsBattlePass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleInfo", "OwnsBattlePass");

	Params::FortChallengeBundleInfo_OwnsBattlePass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleTreeItemWidget.HandleBundleUpdated
// (Final, Native, Private)

void UFortChallengeBundleTreeItemWidget::HandleBundleUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleTreeItemWidget", "HandleBundleUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChallengeBundleTreeItemWidget.OnBundleUpdated
// (Event, Protected, BlueprintEvent)

void UFortChallengeBundleTreeItemWidget::OnBundleUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleTreeItemWidget", "OnBundleUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortChallengeBundleTreeItemWidget.SetupAsChallengeBundle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleInfo*         Bundle                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChallengeBundleTreeItemWidget::SetupAsChallengeBundle(class UFortChallengeBundleInfo* Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleTreeItemWidget", "SetupAsChallengeBundle");

	Params::FortChallengeBundleTreeItemWidget_SetupAsChallengeBundle Parms{};

	Parms.Bundle = Bundle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChallengeBundleTreeItemWidget.SetupAsChallengeBundleSchedule
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleCategoryInfo* Schedule                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChallengeBundleTreeItemWidget::SetupAsChallengeBundleSchedule(class UFortChallengeBundleCategoryInfo* Schedule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleTreeItemWidget", "SetupAsChallengeBundleSchedule");

	Params::FortChallengeBundleTreeItemWidget_SetupAsChallengeBundleSchedule Parms{};

	Parms.Schedule = Schedule;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChallengeBundleTreeItemWidget.GetChallengeBundleInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortChallengeBundleInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortChallengeBundleInfo* UFortChallengeBundleTreeItemWidget::GetChallengeBundleInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleTreeItemWidget", "GetChallengeBundleInfo");

	Params::FortChallengeBundleTreeItemWidget_GetChallengeBundleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.BarrierWidgetBase.OnGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBarrierWidgetBase::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BarrierWidgetBase", "OnGamePhaseChanged");

	Params::BarrierWidgetBase_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BarrierWidgetBase.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBarrierWidgetBase::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BarrierWidgetBase", "OnHandleSpectatingChanged");

	Params::BarrierWidgetBase_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BarrierWidgetBase.OnMutatorObjectUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayMutatorObjectDataArray  MutatorArray                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBarrierWidgetBase::OnMutatorObjectUpdated(const struct FGameplayMutatorObjectDataArray& MutatorArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BarrierWidgetBase", "OnMutatorObjectUpdated");

	Params::BarrierWidgetBase_OnMutatorObjectUpdated Parms{};

	Parms.MutatorArray = std::move(MutatorArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BarrierWidgetBase.UpdateHealth
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFriendlyTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HealthPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBarrierFoodTeam                        FoodTeam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFlashBar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBarrierWidgetBase::UpdateHealth(bool bFriendlyTeam, float HealthPercent, EBarrierFoodTeam FoodTeam, bool bFlashBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BarrierWidgetBase", "UpdateHealth");

	Params::BarrierWidgetBase_UpdateHealth Parms{};

	Parms.bFriendlyTeam = bFriendlyTeam;
	Parms.HealthPercent = HealthPercent;
	Parms.FoodTeam = FoodTeam;
	Parms.bFlashBar = bFlashBar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChallengeBundleWidget.HandleBundleUpdated
// (Final, Native, Public, BlueprintCallable)

void UFortChallengeBundleWidget::HandleBundleUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "HandleBundleUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChallengeBundleWidget.MoveToNextBundle
// (Final, Native, Public, BlueprintCallable)

void UFortChallengeBundleWidget::MoveToNextBundle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "MoveToNextBundle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChallengeBundleWidget.MoveToPrevBundle
// (Final, Native, Public, BlueprintCallable)

void UFortChallengeBundleWidget::MoveToPrevBundle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "MoveToPrevBundle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChallengeBundleWidget.OnBundleUpdated
// (Event, Protected, BlueprintEvent)

void UFortChallengeBundleWidget::OnBundleUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "OnBundleUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortChallengeBundleWidget.OnSetup
// (Event, Protected, BlueprintEvent)

void UFortChallengeBundleWidget::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortChallengeBundleWidget.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortChallengeBundleInfo*         Info                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChallengeBundleWidget::Setup(class UFortChallengeBundleInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "Setup");

	Params::FortChallengeBundleWidget_Setup Parms{};

	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChallengeBundleWidget.GetChallengeBundleInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortChallengeBundleInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortChallengeBundleInfo* UFortChallengeBundleWidget::GetChallengeBundleInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "GetChallengeBundleInfo");

	Params::FortChallengeBundleWidget_GetChallengeBundleInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChallengeBundleWidget.HasSiblingBundles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortChallengeBundleWidget::HasSiblingBundles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChallengeBundleWidget", "HasSiblingBundles");

	Params::FortChallengeBundleWidget_HasSiblingBundles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaChallengeBundleScheduleScreenBase.GetChallengeCategoryInfos
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortChallengeBundleCategoryInfo*>OutCategoryInfos                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAthenaChallengeBundleScheduleScreenBase::GetChallengeCategoryInfos(TArray<class UFortChallengeBundleCategoryInfo*>* OutCategoryInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeBundleScheduleScreenBase", "GetChallengeCategoryInfos");

	Params::AthenaChallengeBundleScheduleScreenBase_GetChallengeCategoryInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCategoryInfos != nullptr)
		*OutCategoryInfos = std::move(Parms.OutCategoryInfos);
}


// Function FortniteUI.AthenaChallengeBundleScheduleScreenBase.OnChallengesChanged
// (Event, Protected, BlueprintEvent)

void UAthenaChallengeBundleScheduleScreenBase::OnChallengesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeBundleScheduleScreenBase", "OnChallengesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaChallengeBundleScheduleScreenBase.OnRefreshNavigation
// (Event, Protected, BlueprintEvent)

void UAthenaChallengeBundleScheduleScreenBase::OnRefreshNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeBundleScheduleScreenBase", "OnRefreshNavigation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaChallengeBundleScheduleScreenBase.RequestRefreshNavigation
// (Final, Native, Protected, BlueprintCallable)

void UAthenaChallengeBundleScheduleScreenBase::RequestRefreshNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeBundleScheduleScreenBase", "RequestRefreshNavigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLocalUserEntry.HandleGetMenuContent
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortLocalUserEntry::HandleGetMenuContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLocalUserEntry", "HandleGetMenuContent");

	Params::FortLocalUserEntry_HandleGetMenuContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLocalUserEntry.OnOnlineStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ELocalUserOnlineStatus                  OnlineStatus                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLocalUserEntry::OnOnlineStatusChanged(ELocalUserOnlineStatus OnlineStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLocalUserEntry", "OnOnlineStatusChanged");

	Params::FortLocalUserEntry_OnOnlineStatusChanged Parms{};

	Parms.OnlineStatus = OnlineStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaCompassBase.BindToModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCompassBase::BindToModel(class UAthenaPlayerViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCompassBase", "BindToModel");

	Params::AthenaCompassBase_BindToModel Parms{};

	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCountdownWidgetBase.HandleCountdownFinished
// (Final, Native, Protected)

void UAthenaCountdownWidgetBase::HandleCountdownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "HandleCountdownFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCountdownWidgetBase.HandleCountdownStarted
// (Final, Native, Protected)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::HandleCountdownStarted(int32 TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "HandleCountdownStarted");

	Params::AthenaCountdownWidgetBase_HandleCountdownStarted Parms{};

	Parms.TimeRemaining = TimeRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCountdownWidgetBase.HandleCountdownUpdate
// (Final, Native, Protected)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::HandleCountdownUpdate(int32 TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "HandleCountdownUpdate");

	Params::AthenaCountdownWidgetBase_HandleCountdownUpdate Parms{};

	Parms.TimeRemaining = TimeRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCountdownWidgetBase.HandleGamePhaseStepChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhaseStep                    Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::HandleGamePhaseStepChanged(EAthenaGamePhaseStep Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "HandleGamePhaseStepChanged");

	Params::AthenaCountdownWidgetBase_HandleGamePhaseStepChanged Parms{};

	Parms.Step = Step;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCountdownWidgetBase.OnCountdownFinished
// (Event, Protected, BlueprintEvent)

void UAthenaCountdownWidgetBase::OnCountdownFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "OnCountdownFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCountdownWidgetBase.OnCountdownStarted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CountdownIntroText                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::OnCountdownStarted(int32 TimeRemaining, const class FText& CountdownIntroText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "OnCountdownStarted");

	Params::AthenaCountdownWidgetBase_OnCountdownStarted Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CountdownIntroText = std::move(CountdownIntroText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaCountdownWidgetBase.OnCountdownUpdate
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CountdownUpdateText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::OnCountdownUpdate(int32 TimeRemaining, const class FText& CountdownUpdateText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "OnCountdownUpdate");

	Params::AthenaCountdownWidgetBase_OnCountdownUpdate Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.CountdownUpdateText = std::move(CountdownUpdateText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaCountdownWidgetBase.OnDisplayWarningMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             FirstLineText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SecondLineText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaCountdownWidgetBase::OnDisplayWarningMessage(const class FText& FirstLineText, const class FText& SecondLineText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCountdownWidgetBase", "OnDisplayWarningMessage");

	Params::AthenaCountdownWidgetBase_OnDisplayWarningMessage Parms{};

	Parms.FirstLineText = std::move(FirstLineText);
	Parms.SecondLineText = std::move(SecondLineText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemPickerBase.CanItemBeComitted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToCommit                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemPickerBase::CanItemBeComitted(const class UFortItem* ItemToCommit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "CanItemBeComitted");

	Params::FortItemPickerBase_CanItemBeComitted Parms{};

	Parms.ItemToCommit = ItemToCommit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemPickerBase.CenterSelectedItemTileWidget
// (Final, Native, Public, BlueprintCallable)

void UFortItemPickerBase::CenterSelectedItemTileWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "CenterSelectedItemTileWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPickerBase.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UFortItemPickerBase::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortItemPickerBase.OnItemSelectionEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemPickerBase::OnItemSelectionEvent__DelegateSignature(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "OnItemSelectionEvent__DelegateSignature");

	Params::FortItemPickerBase_OnItemSelectionEvent__DelegateSignature Parms{};

	Parms.SelectedItem = SelectedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemPickerBase.SetSelectedIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemPickerBase::SetSelectedIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "SetSelectedIndex");

	Params::FortItemPickerBase_SetSelectedIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemPickerBase.SetSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToSelect                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemPickerBase::SetSelectedItem(const class UFortItem* ItemToSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "SetSelectedItem");

	Params::FortItemPickerBase_SetSelectedItem Parms{};

	Parms.ItemToSelect = ItemToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPickerBase.TryCommitSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemPickerBase::TryCommitSelectedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "TryCommitSelectedItem");

	Params::FortItemPickerBase_TryCommitSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemPickerBase.GetIndexForItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemPickerBase::GetIndexForItem(class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "GetIndexForItem");

	Params::FortItemPickerBase_GetIndexForItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemPickerBase.GetSelectedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemPickerBase::GetSelectedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPickerBase", "GetSelectedItem");

	Params::FortItemPickerBase_GetSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCountTextBlock.HandleItemCountChanged
// (Final, Native, Private)
// Parameters:
// class UFortItemDefinition*              Definition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCountTextBlock::HandleItemCountChanged(class UFortItemDefinition* Definition, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCountTextBlock", "HandleItemCountChanged");

	Params::FortItemCountTextBlock_HandleItemCountChanged Parms{};

	Parms.Definition = Definition;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCountTextBlock.InterpolateOverrideToValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TargetValue                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaximumInterpolationDuration                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinimumChangeRate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutroOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCountTextBlock::InterpolateOverrideToValue(const int32 TargetValue, float MaximumInterpolationDuration, float MinimumChangeRate, float OutroOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCountTextBlock", "InterpolateOverrideToValue");

	Params::FortItemCountTextBlock_InterpolateOverrideToValue Parms{};

	Parms.TargetValue = TargetValue;
	Parms.MaximumInterpolationDuration = MaximumInterpolationDuration;
	Parms.MinimumChangeRate = MinimumChangeRate;
	Parms.OutroOffset = OutroOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCountTextBlock.SetCountStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCountStyle                     InCountStyle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCountTextBlock::SetCountStyle(EFortItemCountStyle InCountStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCountTextBlock", "SetCountStyle");

	Params::FortItemCountTextBlock_SetCountStyle Parms{};

	Parms.InCountStyle = InCountStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCountTextBlock.SetItemDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              InItemDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCountTextBlock::SetItemDefinition(class UFortItemDefinition* InItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCountTextBlock", "SetItemDefinition");

	Params::FortItemCountTextBlock_SetItemDefinition Parms{};

	Parms.InItemDefinition = InItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCountTextBlock.SetOverrideValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InOverrideValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCountTextBlock::SetOverrideValue(int32 InOverrideValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCountTextBlock", "SetOverrideValue");

	Params::FortItemCountTextBlock_SetOverrideValue Parms{};

	Parms.InOverrideValue = InOverrideValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortAccountLinkingWindow.FortNewPlatformReceipt__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortAccountLinkingWindow::FortNewPlatformReceipt__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "FortNewPlatformReceipt__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAccountLinkingWindow.HandleLoginClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleLoginClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleLoginClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountLinkingWindow.HandleNoThanksClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleNoThanksClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleNoThanksClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountLinkingWindow.HandleSignupClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleSignupClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleSignupClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountLinkingWindow.HandleSkipLoginClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleSkipLoginClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleSkipLoginClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountLinkingWindow.HandleSkipNoThanksClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleSkipNoThanksClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleSkipNoThanksClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountLinkingWindow.HandleSkipSignUpClicked
// (Final, Native, Protected)

void UFortAccountLinkingWindow::HandleSkipSignUpClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountLinkingWindow", "HandleSkipSignUpClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.BeginCustomizationCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubslotToEdit                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::BeginCustomizationCategory(EAthenaCustomizationCategory Category, int32 SubslotToEdit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "BeginCustomizationCategory");

	Params::AthenaCustomizationPicker_BeginCustomizationCategory Parms{};

	Parms.Category = Category;
	Parms.SubslotToEdit = SubslotToEdit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.EndCustomizationCategory
// (Final, Native, Public, BlueprintCallable)

void UAthenaCustomizationPicker::EndCustomizationCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "EndCustomizationCategory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.HandleDifferentFilterSetBP
// (Event, Protected, BlueprintEvent)

void UAthenaCustomizationPicker::HandleDifferentFilterSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "HandleDifferentFilterSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCustomizationPicker.HandleFilterTabButtonCreated
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButton*                    TabButton                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::HandleFilterTabButtonCreated(class FName TabNameID, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "HandleFilterTabButtonCreated");

	Params::AthenaCustomizationPicker_HandleFilterTabButtonCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.HandleFilterTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::HandleFilterTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "HandleFilterTabSelected");

	Params::AthenaCustomizationPicker_HandleFilterTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.HandleSelectedItemHasChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    ItemChanged                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    AmmoChanged                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IngredientsChanged                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::HandleSelectedItemHasChanged(bool ItemChanged, bool AmmoChanged, bool IngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "HandleSelectedItemHasChanged");

	Params::AthenaCustomizationPicker_HandleSelectedItemHasChanged Parms{};

	Parms.ItemChanged = ItemChanged;
	Parms.AmmoChanged = AmmoChanged;
	Parms.IngredientsChanged = IngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaCustomizationPicker.OnCosmeticChangeSaveEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaCustomizationPicker::OnCosmeticChangeSaveEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "OnCosmeticChangeSaveEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCustomizationPicker.OnItemsAvailableInFilter
// (Event, Public, BlueprintEvent)

void UAthenaCustomizationPicker::OnItemsAvailableInFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "OnItemsAvailableInFilter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCustomizationPicker.OnNoItemsAvailableInFilter
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             EmptyDisplayText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::OnNoItemsAvailableInFilter(const class FText& EmptyDisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "OnNoItemsAvailableInFilter");

	Params::AthenaCustomizationPicker_OnNoItemsAvailableInFilter Parms{};

	Parms.EmptyDisplayText = std::move(EmptyDisplayText);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaCustomizationPicker.OnUpdateSaveButtonVisuals__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaCustomizationPicker::OnUpdateSaveButtonVisuals__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "OnUpdateSaveButtonVisuals__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCustomizationPicker.RefreshView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    CategoryChanging                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    FilterChanged                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::RefreshView(bool CategoryChanging, bool FilterChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "RefreshView");

	Params::AthenaCustomizationPicker_RefreshView Parms{};

	Parms.CategoryChanging = CategoryChanging;
	Parms.FilterChanged = FilterChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.SetFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             FilterName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationPicker::SetFilter(const class FName FilterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "SetFilter");

	Params::AthenaCustomizationPicker_SetFilter Parms{};

	Parms.FilterName = FilterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationPicker.GetQualifiedFilterDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaFilterDisplayType                InTopFilterDisplaySetting                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaCustomizationPicker::GetQualifiedFilterDisplayName(EAthenaFilterDisplayType InTopFilterDisplaySetting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationPicker", "GetQualifiedFilterDisplayName");

	Params::AthenaCustomizationPicker_GetQualifiedFilterDisplayName Parms{};

	Parms.InTopFilterDisplaySetting = InTopFilterDisplaySetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCapturePointWidget.OnCapturePointDataChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActivated                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CapturePercentage                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECaptureState                           CaptureState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               ControllingTeam                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCapturePointWidget::OnCapturePointDataChanged(bool bActivated, bool bLocked, float CapturePercentage, ECaptureState CaptureState, EFortTeam ControllingTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCapturePointWidget", "OnCapturePointDataChanged");

	Params::FortCapturePointWidget_OnCapturePointDataChanged Parms{};

	Parms.bActivated = bActivated;
	Parms.bLocked = bLocked;
	Parms.CapturePercentage = CapturePercentage;
	Parms.CaptureState = CaptureState;
	Parms.ControllingTeam = ControllingTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBorderStyleList.GetBorderStyles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftClassPtr<class UClass>> UFortBorderStyleList::GetBorderStyles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBorderStyleList", "GetBorderStyles");

	Params::FortBorderStyleList_GetBorderStyles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.GetWidgetForFramingViewedItem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortActivatablePanelWithItemPreview::GetWidgetForFramingViewedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "GetWidgetForFramingViewedItem");

	Params::FortActivatablePanelWithItemPreview_GetWidgetForFramingViewedItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_0
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_0(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_0");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_0 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_1
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_1(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_1");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_1 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_2
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_2(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_2");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_2 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_3
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_3(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_3");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_3 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_4
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_4(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_4");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_4 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_5
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_5(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_5");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_5 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_6
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_6(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_6");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_6 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed_7
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnCosmeticSpecialActionPressed_7(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnCosmeticSpecialActionPressed_7");

	Params::FortActivatablePanelWithItemPreview_OnCosmeticSpecialActionPressed_7 Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnItemPreviewChanged
// (Final, Native, Protected)
// Parameters:
// class AActor*                           NewPrefab                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnItemPreviewChanged(class AActor* NewPrefab, class UFortItem* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnItemPreviewChanged");

	Params::FortActivatablePanelWithItemPreview_OnItemPreviewChanged Parms{};

	Parms.NewPrefab = NewPrefab;
	Parms.NewItem = NewItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortActivatablePanelWithItemPreview.OnVaultItemsViewed
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActivatablePanelWithItemPreview::OnVaultItemsViewed(const TArray<class UFortItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatablePanelWithItemPreview", "OnVaultItemsViewed");

	Params::FortActivatablePanelWithItemPreview_OnVaultItemsViewed Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.AreAnyItemsAnimate
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::AreAnyItemsAnimate(const TArray<class UFortItem*>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "AreAnyItemsAnimate");

	Params::FortInventoryContext_AreAnyItemsAnimate Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetDisassembleRestrictionReasonText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemDisassembleRestrictionReason       Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetDisassembleRestrictionReasonText(const EItemDisassembleRestrictionReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetDisassembleRestrictionReasonText");

	Params::FortInventoryContext_GetDisassembleRestrictionReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetEvolveRestrictionReasonText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemEvolutionRestrictionReason         Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetEvolveRestrictionReasonText(const EItemEvolutionRestrictionReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetEvolveRestrictionReasonText");

	Params::FortInventoryContext_GetEvolveRestrictionReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetItemLevelRecyclingWarningThreshold
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetItemLevelRecyclingWarningThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetItemLevelRecyclingWarningThreshold");

	Params::FortInventoryContext_GetItemLevelRecyclingWarningThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetItemRarityRecyclingWarningThreshold
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortInventoryContext::GetItemRarityRecyclingWarningThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetItemRarityRecyclingWarningThreshold");

	Params::FortInventoryContext_GetItemRarityRecyclingWarningThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetItemTierRecyclingWarningThreshold
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortItemTier                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemTier UFortInventoryContext::GetItemTierRecyclingWarningThreshold()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetItemTierRecyclingWarningThreshold");

	Params::FortInventoryContext_GetItemTierRecyclingWarningThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetRecycleRestrictionReasonText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemRecyclingRestrictionReason         Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetRecycleRestrictionReasonText(const EItemRecyclingRestrictionReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetRecycleRestrictionReasonText");

	Params::FortInventoryContext_GetRecycleRestrictionReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetRecyclingCatalystDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetRecyclingCatalystDisplayName(const class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetRecyclingCatalystDisplayName");

	Params::FortInventoryContext_GetRecyclingCatalystDisplayName Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetRecyclingWarningText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemRecyclingWarning                   Warning                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    WereAnyItemsAnimate                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetRecyclingWarningText(EItemRecyclingWarning Warning, const bool WereAnyItemsAnimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetRecyclingWarningText");

	Params::FortInventoryContext_GetRecyclingWarningText Parms{};

	Parms.Warning = Warning;
	Parms.WereAnyItemsAnimate = WereAnyItemsAnimate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetShorthandItemStackCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Quantity                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MiniumFractionalDigits                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaximumFractionalDigits                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetShorthandItemStackCount(const int32 Quantity, const int32 MiniumFractionalDigits, const int32 MaximumFractionalDigits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetShorthandItemStackCount");

	Params::FortInventoryContext_GetShorthandItemStackCount Parms{};

	Parms.Quantity = Quantity;
	Parms.MiniumFractionalDigits = MiniumFractionalDigits;
	Parms.MaximumFractionalDigits = MaximumFractionalDigits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetTierText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortItemTier                           Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetTierText(EFortItemTier Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetTierText");

	Params::FortInventoryContext_GetTierText Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetUserFriendlyTags
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortInventoryContext::GetUserFriendlyTags(const class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "GetUserFriendlyTags");

	Params::FortInventoryContext_GetUserFriendlyTags Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.MakeItemQuantityPair
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemQuantityPair            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortItemQuantityPair UFortInventoryContext::MakeItemQuantityPair(const class UFortItemDefinition* ItemDefinition, int32 ItemQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventoryContext", "MakeItemQuantityPair");

	Params::FortInventoryContext_MakeItemQuantityPair Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.ItemQuantity = ItemQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.ActivateItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::ActivateItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "ActivateItem");

	Params::FortInventoryContext_ActivateItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanSwapItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          TargetQuickbar                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetSlot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanSwapItem(class UFortItem* Item, EFortQuickBars TargetQuickbar, int32 TargetSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanSwapItem");

	Params::FortInventoryContext_CanSwapItem Parms{};

	Parms.Item = Item;
	Parms.TargetQuickbar = TargetQuickbar;
	Parms.TargetSlot = TargetSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanUpgradeItemRarity
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EItemEvolutionRestrictionReason> OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanUpgradeItemRarity(const class UFortItem* Item, TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanUpgradeItemRarity");

	Params::FortInventoryContext_CanUpgradeItemRarity Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CraftAndSlotSchematic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PostCraftSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCraftFailCause                     FailCause                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CraftAndSlotSchematic(class UFortSchematicItem* SchematicItem, int32 PostCraftSlot, EFortCraftFailCause* FailCause, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CraftAndSlotSchematic");

	Params::FortInventoryContext_CraftAndSlotSchematic Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.PostCraftSlot = PostCraftSlot;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailCause != nullptr)
		*FailCause = Parms.FailCause;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CraftSchematic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCraftFailCause                     FailCause                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CraftSchematic(class UFortSchematicItem* SchematicItem, EFortCraftFailCause* FailCause, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CraftSchematic");

	Params::FortInventoryContext_CraftSchematic Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailCause != nullptr)
		*FailCause = Parms.FailCause;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.DestroyWorldItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::DestroyWorldItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "DestroyWorldItem");

	Params::FortInventoryContext_DestroyWorldItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.DropItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortWorldItem*                   ItemBeingDropped                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::DropItem(const class UFortWorldItem* ItemBeingDropped, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "DropItem");

	Params::FortInventoryContext_DropItem Parms{};

	Parms.ItemBeingDropped = ItemBeingDropped;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.DropItemOnQuickBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          TargetQuickbar                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetSlot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::DropItemOnQuickBar(class UFortItem* Item, EFortQuickBars TargetQuickbar, int32 TargetSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "DropItemOnQuickBar");

	Params::FortInventoryContext_DropItemOnQuickBar Parms{};

	Parms.Item = Item;
	Parms.TargetQuickbar = TargetQuickbar;
	Parms.TargetSlot = TargetSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.EnumerateRecyclingWarningsForItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<EItemRecyclingWarning>           OutWarnings                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::EnumerateRecyclingWarningsForItems(const TArray<class UFortItem*>& Items, TArray<EItemRecyclingWarning>* OutWarnings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "EnumerateRecyclingWarningsForItems");

	Params::FortInventoryContext_EnumerateRecyclingWarningsForItems Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWarnings != nullptr)
		*OutWarnings = std::move(Parms.OutWarnings);
}


// Function FortniteUI.FortInventoryContext.EquipItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::EquipItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "EquipItem");

	Params::FortInventoryContext_EquipItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.GetConversionRecipesFromItemDefintion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRecipe>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FRecipe> UFortInventoryContext::GetConversionRecipesFromItemDefintion(class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetConversionRecipesFromItemDefintion");

	Params::FortInventoryContext_GetConversionRecipesFromItemDefintion Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetGameplayTagByIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            GameplayTagContainer                                   (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Result                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::GetGameplayTagByIndex(const struct FGameplayTagContainer& GameplayTagContainer, int32 Param_Index, struct FGameplayTag* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetGameplayTagByIndex");

	Params::FortInventoryContext_GetGameplayTagByIndex Parms{};

	Parms.GameplayTagContainer = std::move(GameplayTagContainer);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetTransformKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EConversionControlKeyRequest            RequestType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryContentSortType               SortType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         TransformKeys                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetTransformKeys(EConversionControlKeyRequest RequestType, const EInventoryContentSortType SortType, TArray<class UFortAccountItem*>* TransformKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetTransformKeys");

	Params::FortInventoryContext_GetTransformKeys Parms{};

	Parms.RequestType = RequestType;
	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TransformKeys != nullptr)
		*TransformKeys = std::move(Parms.TransformKeys);
}


// Function FortniteUI.FortInventoryContext.GetUnseenTransformKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EConversionControlKeyRequest            RequestType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryContentSortType               SortType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         TransformKeys                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetUnseenTransformKeys(EConversionControlKeyRequest RequestType, const EInventoryContentSortType SortType, TArray<class UFortAccountItem*>* TransformKeys)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetUnseenTransformKeys");

	Params::FortInventoryContext_GetUnseenTransformKeys Parms{};

	Parms.RequestType = RequestType;
	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TransformKeys != nullptr)
		*TransformKeys = std::move(Parms.TransformKeys);
}


// Function FortniteUI.FortInventoryContext.GetUpgradeItemRarityRecipeFromItemDefintion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRecipe                          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRecipe UFortInventoryContext::GetUpgradeItemRarityRecipeFromItemDefintion(class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetUpgradeItemRarityRecipeFromItemDefintion");

	Params::FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HandleMcpProfilesInitialized
// (Final, Native, Private)

void UFortInventoryContext::HandleMcpProfilesInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HandleMcpProfilesInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.HasRecyclingWarnings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasRecyclingWarnings(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasRecyclingWarnings");

	Params::FortInventoryContext_HasRecyclingWarnings Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.LockAllSchematics
// (Final, Native, Public, BlueprintCallable)

void UFortInventoryContext::LockAllSchematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "LockAllSchematics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortInventoryContext.OnInventoryFiltersWithUnseenItemsChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TSet<EFortFrontendInventoryFilter>      AffectedInventoryFilters                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortInventoryContext::OnInventoryFiltersWithUnseenItemsChanged__DelegateSignature(const TSet<EFortFrontendInventoryFilter>& AffectedInventoryFilters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "OnInventoryFiltersWithUnseenItemsChanged__DelegateSignature");

	Params::FortInventoryContext_OnInventoryFiltersWithUnseenItemsChanged__DelegateSignature Parms{};

	Parms.AffectedInventoryFilters = std::move(AffectedInventoryFilters);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortInventoryContext.OnItemTypesWithUnseenItemsChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TSet<EFortItemType>                     AffectedItemTypes                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortInventoryContext::OnItemTypesWithUnseenItemsChanged__DelegateSignature(const TSet<EFortItemType>& AffectedItemTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "OnItemTypesWithUnseenItemsChanged__DelegateSignature");

	Params::FortInventoryContext_OnItemTypesWithUnseenItemsChanged__DelegateSignature Parms{};

	Parms.AffectedItemTypes = std::move(AffectedItemTypes);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortInventoryContext.RemoveItemFromQuickBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::RemoveItemFromQuickBar(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "RemoveItemFromQuickBar");

	Params::FortInventoryContext_RemoveItemFromQuickBar Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.SetSchematicPinned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               Schematic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::SetSchematicPinned(class UFortSchematicItem* Schematic, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "SetSchematicPinned");

	Params::FortInventoryContext_SetSchematicPinned Parms{};

	Parms.Schematic = Schematic;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.UnlockAllSchematics
// (Final, Native, Public, BlueprintCallable)

void UFortInventoryContext::UnlockAllSchematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "UnlockAllSchematics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.UnlockSchematic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItemDefinition*     SchematicDefinition                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::UnlockSchematic(class UFortSchematicItemDefinition* SchematicDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "UnlockSchematic");

	Params::FortInventoryContext_UnlockSchematic Parms{};

	Parms.SchematicDefinition = SchematicDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.UpdateLastSeenHomebasePoints
// (Final, Native, Public, BlueprintCallable)

void UFortInventoryContext::UpdateLastSeenHomebasePoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "UpdateLastSeenHomebasePoints");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.UpdateLastSeenResearchPointCollectionNodes
// (Final, Native, Public, BlueprintCallable)

void UFortInventoryContext::UpdateLastSeenResearchPointCollectionNodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "UpdateLastSeenResearchPointCollectionNodes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInventoryContext.AreAnyItemsUnseenForInventoryFilter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortFrontendInventoryFilter            InventoryFilter                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::AreAnyItemsUnseenForInventoryFilter(const EFortFrontendInventoryFilter InventoryFilter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "AreAnyItemsUnseenForInventoryFilter");

	Params::FortInventoryContext_AreAnyItemsUnseenForInventoryFilter Parms{};

	Parms.InventoryFilter = InventoryFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.AreAnyItemsUnseenForItemType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ItemType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::AreAnyItemsUnseenForItemType(const EFortItemType ItemType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "AreAnyItemsUnseenForItemType");

	Params::FortInventoryContext_AreAnyItemsUnseenForItemType Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.AreRecipeRequirementsMet
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    RecipeCosts                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::AreRecipeRequirementsMet(const TArray<struct FFortItemQuantityPair>& RecipeCosts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "AreRecipeRequirementsMet");

	Params::FortInventoryContext_AreRecipeRequirementsMet Parms{};

	Parms.RecipeCosts = std::move(RecipeCosts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanBulkCraftSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanBulkCraftSchematic(class UFortSchematicItem* SchematicItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanBulkCraftSchematic");

	Params::FortInventoryContext_CanBulkCraftSchematic Parms{};

	Parms.SchematicItem = SchematicItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanCraftSchematic
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCraftFailCause                     FailCause                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanCraftSchematic(class UFortSchematicItem* SchematicItem, EFortCraftFailCause* FailCause, EFortItemTier RequestedTier, int32 CraftCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanCraftSchematic");

	Params::FortInventoryContext_CanCraftSchematic Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailCause != nullptr)
		*FailCause = Parms.FailCause;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanDisassembleItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItem*                   Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EItemDisassembleRestrictionReason>OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanDisassembleItem(const class UFortWorldItem* Item, TArray<EItemDisassembleRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanDisassembleItem");

	Params::FortInventoryContext_CanDisassembleItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanEvolve
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EItemEvolutionRestrictionReason> OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanEvolve(const class UFortItem* Item, TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanEvolve");

	Params::FortInventoryContext_CanEvolve Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanItemBeMulched
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutRestrictionReasons                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanItemBeMulched(class UFortItem* Item, class FText* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanItemBeMulched");

	Params::FortInventoryContext_CanItemBeMulched Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanPinSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSchematicItem*               Schematic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanPinSchematic(class UFortSchematicItem* Schematic) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanPinSchematic");

	Params::FortInventoryContext_CanPinSchematic Parms{};

	Parms.Schematic = Schematic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.CanRecycle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EItemRecyclingRestrictionReason> OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::CanRecycle(const class UFortItem* Item, TArray<EItemRecyclingRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "CanRecycle");

	Params::FortInventoryContext_CanRecycle Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.DoesItemMatchFilter
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemListFilter              FilterSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::DoesItemMatchFilter(class UFortItem* Item, const struct FFortItemListFilter& FilterSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "DoesItemMatchFilter");

	Params::FortInventoryContext_DoesItemMatchFilter Parms{};

	Parms.Item = Item;
	Parms.FilterSettings = std::move(FilterSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetAccountItemsByFilterType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           SearchText                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryContentSortType               SortType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    SubType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         OutItemList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetAccountItemsByFilterType(const class FString& SearchText, const EInventoryContentSortType SortType, const EFortInventoryFilter SubType, TArray<class UFortAccountItem*>* OutItemList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetAccountItemsByFilterType");

	Params::FortInventoryContext_GetAccountItemsByFilterType Parms{};

	Parms.SearchText = std::move(SearchText);
	Parms.SortType = SortType;
	Parms.SubType = SubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItemList != nullptr)
		*OutItemList = std::move(Parms.OutItemList);
}


// Function FortniteUI.FortInventoryContext.GetAccountItemsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetAccountItemsByType(EFortItemType ItemType, TArray<class UFortAccountItem*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetAccountItemsByType");

	Params::FortInventoryContext_GetAccountItemsByType Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.GetBackpackItemCounts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemsCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxItemsCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverflowItemsCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetBackpackItemCounts(int32* ItemsCount, int32* MaxItemsCount, int32* OverflowItemsCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetBackpackItemCounts");

	Params::FortInventoryContext_GetBackpackItemCounts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsCount != nullptr)
		*ItemsCount = Parms.ItemsCount;

	if (MaxItemsCount != nullptr)
		*MaxItemsCount = Parms.MaxItemsCount;

	if (OverflowItemsCount != nullptr)
		*OverflowItemsCount = Parms.OverflowItemsCount;
}


// Function FortniteUI.FortInventoryContext.GetBackpackOverflowFromAddingItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetBackpackOverflowFromAddingItem(class UFortWorldItem* Item, int32 Count) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetBackpackOverflowFromAddingItem");

	Params::FortInventoryContext_GetBackpackOverflowFromAddingItem Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetCoreItemsByFilterType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           SearchText                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryContentSortType               SortType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    SubType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         OutItemList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetCoreItemsByFilterType(const class FString& SearchText, const EInventoryContentSortType SortType, const EFortInventoryFilter SubType, TArray<class UFortAccountItem*>* OutItemList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCoreItemsByFilterType");

	Params::FortInventoryContext_GetCoreItemsByFilterType Parms{};

	Parms.SearchText = std::move(SearchText);
	Parms.SortType = SortType;
	Parms.SubType = SubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItemList != nullptr)
		*OutItemList = std::move(Parms.OutItemList);
}


// Function FortniteUI.FortInventoryContext.GetCoreItemsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetCoreItemsByType(EFortItemType ItemType, TArray<class UFortAccountItem*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCoreItemsByType");

	Params::FortInventoryContext_GetCoreItemsByType Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.GetCountOfHeroItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetCountOfHeroItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCountOfHeroItems");

	Params::FortInventoryContext_GetCountOfHeroItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetCountOfVaultLimitedItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetCountOfVaultLimitedItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCountOfVaultLimitedItems");

	Params::FortInventoryContext_GetCountOfVaultLimitedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetCurrentAmmoItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortInventoryContext::GetCurrentAmmoItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCurrentAmmoItemDefinition");

	Params::FortInventoryContext_GetCurrentAmmoItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetCurrentResourceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetCurrentResourceCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCurrentResourceCount");

	Params::FortInventoryContext_GetCurrentResourceCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetCurrentResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortResourceItemDefinition*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortResourceItemDefinition* UFortInventoryContext::GetCurrentResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetCurrentResourceItemDefinition");

	Params::FortInventoryContext_GetCurrentResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetDeployableBaseItemCounts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemsCount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxItemsCount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverflowItemsCount                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetDeployableBaseItemCounts(int32* ItemsCount, int32* MaxItemsCount, int32* OverflowItemsCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetDeployableBaseItemCounts");

	Params::FortInventoryContext_GetDeployableBaseItemCounts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsCount != nullptr)
		*ItemsCount = Parms.ItemsCount;

	if (MaxItemsCount != nullptr)
		*MaxItemsCount = Parms.MaxItemsCount;

	if (OverflowItemsCount != nullptr)
		*OverflowItemsCount = Parms.OverflowItemsCount;
}


// Function FortniteUI.FortInventoryContext.GetDeployableBaseOverflowFromAddingItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetDeployableBaseOverflowFromAddingItem(class UFortWorldItem* Item, int32 Count) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetDeployableBaseOverflowFromAddingItem");

	Params::FortInventoryContext_GetDeployableBaseOverflowFromAddingItem Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetEquippedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortWeapon*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortWeapon* UFortInventoryContext::GetEquippedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetEquippedWeapon");

	Params::FortInventoryContext_GetEquippedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetHeroAbilityPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHero*                        Hero                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortUIPerk>              HeroAbilityPerks                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::GetHeroAbilityPerks(class UFortHero* Hero, TArray<struct FFortUIPerk>* HeroAbilityPerks) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetHeroAbilityPerks");

	Params::FortInventoryContext_GetHeroAbilityPerks Parms{};

	Parms.Hero = Hero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HeroAbilityPerks != nullptr)
		*HeroAbilityPerks = std::move(Parms.HeroAbilityPerks);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetHeroResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPersistentResourceItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPersistentResourceItemDefinition* UFortInventoryContext::GetHeroResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetHeroResourceItemDefinition");

	Params::FortInventoryContext_GetHeroResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetHomebaseUnlockedTransmogKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItem*>         TransmogKeys                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetHomebaseUnlockedTransmogKeys(TArray<class UFortAccountItem*>* TransmogKeys) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetHomebaseUnlockedTransmogKeys");

	Params::FortInventoryContext_GetHomebaseUnlockedTransmogKeys Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TransmogKeys != nullptr)
		*TransmogKeys = std::move(Parms.TransmogKeys);
}


// Function FortniteUI.FortInventoryContext.GetItemInstancesByDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetItemInstancesByDefinition(class UFortItemDefinition* ItemDefinition, TArray<class UFortItem*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetItemInstancesByDefinition");

	Params::FortInventoryContext_GetItemInstancesByDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.GetItemsToMulchBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortInventoryContext::GetItemsToMulchBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetItemsToMulchBP");

	Params::FortInventoryContext_GetItemsToMulchBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetNumGiftingStamps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetNumGiftingStamps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetNumGiftingStamps");

	Params::FortInventoryContext_GetNumGiftingStamps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetNumInInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeReserved                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetNumInInventory(class UFortItemDefinition* ItemDefinition, bool bIncludeReserved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetNumInInventory");

	Params::FortInventoryContext_GetNumInInventory Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.bIncludeReserved = bIncludeReserved;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetNumItemsToMulch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetNumItemsToMulch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetNumItemsToMulch");

	Params::FortInventoryContext_GetNumItemsToMulch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetPersonnelResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPersistentResourceItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPersistentResourceItemDefinition* UFortInventoryContext::GetPersonnelResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetPersonnelResourceItemDefinition");

	Params::FortInventoryContext_GetPersonnelResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetPinnedSchematicList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortSchematicItem*>       PinnedItems                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetPinnedSchematicList(TArray<class UFortSchematicItem*>* PinnedItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetPinnedSchematicList");

	Params::FortInventoryContext_GetPinnedSchematicList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PinnedItems != nullptr)
		*PinnedItems = std::move(Parms.PinnedItems);
}


// Function FortniteUI.FortInventoryContext.GetProfileItemsByFilterType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMcpProfile*                  Profile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchText                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInventoryContentSortType               SortType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    SubType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         OutItemList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetProfileItemsByFilterType(class UFortMcpProfile* Profile, const class FString& SearchText, const EInventoryContentSortType SortType, const EFortInventoryFilter SubType, TArray<class UFortAccountItem*>* OutItemList) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetProfileItemsByFilterType");

	Params::FortInventoryContext_GetProfileItemsByFilterType Parms{};

	Parms.Profile = Profile;
	Parms.SearchText = std::move(SearchText);
	Parms.SortType = SortType;
	Parms.SubType = SubType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItemList != nullptr)
		*OutItemList = std::move(Parms.OutItemList);
}


// Function FortniteUI.FortInventoryContext.GetProfileItemsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMcpProfile*                  Profile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetProfileItemsByType(class UFortMcpProfile* Profile, EFortItemType ItemType, TArray<class UFortAccountItem*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetProfileItemsByType");

	Params::FortInventoryContext_GetProfileItemsByType Parms{};

	Parms.Profile = Profile;
	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.GetQuickbarFocus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuickBars                          OutQuickBar                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSlot                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSecondarySlot                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutPreviousFocusedSlot                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetQuickbarFocus(EFortQuickBars* OutQuickBar, int32* OutSlot, int32* OutSecondarySlot, int32* OutPreviousFocusedSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetQuickbarFocus");

	Params::FortInventoryContext_GetQuickbarFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutQuickBar != nullptr)
		*OutQuickBar = Parms.OutQuickBar;

	if (OutSlot != nullptr)
		*OutSlot = Parms.OutSlot;

	if (OutSecondarySlot != nullptr)
		*OutSecondarySlot = Parms.OutSecondarySlot;

	if (OutPreviousFocusedSlot != nullptr)
		*OutPreviousFocusedSlot = Parms.OutPreviousFocusedSlot;
}


// Function FortniteUI.FortInventoryContext.GetQuickBarSlottedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortInventoryContext::GetQuickBarSlottedItem(EFortQuickBars InQuickBar, int32 Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetQuickBarSlottedItem");

	Params::FortInventoryContext_GetQuickBarSlottedItem Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetResourceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortResourceType                       ResourceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetResourceCount(EFortResourceType ResourceType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetResourceCount");

	Params::FortInventoryContext_GetResourceCount Parms{};

	Parms.ResourceType = ResourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetResourceIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortResourceType                       ResourceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortInventoryContext::GetResourceIcon(EFortResourceType ResourceType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetResourceIcon");

	Params::FortInventoryContext_GetResourceIcon Parms{};

	Parms.ResourceType = ResourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortResourceType                       ResourceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortResourceItemDefinition*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortResourceItemDefinition* UFortInventoryContext::GetResourceItemDefinition(EFortResourceType ResourceType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetResourceItemDefinition");

	Params::FortInventoryContext_GetResourceItemDefinition Parms{};

	Parms.ResourceType = ResourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetResourceItemMaxStackSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortResourceType                       ResourceType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetResourceItemMaxStackSize(EFortResourceType ResourceType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetResourceItemMaxStackSize");

	Params::FortInventoryContext_GetResourceItemMaxStackSize Parms{};

	Parms.ResourceType = ResourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetSchematicResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPersistentResourceItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPersistentResourceItemDefinition* UFortInventoryContext::GetSchematicResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetSchematicResourceItemDefinition");

	Params::FortInventoryContext_GetSchematicResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetStorageCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetStorageCapacity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetStorageCapacity");

	Params::FortInventoryContext_GetStorageCapacity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetStorageNumItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetStorageNumItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetStorageNumItems");

	Params::FortInventoryContext_GetStorageNumItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetStorageOverflowFromAddingItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetStorageOverflowFromAddingItem(class UFortWorldItem* Item, int32 Count) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetStorageOverflowFromAddingItem");

	Params::FortInventoryContext_GetStorageOverflowFromAddingItem Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetSupportBonusPerks
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHero*                        Hero                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortUIPerk>              SupportBonusPerks                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::GetSupportBonusPerks(class UFortHero* Hero, TArray<struct FFortUIPerk>* SupportBonusPerks) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetSupportBonusPerks");

	Params::FortInventoryContext_GetSupportBonusPerks Parms{};

	Parms.Hero = Hero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SupportBonusPerks != nullptr)
		*SupportBonusPerks = std::move(Parms.SupportBonusPerks);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetTotalItemQuantityByDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetTotalItemQuantityByDefinition(class UFortItemDefinition* ItemDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetTotalItemQuantityByDefinition");

	Params::FortInventoryContext_GetTotalItemQuantityByDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetTransmogSacrificeDataFromItemDefintion
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransmogSacrifice               OutTransmogData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::GetTransmogSacrificeDataFromItemDefintion(const class UFortItemDefinition* ItemDefinition, struct FTransmogSacrifice* OutTransmogData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetTransmogSacrificeDataFromItemDefintion");

	Params::FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransmogData != nullptr)
		*OutTransmogData = std::move(Parms.OutTransmogData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetTrapAttachTypeName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventoryContext::GetTrapAttachTypeName(class ABuildingSMActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetTrapAttachTypeName");

	Params::FortInventoryContext_GetTrapAttachTypeName Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetVaultItemLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInventoryContext::GetVaultItemLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetVaultItemLimit");

	Params::FortInventoryContext_GetVaultItemLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetVaultItemLimitStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EVaultItemLimitStatus                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EVaultItemLimitStatus UFortInventoryContext::GetVaultItemLimitStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetVaultItemLimitStatus");

	Params::FortInventoryContext_GetVaultItemLimitStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetVoucherResourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPersistentResourceItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPersistentResourceItemDefinition* UFortInventoryContext::GetVoucherResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetVoucherResourceItemDefinition");

	Params::FortInventoryContext_GetVoucherResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.GetWorldItemList
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortWorldItem*>           Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FFortItemListFilter              FilterSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetWorldItemList(TArray<class UFortWorldItem*>* Items, const struct FFortItemListFilter& FilterSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetWorldItemList");

	Params::FortInventoryContext_GetWorldItemList Parms{};

	Parms.FilterSettings = std::move(FilterSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.GetWorldItemListForDeployableBaseThePlayerIsIn
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortWorldItem*>           Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FFortItemListFilter              FilterSettings                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortInventoryContext::GetWorldItemListForDeployableBaseThePlayerIsIn(TArray<class UFortWorldItem*>* Items, const struct FFortItemListFilter& FilterSettings) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "GetWorldItemListForDeployableBaseThePlayerIsIn");

	Params::FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn Parms{};

	Parms.FilterSettings = std::move(FilterSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortInventoryContext.HasEvolutions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasEvolutions(const class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasEvolutions");

	Params::FortInventoryContext_HasEvolutions Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasGameplayTagContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            GameplayTagContainer                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasGameplayTagContainer(const struct FGameplayTagContainer& GameplayTagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasGameplayTagContainer");

	Params::FortInventoryContext_HasGameplayTagContainer Parms{};

	Parms.GameplayTagContainer = std::move(GameplayTagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasGameplayTagContainerExact
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            GameplayTagContainer                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasGameplayTagContainerExact(const struct FGameplayTagContainer& GameplayTagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasGameplayTagContainerExact");

	Params::FortInventoryContext_HasGameplayTagContainerExact Parms{};

	Parms.GameplayTagContainer = std::move(GameplayTagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasTrapReadyForBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 BuildingToAttachTo                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasTrapReadyForBuilding(const class ABuildingSMActor* BuildingToAttachTo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasTrapReadyForBuilding");

	Params::FortInventoryContext_HasTrapReadyForBuilding Parms{};

	Parms.BuildingToAttachTo = BuildingToAttachTo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasUnavailableItemsInStorage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasUnavailableItemsInStorage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasUnavailableItemsInStorage");

	Params::FortInventoryContext_HasUnavailableItemsInStorage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasUnseenHomebasePoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasUnseenHomebasePoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasUnseenHomebasePoints");

	Params::FortInventoryContext_HasUnseenHomebasePoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.HasUnseenResearchPointCollectionNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::HasUnseenResearchPointCollectionNodes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "HasUnseenResearchPointCollectionNodes");

	Params::FortInventoryContext_HasUnseenResearchPointCollectionNodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.IsPickAxeEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::IsPickAxeEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "IsPickAxeEquipped");

	Params::FortInventoryContext_IsPickAxeEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.IsSchematicPinned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSchematicItem*               Schematic                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::IsSchematicPinned(class UFortSchematicItem* Schematic) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "IsSchematicPinned");

	Params::FortInventoryContext_IsSchematicPinned Parms{};

	Parms.Schematic = Schematic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.IsSlotHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::IsSlotHidden(EFortQuickBars InQuickBar, int32 Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "IsSlotHidden");

	Params::FortInventoryContext_IsSlotHidden Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.IsTrapAvailableForBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::IsTrapAvailableForBuilding(class ABuildingSMActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "IsTrapAvailableForBuilding");

	Params::FortInventoryContext_IsTrapAvailableForBuilding Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInventoryContext.SortAccountItemArrayForTransmog
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItem*>         VaultItems                                             (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         SortedItems                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInventoryContext::SortAccountItemArrayForTransmog(TArray<class UFortAccountItem*>& VaultItems, TArray<class UFortAccountItem*>* SortedItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "SortAccountItemArrayForTransmog");

	Params::FortInventoryContext_SortAccountItemArrayForTransmog Parms{};

	Parms.VaultItems = std::move(VaultItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	VaultItems = std::move(Parms.VaultItems);

	if (SortedItems != nullptr)
		*SortedItems = std::move(Parms.SortedItems);
}


// Function FortniteUI.FortInventoryContext.WouldExceedMaxStackSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   QuantityToTest                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortInventoryContext::WouldExceedMaxStackSize(class UFortItemDefinition* ItemDefinition, int32 QuantityToTest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventoryContext", "WouldExceedMaxStackSize");

	Params::FortInventoryContext_WouldExceedMaxStackSize Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.QuantityToTest = QuantityToTest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAbilitiesPageTileBase.UpdateGamepadKeyBindingText
// (Final, Native, Public, BlueprintCallable)

void UFortAbilitiesPageTileBase::UpdateGamepadKeyBindingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitiesPageTileBase", "UpdateGamepadKeyBindingText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationScreenBase.GetCategoryDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaCustomizationScreenBase::GetCategoryDisplayName(EAthenaCustomizationCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "GetCategoryDisplayName");

	Params::AthenaCustomizationScreenBase_GetCategoryDisplayName Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaCustomizationScreenBase.GetFavoriteItemForCategory
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            CustomizationType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SubslotIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UAthenaCustomizationScreenBase::GetFavoriteItemForCategory(EAthenaCustomizationCategory CustomizationType, int32 SubslotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "GetFavoriteItemForCategory");

	Params::AthenaCustomizationScreenBase_GetFavoriteItemForCategory Parms{};

	Parms.CustomizationType = CustomizationType;
	Parms.SubslotIndex = SubslotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaCustomizationScreenBase.GetItemTypeDisplayNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaCustomizationScreenBase::GetItemTypeDisplayNames(EAthenaCustomizationCategory InCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "GetItemTypeDisplayNames");

	Params::AthenaCustomizationScreenBase_GetItemTypeDisplayNames Parms{};

	Parms.InCategory = InCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaCustomizationScreenBase.HandleInventoryUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TSet<class FString>                     ItemChangeFlags                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int64                                   ProfileRevision                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationScreenBase::HandleInventoryUpdated(const TSet<class FString>& ItemChangeFlags, int64 ProfileRevision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "HandleInventoryUpdated");

	Params::AthenaCustomizationScreenBase_HandleInventoryUpdated Parms{};

	Parms.ItemChangeFlags = std::move(ItemChangeFlags);
	Parms.ProfileRevision = ProfileRevision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationScreenBase.HandleLoadoutChanged
// (Final, Native, Protected)

void UAthenaCustomizationScreenBase::HandleLoadoutChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "HandleLoadoutChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationScreenBase.ProcessLoadoutChanged
// (Event, Public, BlueprintEvent)

void UAthenaCustomizationScreenBase::ProcessLoadoutChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "ProcessLoadoutChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaCustomizationScreenBase.ShiftItemsVariantOption
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticAccountItem*       Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VariantChannelIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationScreenBase::ShiftItemsVariantOption(class UAthenaCosmeticAccountItem* Item, int32 VariantChannelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationScreenBase", "ShiftItemsVariantOption");

	Params::AthenaCustomizationScreenBase_ShiftItemsVariantOption Parms{};

	Parms.Item = Item;
	Parms.VariantChannelIndex = VariantChannelIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaCustomizationSlotSelectorButton.SetCustomizationType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSubslotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaCustomizationSlotSelectorButton::SetCustomizationType(EAthenaCustomizationCategory NewType, int32 InSubslotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaCustomizationSlotSelectorButton", "SetCustomizationType");

	Params::AthenaCustomizationSlotSelectorButton_SetCustomizationType Parms{};

	Parms.NewType = NewType;
	Parms.InSubslotIndex = InSubslotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortActorCanvasSlot.SetCanAutoRemove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowAutoRemove                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActorCanvasSlot::SetCanAutoRemove(bool bAllowAutoRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActorCanvasSlot", "SetCanAutoRemove");

	Params::FortActorCanvasSlot_SetCanAutoRemove Parms{};

	Parms.bAllowAutoRemove = bAllowAutoRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortActorCanvasSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActorCanvasSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActorCanvasSlot", "SetHorizontalAlignment");

	Params::FortActorCanvasSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortActorCanvasSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortActorCanvasSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActorCanvasSlot", "SetVerticalAlignment");

	Params::FortActorCanvasSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsTab.CenterOnTab
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortOptionsTab::CenterOnTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "CenterOnTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortOptionsTab.ConstructSettingList
// (Final, Native, Public, BlueprintCallable)

void UFortOptionsTab::ConstructSettingList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "ConstructSettingList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsTab.IsAthena
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsTab::IsAthena()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "IsAthena");

	Params::FortOptionsTab_IsAthena Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsTab.IsPS4Platform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsTab::IsPS4Platform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "IsPS4Platform");

	Params::FortOptionsTab_IsPS4Platform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsTab.IsSwitchPlatform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsTab::IsSwitchPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "IsSwitchPlatform");

	Params::FortOptionsTab_IsSwitchPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsTab.IsXboxPlatform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsTab::IsXboxPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "IsXboxPlatform");

	Params::FortOptionsTab_IsXboxPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsTab.ResetOptionsToDefault
// (Final, Native, Public, BlueprintCallable)

void UFortOptionsTab::ResetOptionsToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "ResetOptionsToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsTab.ShouldShowSetting
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FSettingData                     SettingData                                            (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsTab::ShouldShowSetting(const struct FSettingData& SettingData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "ShouldShowSetting");

	Params::FortOptionsTab_ShouldShowSetting Parms{};

	Parms.SettingData = std::move(SettingData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsTab.UpdateOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    UpdateQuality                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOptionsTab::UpdateOptions(bool UpdateQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "UpdateOptions");

	Params::FortOptionsTab_UpdateOptions Parms{};

	Parms.UpdateQuality = UpdateQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsTab.UpdateOptionsTab
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortOptionsTab::UpdateOptionsTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsTab", "UpdateOptionsTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaEquippedItemBase.AmmoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   MagazineAmmoCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BackupAmmoCount                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRemaining                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::AmmoChanged(int32 MagazineAmmoCount, int32 BackupAmmoCount, int32 TotalRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "AmmoChanged");

	Params::AthenaEquippedItemBase_AmmoChanged Parms{};

	Parms.MagazineAmmoCount = MagazineAmmoCount;
	Parms.BackupAmmoCount = BackupAmmoCount;
	Parms.TotalRemaining = TotalRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.AmmoTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortWeaponRanged*                RangedWeapon                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::AmmoTypeChanged(class AFortWeaponRanged* RangedWeapon, class UFortWorldItemDefinition* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "AmmoTypeChanged");

	Params::AthenaEquippedItemBase_AmmoTypeChanged Parms{};

	Parms.RangedWeapon = RangedWeapon;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.HasAmmoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasAmmo                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::HasAmmoChanged(bool bHasAmmo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "HasAmmoChanged");

	Params::AthenaEquippedItemBase_HasAmmoChanged Parms{};

	Parms.bHasAmmo = bHasAmmo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.OnBuildingMaterialChanged
// (Final, Native, Protected)

void UAthenaEquippedItemBase::OnBuildingMaterialChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "OnBuildingMaterialChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.OnLocalAmmoChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   LocalCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LocalRemaining                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::OnLocalAmmoChanged(int32 LocalCount, int32 LocalRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "OnLocalAmmoChanged");

	Params::AthenaEquippedItemBase_OnLocalAmmoChanged Parms{};

	Parms.LocalCount = LocalCount;
	Parms.LocalRemaining = LocalRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.OnViewTargetChanged
// (Final, Native, Protected)

void UAthenaEquippedItemBase::OnViewTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "OnViewTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.OnWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::OnWeaponChanged(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "OnWeaponChanged");

	Params::AthenaEquippedItemBase_OnWeaponChanged Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.OnWorldItemsChanged
// (Final, Native, Protected)

void UAthenaEquippedItemBase::OnWorldItemsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "OnWorldItemsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.ResourceCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ResourceCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::ResourceCountChanged(int32 ResourceCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "ResourceCountChanged");

	Params::AthenaEquippedItemBase_ResourceCountChanged Parms{};

	Parms.ResourceCount = ResourceCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.ResourceTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortResourceItemDefinition*      Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResourceCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::ResourceTypeChanged(class UFortResourceItemDefinition* Item, int32 ResourceCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "ResourceTypeChanged");

	Params::AthenaEquippedItemBase_ResourceTypeChanged Parms{};

	Parms.Item = Item;
	Parms.ResourceCount = ResourceCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.SetViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::SetViewModel(class UAthenaPlayerViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "SetViewModel");

	Params::AthenaEquippedItemBase_SetViewModel Parms{};

	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEquippedItemBase.UtilityItemCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Remaining                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::UtilityItemCountChanged(int32 Remaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "UtilityItemCountChanged");

	Params::AthenaEquippedItemBase_UtilityItemCountChanged Parms{};

	Parms.Remaining = Remaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.UtilityItemTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      Weapon                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWeaponItemDefinition*        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::UtilityItemTypeChanged(class AFortWeapon* Weapon, class UFortWeaponItemDefinition* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "UtilityItemTypeChanged");

	Params::AthenaEquippedItemBase_UtilityItemTypeChanged Parms{};

	Parms.Weapon = Weapon;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEquippedItemBase.WeaponTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEquippedWeaponDisplay                  Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEquippedItemBase::WeaponTypeChanged(EEquippedWeaponDisplay Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEquippedItemBase", "WeaponTypeChanged");

	Params::AthenaEquippedItemBase_WeaponTypeChanged Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortVehicleInfoIndicatorWidget.OnVehicleChanged
// (Event, Public, BlueprintEvent)

void UFortVehicleInfoIndicatorWidget::OnVehicleChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleInfoIndicatorWidget", "OnVehicleChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortVehicleInfoIndicatorWidget.OnVehicleHealthChanged
// (Native, Event, Public, BlueprintEvent)

void UFortVehicleInfoIndicatorWidget::OnVehicleHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleInfoIndicatorWidget", "OnVehicleHealthChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortVehicleInfoIndicatorWidget.SetVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortAthenaVehicle*               NewVehicle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVehicleInfoIndicatorWidget::SetVehicle(class AFortAthenaVehicle* NewVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVehicleInfoIndicatorWidget", "SetVehicle");

	Params::FortVehicleInfoIndicatorWidget_SetVehicle Parms{};

	Parms.NewVehicle = NewVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventScreenBase.OnPlayerDataAdded
// (Native, Protected)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventScreenBase::OnPlayerDataAdded(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventScreenBase", "OnPlayerDataAdded");

	Params::AthenaEventScreenBase_OnPlayerDataAdded Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventScreenBase.OnSquadDataAdded
// (Native, Protected)
// Parameters:
// class UAthenaRemoteSquadViewData*       InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventScreenBase::OnSquadDataAdded(class UAthenaRemoteSquadViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventScreenBase", "OnSquadDataAdded");

	Params::AthenaEventScreenBase_OnSquadDataAdded Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestExpiresWidget.OnQuestExpirationUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortQuestExpiresWidget::OnQuestExpirationUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestExpiresWidget", "OnQuestExpirationUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestExpiresWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestExpiresWidget::SetData(class UFortQuestItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestExpiresWidget", "SetData");

	Params::FortQuestExpiresWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamChanged_BP
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaEventMatchActiveGridScreenBase::OnTeamChanged_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchActiveGridScreenBase", "OnTeamChanged_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamEliminated
// (Final, Native, Private)
// Parameters:
// int32                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchActiveGridScreenBase::OnTeamEliminated(int32 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchActiveGridScreenBase", "OnTeamEliminated");

	Params::AthenaEventMatchActiveGridScreenBase_OnTeamEliminated Parms{};

	Parms.InSquadId = InSquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamEliminated_BP
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaEventMatchActiveGridScreenBase::OnTeamEliminated_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchActiveGridScreenBase", "OnTeamEliminated_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortActivatableVideoPanel.LoadVideo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             VideoID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivatableVideoPanel::LoadVideo(class FName VideoID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatableVideoPanel", "LoadVideo");

	Params::FortActivatableVideoPanel_LoadVideo Parms{};

	Parms.VideoID = VideoID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActivatableVideoPanel.LoadVideoByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   VideoIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivatableVideoPanel::LoadVideoByIndex(int32 VideoIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatableVideoPanel", "LoadVideoByIndex");

	Params::FortActivatableVideoPanel_LoadVideoByIndex Parms{};

	Parms.VideoIndex = VideoIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActivatableVideoPanel.StreamVideo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           VideoURL                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortActivatableVideoPanel::StreamVideo(const class FString& VideoURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActivatableVideoPanel", "StreamVideo");

	Params::FortActivatableVideoPanel_StreamVideo Parms{};

	Parms.VideoURL = std::move(VideoURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLevelIndicator.HandleItemForComparisonChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLevelIndicator::HandleItemForComparisonChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelIndicator", "HandleItemForComparisonChanged");

	Params::FortLevelIndicator_HandleItemForComparisonChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLevelIndicator.HandleItemToRepresentChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLevelIndicator::HandleItemToRepresentChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelIndicator", "HandleItemToRepresentChanged");

	Params::FortLevelIndicator_HandleItemToRepresentChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLevelIndicator.SetItemForComparison
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemForComparison                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLevelIndicator::SetItemForComparison(class UFortItem* Param_ItemForComparison)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelIndicator", "SetItemForComparison");

	Params::FortLevelIndicator_SetItemForComparison Parms{};

	Parms.Param_ItemForComparison = Param_ItemForComparison;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLevelIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLevelIndicator::SetItemToRepresent(class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelIndicator", "SetItemToRepresent");

	Params::FortLevelIndicator_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLevelIndicator.SetShouldShowMaximumLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShouldShowMaximumLevel                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLevelIndicator::SetShouldShowMaximumLevel(bool InShouldShowMaximumLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelIndicator", "SetShouldShowMaximumLevel");

	Params::FortLevelIndicator_SetShouldShowMaximumLevel Parms{};

	Parms.InShouldShowMaximumLevel = InShouldShowMaximumLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchEliminatedGridScreenBase.OnPlayerEliminatedStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEliminated                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchEliminatedGridScreenBase::OnPlayerEliminatedStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchEliminatedGridScreenBase", "OnPlayerEliminatedStateChanged");

	Params::AthenaEventMatchEliminatedGridScreenBase_OnPlayerEliminatedStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsEliminated = bInIsEliminated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchEliminatedGridScreenBase.OnTeamEliminated_BP
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaEventMatchEliminatedGridScreenBase::OnTeamEliminated_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchEliminatedGridScreenBase", "OnTeamEliminated_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHomebaseUIContext.AutoSlotAllSurvivorSquads
// (Final, Native, Public, BlueprintCallable)

void UFortHomebaseUIContext::AutoSlotAllSurvivorSquads()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "AutoSlotAllSurvivorSquads");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.GetLocalPlayerHasHeroBackpack
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::GetLocalPlayerHasHeroBackpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetLocalPlayerHasHeroBackpack");

	Params::FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetLocalPlayerHasHeroHeadAccessories
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::GetLocalPlayerHasHeroHeadAccessories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetLocalPlayerHasHeroHeadAccessories");

	Params::FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetShowHeroBackpackForLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::GetShowHeroBackpackForLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetShowHeroBackpackForLocalPlayer");

	Params::FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetShowHeroHeadAccessoriesForLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::GetShowHeroHeadAccessoriesForLocalPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetShowHeroHeadAccessoriesForLocalPlayer");

	Params::FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.HandleDifferentHeroLoadoutActivated
// (Final, Native, Private)
// Parameters:
// class UFortMcpProfileCampaign*          Profile                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::HandleDifferentHeroLoadoutActivated(class UFortMcpProfileCampaign* Profile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "HandleDifferentHeroLoadoutActivated");

	Params::FortHomebaseUIContext_HandleDifferentHeroLoadoutActivated Parms{};

	Parms.Profile = Profile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnDifferentHeroLoadoutSlotFocused__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::OnDifferentHeroLoadoutSlotFocused__DelegateSignature(class FName SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnDifferentHeroLoadoutSlotFocused__DelegateSignature");

	Params::FortHomebaseUIContext_OnDifferentHeroLoadoutSlotFocused__DelegateSignature Parms{};

	Parms.SlotName = SlotName;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnDifferentHeroLoadoutViewed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     PreviousLoadout                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortCampaignHeroLoadoutItem*     NewLoadout                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::OnDifferentHeroLoadoutViewed__DelegateSignature(const class UFortCampaignHeroLoadoutItem* PreviousLoadout, const class UFortCampaignHeroLoadoutItem* NewLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnDifferentHeroLoadoutViewed__DelegateSignature");

	Params::FortHomebaseUIContext_OnDifferentHeroLoadoutViewed__DelegateSignature Parms{};

	Parms.PreviousLoadout = PreviousLoadout;
	Parms.NewLoadout = NewLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnNodesPurchased__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             NodeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::OnNodesPurchased__DelegateSignature(class FName NodeId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnNodesPurchased__DelegateSignature");

	Params::FortHomebaseUIContext_OnNodesPurchased__DelegateSignature Parms{};

	Parms.NodeId = NodeId;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortHomebaseUIContext::OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnSlottedPrimaryHeroChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortHomebaseUIContext::OnSlottedPrimaryHeroChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnSlottedPrimaryHeroChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnSquadSlotChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             SquadName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::OnSquadSlotChanged__DelegateSignature(class FName SquadName, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnSquadSlotChanged__DelegateSignature");

	Params::FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature Parms{};

	Parms.SquadName = SquadName;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortHomebaseUIContext.OnSurvivorSquadsAutoSlotted__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortHomebaseUIContext::OnSurvivorSquadsAutoSlotted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "OnSurvivorSquadsAutoSlotted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHomebaseUIContext.SetCurrentlyFocusedHeroLoadoutSlotName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::SetCurrentlyFocusedHeroLoadoutSlotName(const class FName& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "SetCurrentlyFocusedHeroLoadoutSlotName");

	Params::FortHomebaseUIContext_SetCurrentlyFocusedHeroLoadoutSlotName Parms{};

	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.SetCurrentlyViewedHeroLoadout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     Loadout                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::SetCurrentlyViewedHeroLoadout(const class UFortCampaignHeroLoadoutItem* Loadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "SetCurrentlyViewedHeroLoadout");

	Params::FortHomebaseUIContext_SetCurrentlyViewedHeroLoadout Parms{};

	Parms.Loadout = Loadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.SetShouldAutoSlotSurvivorSquads
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::SetShouldAutoSlotSurvivorSquads(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "SetShouldAutoSlotSurvivorSquads");

	Params::FortHomebaseUIContext_SetShouldAutoSlotSurvivorSquads Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.SetShowHeroBackpackForLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::SetShowHeroBackpackForLocalPlayer(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "SetShowHeroBackpackForLocalPlayer");

	Params::FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.SetShowHeroHeadAccessoriesForLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::SetShowHeroHeadAccessoriesForLocalPlayer(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "SetShowHeroHeadAccessoriesForLocalPlayer");

	Params::FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHomebaseUIContext.GetCurrentlyFocusedHeroLoadoutSlotName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortHomebaseUIContext::GetCurrentlyFocusedHeroLoadoutSlotName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetCurrentlyFocusedHeroLoadoutSlotName");

	Params::FortHomebaseUIContext_GetCurrentlyFocusedHeroLoadoutSlotName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetCurrentlyViewedHeroLoadout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCampaignHeroLoadoutItem* UFortHomebaseUIContext::GetCurrentlyViewedHeroLoadout() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetCurrentlyViewedHeroLoadout");

	Params::FortHomebaseUIContext_GetCurrentlyViewedHeroLoadout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetGadgetItemInstanceForUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortGadgetItemDefinition*        GadgetDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItem* UFortHomebaseUIContext::GetGadgetItemInstanceForUI(class UFortGadgetItemDefinition* GadgetDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetGadgetItemInstanceForUI");

	Params::FortHomebaseUIContext_GetGadgetItemInstanceForUI Parms{};

	Parms.GadgetDefinition = GadgetDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetItemInSquadSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortHomebaseUIContext::GetItemInSquadSlot(class FName SquadName, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetItemInSquadSlot");

	Params::FortHomebaseUIContext_GetItemInSquadSlot Parms{};

	Parms.SquadName = SquadName;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetItemsInSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveEmptySquadSlots                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortHomebaseUIContext::GetItemsInSquad(const class FName SquadId, bool bRemoveEmptySquadSlots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetItemsInSquad");

	Params::FortHomebaseUIContext_GetItemsInSquad Parms{};

	Parms.SquadId = SquadId;
	Parms.bRemoveEmptySquadSlots = bRemoveEmptySquadSlots;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetShouldAutoSlotSurvivorSquads
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::GetShouldAutoSlotSurvivorSquads() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetShouldAutoSlotSurvivorSquads");

	Params::FortHomebaseUIContext_GetShouldAutoSlotSurvivorSquads Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetSlottedPrimaryHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHero*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHero* UFortHomebaseUIContext::GetSlottedPrimaryHero() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetSlottedPrimaryHero");

	Params::FortHomebaseUIContext_GetSlottedPrimaryHero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetSquadIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMultiSizeBrush UFortHomebaseUIContext::GetSquadIcon(const class FName SquadId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetSquadIcon");

	Params::FortHomebaseUIContext_GetSquadIcon Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetUnlockingQuestDefinitionForHeroLoadoutSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortCampaignHeroLoadoutItem*     Loadout                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortHomebaseUIContext::GetUnlockingQuestDefinitionForHeroLoadoutSlot(const class FName& SlotName, const class UFortCampaignHeroLoadoutItem* Loadout) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetUnlockingQuestDefinitionForHeroLoadoutSlot");

	Params::FortHomebaseUIContext_GetUnlockingQuestDefinitionForHeroLoadoutSlot Parms{};

	Parms.SlotName = SlotName;
	Parms.Loadout = Loadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetUnlockingQuestDefinitionForSquadSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortHomebaseUIContext::GetUnlockingQuestDefinitionForSquadSlot(const class FName& SquadName, const int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetUnlockingQuestDefinitionForSquadSlot");

	Params::FortHomebaseUIContext_GetUnlockingQuestDefinitionForSquadSlot Parms{};

	Parms.SquadName = SquadName;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.GetWorkerSetBonusEffectModifiers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     SetBonusTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAttributeModifierDisplayData>OutModifiers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortHomebaseUIContext::GetWorkerSetBonusEffectModifiers(const struct FGameplayTag& SetBonusTag, TArray<struct FFortAttributeModifierDisplayData>* OutModifiers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "GetWorkerSetBonusEffectModifiers");

	Params::FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers Parms{};

	Parms.SetBonusTag = std::move(SetBonusTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutModifiers != nullptr)
		*OutModifiers = std::move(Parms.OutModifiers);
}


// Function FortniteUI.FortHomebaseUIContext.IsAnySquadSlotUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::IsAnySquadSlotUnlocked(const class FName SquadId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "IsAnySquadSlotUnlocked");

	Params::FortHomebaseUIContext_IsAnySquadSlotUnlocked Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseUIContext.IsHeroLoadoutSlotUnlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortCampaignHeroLoadoutItem*     Loadout                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseUIContext::IsHeroLoadoutSlotUnlocked(const class FName& SlotName, const class UFortCampaignHeroLoadoutItem* Loadout) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseUIContext", "IsHeroLoadoutSlotUnlocked");

	Params::FortHomebaseUIContext_IsHeroLoadoutSlotUnlocked Parms{};

	Parms.SlotName = SlotName;
	Parms.Loadout = Loadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnBeingRevivedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsBeingRevived                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnBeingRevivedStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bIsBeingRevived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnBeingRevivedStateChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnBeingRevivedStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bIsBeingRevived = bIsBeingRevived;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDBNOStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDBNO                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnDBNOStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnDBNOStateChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnDBNOStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bIsDBNO = bIsDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDeadStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDead                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnDeadStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnDeadStateChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnDeadStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bIsDead = bIsDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDisconnectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDisconnected                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnDisconnectedChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bIsDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnDisconnectedChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnDisconnectedChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bIsDisconnected = bIsDisconnected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnHealthDamaged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHealthPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnHealthDamaged(class UAthenaRemotePlayerViewData* InPlayerData, float InHealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnHealthDamaged");

	Params::AthenaEventMatchPlayerWidgetBase_OnHealthDamaged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InHealthPercent = InHealthPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnHealthHealed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHealthPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnHealthHealed(class UAthenaRemotePlayerViewData* InPlayerData, float InHealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnHealthHealed");

	Params::AthenaEventMatchPlayerWidgetBase_OnHealthHealed Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InHealthPercent = InHealthPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsFollowedPlayerChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsFollowedPlayer                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnIsFollowedPlayerChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnIsFollowedPlayerChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnIsFollowedPlayerChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsFollowedPlayer = bInIsFollowedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsInRelevancyChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsInRelevancy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnIsInRelevancyChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnIsInRelevancyChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnIsInRelevancyChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsInRelevancy = bInIsInRelevancy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsReplayRelevancyPlayerChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsReplayRelevancyPlayer                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnIsReplayRelevancyPlayerChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsReplayRelevancyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnIsReplayRelevancyPlayerChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnIsReplayRelevancyPlayerChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsReplayRelevancyPlayer = bInIsReplayRelevancyPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnKillScoreChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnKillScoreChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnKillScoreChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnKillScoreChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InKillScore = InKillScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnLocationChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InLocation                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnLocationChanged(class UAthenaRemotePlayerViewData* InPlayerData, const class FString& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnLocationChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnLocationChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InLocation = std::move(InLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnMaterialCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnMaterialCountChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnMaterialCountChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnMaterialCountChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InCount = InCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlaceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlace                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnPlaceChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnPlaceChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnPlaceChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlace = InPlace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerDataChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnPlayerDataChanged(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnPlayerDataChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnPlayerDataChanged Parms{};

	Parms.InPlayerData = InPlayerData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerNameChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnPlayerNameChanged(class UAthenaRemotePlayerViewData* InPlayerData, const class FString& InPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnPlayerNameChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnPlayerNameChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerName = std::move(InPlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerPawnChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  InPlayerPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnPlayerPawnChanged(class UAthenaRemotePlayerViewData* InPlayerData, class AFortPlayerPawn* InPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnPlayerPawnChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnPlayerPawnChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerPawn = InPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnPlayerStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnPlayerStateChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnPlayerStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerState = InPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnShieldDamaged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InShieldPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnShieldDamaged(class UAthenaRemotePlayerViewData* InPlayerData, float InShieldPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnShieldDamaged");

	Params::AthenaEventMatchPlayerWidgetBase_OnShieldDamaged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InShieldPercent = InShieldPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnShieldHealed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InShieldPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnShieldHealed(class UAthenaRemotePlayerViewData* InPlayerData, float InShieldPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnShieldHealed");

	Params::AthenaEventMatchPlayerWidgetBase_OnShieldHealed Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InShieldPercent = InShieldPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnSquadIdChanged(class UAthenaRemotePlayerViewData* InPlayerData, uint8 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnSquadIdChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnSquadIdChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InSquadId = InSquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnStormcapScoreChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InScore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnStormcapScoreChanged(class UAthenaRemotePlayerViewData* InPlayerData, float InScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnStormcapScoreChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnStormcapScoreChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InScore = InScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.OnTeamColorChanged
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InTeamColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::OnTeamColorChanged(class UAthenaRemotePlayerViewData* InPlayerData, const struct FLinearColor& InTeamColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "OnTeamColorChanged");

	Params::AthenaEventMatchPlayerWidgetBase_OnTeamColorChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InTeamColor = std::move(InTeamColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchPlayerWidgetBase.SetPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchPlayerWidgetBase::SetPlayerData(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchPlayerWidgetBase", "SetPlayerData");

	Params::AthenaEventMatchPlayerWidgetBase_SetPlayerData Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationOptionsBase.HandleAlterationsOptionHovered
// (Final, Native, Public)
// Parameters:
// class UCommonButton*                    AlterationOptionButton                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::HandleAlterationsOptionHovered(class UCommonButton* AlterationOptionButton, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "HandleAlterationsOptionHovered");

	Params::FortAlterationOptionsBase_HandleAlterationsOptionHovered Parms{};

	Parms.AlterationOptionButton = AlterationOptionButton;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationOptionsBase.HandleAlterationsOptionSelected
// (Final, Native, Public)
// Parameters:
// class UCommonButton*                    AlterationOptionButton                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GroupIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::HandleAlterationsOptionSelected(class UCommonButton* AlterationOptionButton, int32 GroupIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "HandleAlterationsOptionSelected");

	Params::FortAlterationOptionsBase_HandleAlterationsOptionSelected Parms{};

	Parms.AlterationOptionButton = AlterationOptionButton;
	Parms.GroupIndex = GroupIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationOptionsBase.OnGenerateOption
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortAlterationOptionType               OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAlterationOption*            OptionWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::OnGenerateOption(EFortAlterationOptionType OptionType, class UFortAlterationOption* OptionWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "OnGenerateOption");

	Params::FortAlterationOptionsBase_OnGenerateOption Parms{};

	Parms.OptionType = OptionType;
	Parms.OptionWidget = OptionWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationOptionsBase.OnItemChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::OnItemChanged(bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "OnItemChanged");

	Params::FortAlterationOptionsBase_OnItemChanged Parms{};

	Parms.bIntroAlterations = bIntroAlterations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationOptionsBase.ProcessAlterationOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOptionsBase::ProcessAlterationOptions(bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "ProcessAlterationOptions");

	Params::FortAlterationOptionsBase_ProcessAlterationOptions Parms{};

	Parms.bIntroAlterations = bIntroAlterations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationOptionsBase.DoAlterationOptionsExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAlterationOptionType               OptionType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationOptionsBase::DoAlterationOptionsExist(EFortAlterationOptionType OptionType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "DoAlterationOptionsExist");

	Params::FortAlterationOptionsBase_DoAlterationOptionsExist Parms{};

	Parms.OptionType = OptionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationOptionsBase.IsValidAlterationSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationOptionsBase::IsValidAlterationSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOptionsBase", "IsValidAlterationSlot");

	Params::FortAlterationOptionsBase_IsValidAlterationSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaEventMatchScoreboardPlayerWidgetBase.SetSquadIdVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardPlayerWidgetBase::SetSquadIdVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardPlayerWidgetBase", "SetSquadIdVisible");

	Params::AthenaEventMatchScoreboardPlayerWidgetBase_SetSquadIdVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnSortByEliminationsActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnSortByEliminationsActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnSortByEliminationsActionExecuted");

	Params::AthenaEventMatchScoreboardScreenBase_OnSortByEliminationsActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnSortByPlaceActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnSortByPlaceActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnSortByPlaceActionExecuted");

	Params::AthenaEventMatchScoreboardScreenBase_OnSortByPlaceActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnSquadEliminated
// (Final, Native, Private)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnSquadEliminated(class UAthenaRemoteSquadViewData* InSquadData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnSquadEliminated");

	Params::AthenaEventMatchScoreboardScreenBase_OnSquadEliminated Parms{};

	Parms.InSquadData = InSquadData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnSquadKillscoreChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemoteSquadViewData*       InSquadData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnSquadKillscoreChanged(class UAthenaRemoteSquadViewData* InSquadData, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnSquadKillscoreChanged");

	Params::AthenaEventMatchScoreboardScreenBase_OnSquadKillscoreChanged Parms{};

	Parms.InSquadData = InSquadData;
	Parms.InKillScore = InKillScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnToggleSquadIdsActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnToggleSquadIdsActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnToggleSquadIdsActionExecuted");

	Params::AthenaEventMatchScoreboardScreenBase_OnToggleSquadIdsActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.OnToggleStormcapDamageActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::OnToggleStormcapDamageActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "OnToggleStormcapDamageActionExecuted");

	Params::AthenaEventMatchScoreboardScreenBase_OnToggleStormcapDamageActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.SetSquadIdsVisible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::SetSquadIdsVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "SetSquadIdsVisible");

	Params::AthenaEventMatchScoreboardScreenBase_SetSquadIdsVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchScoreboardScreenBase.SetStormcapDamageVisible
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchScoreboardScreenBase::SetStormcapDamageVisible(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchScoreboardScreenBase", "SetStormcapDamageVisible");

	Params::AthenaEventMatchScoreboardScreenBase_SetStormcapDamageVisible Parms{};

	Parms.InVisible = InVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.OnPlayerDeadStateChanged
// (Final, Native, Protected)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDead                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::OnPlayerDeadStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "OnPlayerDeadStateChanged");

	Params::AthenaEventMatchStatusScreenBase_OnPlayerDeadStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsDead = bInIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.OnPlayerDeadStateChanged_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDead                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::OnPlayerDeadStateChanged_BP(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "OnPlayerDeadStateChanged_BP");

	Params::AthenaEventMatchStatusScreenBase_OnPlayerDeadStateChanged_BP Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsDead = bInIsDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.OnPlayerKillScoreChanged
// (Final, Native, Protected)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::OnPlayerKillScoreChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "OnPlayerKillScoreChanged");

	Params::AthenaEventMatchStatusScreenBase_OnPlayerKillScoreChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InKillScore = InKillScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateChestsLootedText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ChestsLootedText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateChestsLootedText(const class FText& ChestsLootedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateChestsLootedText");

	Params::AthenaEventMatchStatusScreenBase_UpdateChestsLootedText Parms{};

	Parms.ChestsLootedText = std::move(ChestsLootedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateCircleRadiusText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             CircleRadiusText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateCircleRadiusText(const class FText& CircleRadiusText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateCircleRadiusText");

	Params::AthenaEventMatchStatusScreenBase_UpdateCircleRadiusText Parms{};

	Parms.CircleRadiusText = std::move(CircleRadiusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateDamageHealedText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             DamageHealedText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateDamageHealedText(const class FText& DamageHealedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateDamageHealedText");

	Params::AthenaEventMatchStatusScreenBase_UpdateDamageHealedText Parms{};

	Parms.DamageHealedText = std::move(DamageHealedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateDamageInflictedText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             DamageInflictedText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateDamageInflictedText(const class FText& DamageInflictedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateDamageInflictedText");

	Params::AthenaEventMatchStatusScreenBase_UpdateDamageInflictedText Parms{};

	Parms.DamageInflictedText = std::move(DamageInflictedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateDamageTakenText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             DamageTakenText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateDamageTakenText(const class FText& DamageTakenText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateDamageTakenText");

	Params::AthenaEventMatchStatusScreenBase_UpdateDamageTakenText Parms{};

	Parms.DamageTakenText = std::move(DamageTakenText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateFastestKillText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             FastestKillText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             FastestKillTime                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateFastestKillText(const class FText& FastestKillText, const class FText& FastestKillTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateFastestKillText");

	Params::AthenaEventMatchStatusScreenBase_UpdateFastestKillText Parms{};

	Parms.FastestKillText = std::move(FastestKillText);
	Parms.FastestKillTime = std::move(FastestKillTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateGamePhaseText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             GamePhaseText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateGamePhaseText(const class FText& GamePhaseText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateGamePhaseText");

	Params::AthenaEventMatchStatusScreenBase_UpdateGamePhaseText Parms{};

	Parms.GamePhaseText = std::move(GamePhaseText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateGamePhaseTimeText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             GamePhaseTimeText                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateGamePhaseTimeText(const class FText& GamePhaseTimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateGamePhaseTimeText");

	Params::AthenaEventMatchStatusScreenBase_UpdateGamePhaseTimeText Parms{};

	Parms.GamePhaseTimeText = std::move(GamePhaseTimeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateGamePhaseTimeTitleText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             GamePhaseTimeTitleText                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateGamePhaseTimeTitleText(const class FText& GamePhaseTimeTitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateGamePhaseTimeTitleText");

	Params::AthenaEventMatchStatusScreenBase_UpdateGamePhaseTimeTitleText Parms{};

	Parms.GamePhaseTimeTitleText = std::move(GamePhaseTimeTitleText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateLongestEliminationScore
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             LongestEliminationScore                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateLongestEliminationScore(const class FText& LongestEliminationScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateLongestEliminationScore");

	Params::AthenaEventMatchStatusScreenBase_UpdateLongestEliminationScore Parms{};

	Parms.LongestEliminationScore = std::move(LongestEliminationScore);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateLongestEliminationText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             LongestEliminationText                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateLongestEliminationText(const class FText& LongestEliminationText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateLongestEliminationText");

	Params::AthenaEventMatchStatusScreenBase_UpdateLongestEliminationText Parms{};

	Parms.LongestEliminationText = std::move(LongestEliminationText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateMatchTimeText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             MatchTimeText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateMatchTimeText(const class FText& MatchTimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateMatchTimeText");

	Params::AthenaEventMatchStatusScreenBase_UpdateMatchTimeText Parms{};

	Parms.MatchTimeText = std::move(MatchTimeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateMostKillsScore
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             MostKillsScore                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateMostKillsScore(const class FText& MostKillsScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateMostKillsScore");

	Params::AthenaEventMatchStatusScreenBase_UpdateMostKillsScore Parms{};

	Parms.MostKillsScore = std::move(MostKillsScore);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateMostKillsText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             MostKillsText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateMostKillsText(const class FText& MostKillsText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateMostKillsText");

	Params::AthenaEventMatchStatusScreenBase_UpdateMostKillsText Parms{};

	Parms.MostKillsText = std::move(MostKillsText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdatePiecesBuiltText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PiecesBuiltText                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdatePiecesBuiltText(const class FText& PiecesBuiltText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdatePiecesBuiltText");

	Params::AthenaEventMatchStatusScreenBase_UpdatePiecesBuiltText Parms{};

	Parms.PiecesBuiltText = std::move(PiecesBuiltText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdatePiecesDestroyedText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PiecesDestroyedText                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdatePiecesDestroyedText(const class FText& PiecesDestroyedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdatePiecesDestroyedText");

	Params::AthenaEventMatchStatusScreenBase_UpdatePiecesDestroyedText Parms{};

	Parms.PiecesDestroyedText = std::move(PiecesDestroyedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdatePlayersRemainingText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayersRemainingText                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdatePlayersRemainingText(const class FText& PlayersRemainingText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdatePlayersRemainingText");

	Params::AthenaEventMatchStatusScreenBase_UpdatePlayersRemainingText Parms{};

	Parms.PlayersRemainingText = std::move(PlayersRemainingText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateShotsFiredText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ShotsFiredText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateShotsFiredText(const class FText& ShotsFiredText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateShotsFiredText");

	Params::AthenaEventMatchStatusScreenBase_UpdateShotsFiredText Parms{};

	Parms.ShotsFiredText = std::move(ShotsFiredText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateSupplyDropsLootedText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             SupplyDropsLootedText                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateSupplyDropsLootedText(const class FText& SupplyDropsLootedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateSupplyDropsLootedText");

	Params::AthenaEventMatchStatusScreenBase_UpdateSupplyDropsLootedText Parms{};

	Parms.SupplyDropsLootedText = std::move(SupplyDropsLootedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchStatusScreenBase.UpdateTimeSinceLastKillText
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TimeSinceLastKillText                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaEventMatchStatusScreenBase::UpdateTimeSinceLastKillText(const class FText& TimeSinceLastKillText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchStatusScreenBase", "UpdateTimeSinceLastKillText");

	Params::AthenaEventMatchStatusScreenBase_UpdateTimeSinceLastKillText Parms{};

	Parms.TimeSinceLastKillText = std::move(TimeSinceLastKillText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerDeadStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDead                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchTeamWidgetBase::OnPlayerDeadStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchTeamWidgetBase", "OnPlayerDeadStateChanged");

	Params::AthenaEventMatchTeamWidgetBase_OnPlayerDeadStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsDead = bInIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerDisconnectedChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDisconnected                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEventMatchTeamWidgetBase::OnPlayerDisconnectedChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchTeamWidgetBase", "OnPlayerDisconnectedChanged");

	Params::AthenaEventMatchTeamWidgetBase_OnPlayerDisconnectedChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsDisconnected = bInIsDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerWidgetAdded
// (Event, Public, BlueprintEvent)

void UAthenaEventMatchTeamWidgetBase::OnPlayerWidgetAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchTeamWidgetBase", "OnPlayerWidgetAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaEventMatchTeamWidgetBase.GetTeamKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaEventMatchTeamWidgetBase::GetTeamKills() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchTeamWidgetBase", "GetTeamKills");

	Params::AthenaEventMatchTeamWidgetBase_GetTeamKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaEventMatchTeamWidgetBase.IsTeamDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaEventMatchTeamWidgetBase::IsTeamDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEventMatchTeamWidgetBase", "IsTeamDead");

	Params::AthenaEventMatchTeamWidgetBase_IsTeamDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCardUtilities.GetCardDimensions
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortItemType                           ItemType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemCardSize                       CardSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsReward                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseNewItemCardSizes                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFortItemCardUtilities::GetCardDimensions(const EFortItemType ItemType, const EFortItemCardSize CardSize, const bool IsReward, const bool UseNewItemCardSizes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItemCardUtilities", "GetCardDimensions");

	Params::FortItemCardUtilities_GetCardDimensions Parms{};

	Parms.ItemType = ItemType;
	Parms.CardSize = CardSize;
	Parms.IsReward = IsReward;
	Parms.UseNewItemCardSizes = UseNewItemCardSizes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAccountStatsContext.CanShowAccountStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountStatsContext::CanShowAccountStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountStatsContext", "CanShowAccountStats");

	Params::FortAccountStatsContext_CanShowAccountStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationModScreenBase.AreIngredientRequirementsMent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemQuantityPair>    RequiredIngredients                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationModScreenBase::AreIngredientRequirementsMent(const TArray<struct FFortItemQuantityPair>& RequiredIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "AreIngredientRequirementsMent");

	Params::FortAlterationModScreenBase_AreIngredientRequirementsMent Parms{};

	Parms.RequiredIngredients = std::move(RequiredIngredients);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationModScreenBase.CancelSelection
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModScreenBase::CancelSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "CancelSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationModScreenBase.ConfirmSelection
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModScreenBase::ConfirmSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "ConfirmSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationModScreenBase.HandleBackAction
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::HandleBackAction(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "HandleBackAction");

	Params::FortAlterationModScreenBase_HandleBackAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortAlterationModScreenBase.OnAlterationModificationCompleted
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::OnAlterationModificationCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "OnAlterationModificationCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationModScreenBase.OnAlterationModificationStarted
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::OnAlterationModificationStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "OnAlterationModificationStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationModScreenBase.OnAlterationModificationSucess
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ModifiedSlotIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnAlterationModificationSucess(int32 ModifiedSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "OnAlterationModificationSucess");

	Params::FortAlterationModScreenBase_OnAlterationModificationSucess Parms{};

	Parms.ModifiedSlotIndex = ModifiedSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationModScreenBase.OnAlterationOptionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAlterationOption*            CurrentAlterationOption                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnAlterationOptionChanged(class UFortAlterationOption* CurrentAlterationOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "OnAlterationOptionChanged");

	Params::FortAlterationModScreenBase_OnAlterationOptionChanged Parms{};

	Parms.CurrentAlterationOption = CurrentAlterationOption;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationModScreenBase.OnItemSlotChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    SelectedSlot                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::OnItemSlotChanged(bool SelectedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "OnItemSlotChanged");

	Params::FortAlterationModScreenBase_OnItemSlotChanged Parms{};

	Parms.SelectedSlot = SelectedSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationModScreenBase.RefreshItemAndAlterationsBP
// (Event, Protected, BlueprintEvent)

void UFortAlterationModScreenBase::RefreshItemAndAlterationsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "RefreshItemAndAlterationsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationModScreenBase.SetItemForAlterationsModding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterableItem*               InAlterableItem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModScreenBase::SetItemForAlterationsModding(class UFortAlterableItem* InAlterableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModScreenBase", "SetItemForAlterationsModding");

	Params::FortAlterationModScreenBase_SetItemForAlterationsModding Parms{};

	Parms.InAlterableItem = InAlterableItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDisableAutoSlottingPromptAction.CompleteExecution
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortDialogResult                       Result                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ResultName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDisableAutoSlottingPromptAction::CompleteExecution(const EFortDialogResult Result, const class FName ResultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDisableAutoSlottingPromptAction", "CompleteExecution");

	Params::FortDisableAutoSlottingPromptAction_CompleteExecution Parms{};

	Parms.Result = Result;
	Parms.ResultName = ResultName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDisableAutoSlottingPromptAction.Execute
// (Event, Protected, BlueprintEvent)

void UFortDisableAutoSlottingPromptAction::Execute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDisableAutoSlottingPromptAction", "Execute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaGadgetFuelWidget.SetItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaGadgetFuelWidget::SetItem(class UFortWorldItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGadgetFuelWidget", "SetItem");

	Params::AthenaGadgetFuelWidget_SetItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.UINavigationManager.ClearStack
// (Final, Native, Public, BlueprintCallable)

void UUINavigationManager::ClearStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "ClearStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.UINavigationManager.GetDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UUINavigationManager::GetDisplayName(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "GetDisplayName");

	Params::UINavigationManager_GetDisplayName Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.UINavigationManager.GetStackSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UUINavigationManager::GetStackSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "GetStackSize");

	Params::UINavigationManager_GetStackSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.UINavigationManager.NavigationToIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUINavigationManager::NavigationToIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "NavigationToIndex");

	Params::UINavigationManager_NavigationToIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.UINavigationManager.PopNavigation
// (Final, Native, Public, BlueprintCallable)

void UUINavigationManager::PopNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "PopNavigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.UINavigationManager.PushNavigation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             DisplayName                                            (Parm, NativeAccessSpecifierPublic)
// class UObject*                          ObjectData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             IdData                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntData                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FUINavigationData& Data)>OnNavigateTo                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FUINavigationData& Data)>OnNavigateFrom                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UUINavigationManager::PushNavigation(const class FText& DisplayName, class UObject* ObjectData, class FName IdData, int32 IntData, const TDelegate<void(const struct FUINavigationData& Data)>& OnNavigateTo, const TDelegate<void(const struct FUINavigationData& Data)>& OnNavigateFrom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UINavigationManager", "PushNavigation");

	Params::UINavigationManager_PushNavigation Parms{};

	Parms.DisplayName = std::move(DisplayName);
	Parms.ObjectData = ObjectData;
	Parms.IdData = IdData;
	Parms.IntData = IntData;
	Parms.OnNavigateTo = OnNavigateTo;
	Parms.OnNavigateFrom = OnNavigateFrom;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.AttemptMatchmakeForQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutContentNotDownloaded                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::AttemptMatchmakeForQuest(class UFortQuestItem* Quest, bool* OutContentNotDownloaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "AttemptMatchmakeForQuest");

	Params::FortUINavigationManager_AttemptMatchmakeForQuest Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutContentNotDownloaded != nullptr)
		*OutContentNotDownloaded = Parms.OutContentNotDownloaded;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.AttemptPlayQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::AttemptPlayQuest(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "AttemptPlayQuest");

	Params::FortUINavigationManager_AttemptPlayQuest Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CanAccessCollectionBook
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::CanAccessCollectionBook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CanAccessCollectionBook");

	Params::FortUINavigationManager_CanAccessCollectionBook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CanAccessHeroLoadoutScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::CanAccessHeroLoadoutScreen(class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CanAccessHeroLoadoutScreen");

	Params::FortUINavigationManager_CanAccessHeroLoadoutScreen Parms{};

	Parms.HeroLoadout = HeroLoadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CanAccessItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            ItemManagementFilter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::CanAccessItemManagementScreen(EFortFrontendInventoryFilter ItemManagementFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CanAccessItemManagementScreen");

	Params::FortUINavigationManager_CanAccessItemManagementScreen Parms{};

	Parms.ItemManagementFilter = ItemManagementFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CanAccessSquadManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::CanAccessSquadManagementScreen(class FName SquadId, int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CanAccessSquadManagementScreen");

	Params::FortUINavigationManager_CanAccessSquadManagementScreen Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CanNavigateToQuestObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::CanNavigateToQuestObjective(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CanNavigateToQuestObjective");

	Params::FortUINavigationManager_CanNavigateToQuestObjective Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.CenterWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::CenterWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CenterWidget");

	Params::FortUINavigationManager_CenterWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.CompletePendingNavigationOp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUINavigationOp                     NavigationOp                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::CompletePendingNavigationOp(EFortUINavigationOp NavigationOp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "CompletePendingNavigationOp");

	Params::FortUINavigationManager_CompletePendingNavigationOp Parms{};

	Parms.NavigationOp = NavigationOp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.HasPendingNavigationOp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUINavigationOp                     NavigationOp                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::HasPendingNavigationOp(EFortUINavigationOp NavigationOp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "HasPendingNavigationOp");

	Params::FortUINavigationManager_HasPendingNavigationOp Parms{};

	Parms.NavigationOp = NavigationOp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINavigationManager.NavigateForGift
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGiftBoxItem*                 Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateForGift(class UFortGiftBoxItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateForGift");

	Params::FortUINavigationManager_NavigateForGift Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToCollectionBook
// (Final, Native, Public, BlueprintCallable)

void UFortUINavigationManager::NavigateToCollectionBook()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToCollectionBook");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToExpeditions
// (Final, Native, Public, BlueprintCallable)

void UFortUINavigationManager::NavigateToExpeditions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToExpeditions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToFeature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateToFeature(EFortUIFeature Feature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToFeature");

	Params::FortUINavigationManager_NavigateToFeature Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateToItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToItem");

	Params::FortUINavigationManager_NavigateToItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateToItemManagementScreen(EFortFrontendInventoryFilter Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToItemManagementScreen");

	Params::FortUINavigationManager_NavigateToItemManagementScreen Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToQuestObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateToQuestObjective(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToQuestObjective");

	Params::FortUINavigationManager_NavigateToQuestObjective Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.NavigateToSquadSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::NavigateToSquadSlot(const class FName SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "NavigateToSquadSlot");

	Params::FortUINavigationManager_NavigateToSquadSlot Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.PushHeroLoadoutScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::PushHeroLoadoutScreen(class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "PushHeroLoadoutScreen");

	Params::FortUINavigationManager_PushHeroLoadoutScreen Parms{};

	Parms.HeroLoadout = HeroLoadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.PushItemInspectionScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemInspectionMode                 Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemTileView*                CycleTileView                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReadOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowFavoriting                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTemporaryItem                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRarityUpgrading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::PushItemInspectionScreen(class UFortItem* ItemToInspect, EFortItemInspectionMode Mode, class UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "PushItemInspectionScreen");

	Params::FortUINavigationManager_PushItemInspectionScreen Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.Mode = Mode;
	Parms.CycleTileView = CycleTileView;
	Parms.bReadOnly = bReadOnly;
	Parms.bAllowFavoriting = bAllowFavoriting;
	Parms.bIsTemporaryItem = bIsTemporaryItem;
	Parms.bAllowRarityUpgrading = bAllowRarityUpgrading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.PushItemManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            ItemManagementFilter                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ItemToSelect                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::PushItemManagementScreen(EFortFrontendInventoryFilter ItemManagementFilter, class UFortItem* ItemToSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "PushItemManagementScreen");

	Params::FortUINavigationManager_PushItemManagementScreen Parms{};

	Parms.ItemManagementFilter = ItemManagementFilter;
	Parms.ItemToSelect = ItemToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.PushSquadManagementScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::PushSquadManagementScreen(class FName SquadId, int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "PushSquadManagementScreen");

	Params::FortUINavigationManager_PushSquadManagementScreen Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINavigationManager::SetScrollWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "SetScrollWidget");

	Params::FortUINavigationManager_SetScrollWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINavigationManager.TryGetPendingNavigationOp
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortUINavigationOperation       NavigationOp                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINavigationManager::TryGetPendingNavigationOp(struct FFortUINavigationOperation* NavigationOp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINavigationManager", "TryGetPendingNavigationOp");

	Params::FortUINavigationManager_TryGetPendingNavigationOp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NavigationOp != nullptr)
		*NavigationOp = std::move(Parms.NavigationOp);

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaGameOverScreenBase.CanShowGoToBoss
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaGameOverScreenBase::CanShowGoToBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGameOverScreenBase", "CanShowGoToBoss");

	Params::AthenaGameOverScreenBase_CanShowGoToBoss Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaGameOverScreenBase.GoToBoss
// (Final, Native, Public, BlueprintCallable)

void UAthenaGameOverScreenBase::GoToBoss()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGameOverScreenBase", "GoToBoss");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaGameOverScreenBase.RequestRefreshInput
// (Event, Public, BlueprintEvent)

void UAthenaGameOverScreenBase::RequestRefreshInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGameOverScreenBase", "RequestRefreshInput");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortItemView.OnUserInputChangedView__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortItemView::OnUserInputChangedView__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "OnUserInputChangedView__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemView.RegisterInputActions
// (Final, Native, Public, BlueprintCallable)

void UFortItemView::RegisterInputActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "RegisterInputActions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.RestoreInitialTransform
// (Final, Native, Public, BlueprintCallable)

void UFortItemView::RestoreInitialTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "RestoreInitialTransform");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.SetOwningPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonActivatablePanel*          Panel                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemView::SetOwningPanel(class UCommonActivatablePanel* Panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "SetOwningPanel");

	Params::FortItemView_SetOwningPanel Parms{};

	Parms.Panel = Panel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.SetSceneComponentToAffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemView::SetSceneComponentToAffect(class USceneComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "SetSceneComponentToAffect");

	Params::FortItemView_SetSceneComponentToAffect Parms{};

	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.SetSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemViewSettings            Settings                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortItemView::SetSettings(const struct FFortItemViewSettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "SetSettings");

	Params::FortItemView_SetSettings Parms{};

	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.UnregisterInputActions
// (Final, Native, Public, BlueprintCallable)

void UFortItemView::UnregisterInputActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "UnregisterInputActions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemView.GetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemViewSettings            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortItemViewSettings UFortItemView::GetSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemView", "GetSettings");

	Params::FortItemView_GetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_LoadBannerAsset.AsyncLoadBannerAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UObject>           AssetToLoad                                            (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         MIDRef                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BannerColorName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_LoadBannerAsset* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_LoadBannerAsset* UFortAsyncAction_LoadBannerAsset::AsyncLoadBannerAsset(class UObject* WorldContextObject, TSoftObjectPtr<class UObject> AssetToLoad, class UMaterialInstanceDynamic* MIDRef, class FName BannerColorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_LoadBannerAsset", "AsyncLoadBannerAsset");

	Params::FortAsyncAction_LoadBannerAsset_AsyncLoadBannerAsset Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssetToLoad = AssetToLoad;
	Parms.MIDRef = MIDRef;
	Parms.BannerColorName = BannerColorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaGamePhaseWidgetBase.HandleCountdownUpdate
// (Final, Native, Protected)
// Parameters:
// int32                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaGamePhaseWidgetBase::HandleCountdownUpdate(int32 TimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGamePhaseWidgetBase", "HandleCountdownUpdate");

	Params::AthenaGamePhaseWidgetBase_HandleCountdownUpdate Parms{};

	Parms.TimeRemaining = TimeRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaGamePhaseWidgetBase.HandleGamePhaseStepChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhaseStep                    GamePhaseStep                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaGamePhaseWidgetBase::HandleGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGamePhaseWidgetBase", "HandleGamePhaseStepChanged");

	Params::AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged Parms{};

	Parms.GamePhaseStep = GamePhaseStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaGamePhaseWidgetBase.OnGamePhaseStepChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAthenaGamePhaseStep                    GamePhaseStep                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaGamePhaseWidgetBase::OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaGamePhaseWidgetBase", "OnGamePhaseStepChanged");

	Params::AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged Parms{};

	Parms.GamePhaseStep = GamePhaseStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationsWidget.HandleAlterationsSlotHovered
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    InAlterationButton                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::HandleAlterationsSlotHovered(class UCommonButton* InAlterationButton, int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "HandleAlterationsSlotHovered");

	Params::FortAlterationsWidget_HandleAlterationsSlotHovered Parms{};

	Parms.InAlterationButton = InAlterationButton;
	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.HandleAlterationsSlotSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    InAlterationButton                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::HandleAlterationsSlotSelected(class UCommonButton* InAlterationButton, int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "HandleAlterationsSlotSelected");

	Params::FortAlterationsWidget_HandleAlterationsSlotSelected Parms{};

	Parms.InAlterationButton = InAlterationButton;
	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.OnAlterationSlotIndexModifiedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   ModifiedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::OnAlterationSlotIndexModifiedBP(int32 ModifiedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnAlterationSlotIndexModifiedBP");

	Params::FortAlterationsWidget_OnAlterationSlotIndexModifiedBP Parms{};

	Parms.ModifiedIndex = ModifiedIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationsWidget.OnFocusFirstItem
// (Event, Protected, BlueprintEvent)

void UFortAlterationsWidget::OnFocusFirstItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnFocusFirstItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationsWidget.OnGenerateAlteration
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortAlterationInfo*              AlterationInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::OnGenerateAlteration(class UFortAlterationInfo* AlterationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnGenerateAlteration");

	Params::FortAlterationsWidget_OnGenerateAlteration Parms{};

	Parms.AlterationInfo = AlterationInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationsWidget.OnItemChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::OnItemChanged(bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnItemChanged");

	Params::FortAlterationsWidget_OnItemChanged Parms{};

	Parms.bIntroAlterations = bIntroAlterations;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationsWidget.OnItemToCompareWithChanged
// (Event, Public, BlueprintEvent)

void UFortAlterationsWidget::OnItemToCompareWithChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnItemToCompareWithChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationsWidget.OnStateChanged
// (Event, Public, BlueprintEvent)

void UFortAlterationsWidget::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationsWidget.ProcessAlterations
// (Final, Native, Public, BlueprintCallable)

void UFortAlterationsWidget::ProcessAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "ProcessAlterations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.SetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInPreviewNewAlterations                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIntroAlterations                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::SetItem(class UFortItem* InItem, bool bInPreviewNewAlterations, bool bIntroAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "SetItem");

	Params::FortAlterationsWidget_SetItem Parms{};

	Parms.InItem = InItem;
	Parms.bInPreviewNewAlterations = bInPreviewNewAlterations;
	Parms.bIntroAlterations = bIntroAlterations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.SetItemToCompareWith
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::SetItemToCompareWith(class UFortItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "SetItemToCompareWith");

	Params::FortAlterationsWidget_SetItemToCompareWith Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortAlterationWidgetState              InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::SetState(EFortAlterationWidgetState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "SetState");

	Params::FortAlterationsWidget_SetState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationsWidget.SetupInteractionEvents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterationButtonWidget*      Buttion                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationsWidget::SetupInteractionEvents(class UFortAlterationButtonWidget* Buttion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationsWidget", "SetupInteractionEvents");

	Params::FortAlterationsWidget_SetupInteractionEvents Parms{};

	Parms.Buttion = Buttion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.BeginUseFromHUD
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::BeginUseFromHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "BeginUseFromHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.CancelSwap
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::CancelSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "CancelSwap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.DisplayPlayerWonTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaHUDContext::DisplayPlayerWonTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "DisplayPlayerWonTime");

	Params::AthenaHUDContext_DisplayPlayerWonTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.EnableAutoRunFromHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::EnableAutoRunFromHUD(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "EnableAutoRunFromHUD");

	Params::AthenaHUDContext_EnableAutoRunFromHUD Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.EndUseFromHUD
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::EndUseFromHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "EndUseFromHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ExecuteActionNameFromHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::ExecuteActionNameFromHUD(const class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ExecuteActionNameFromHUD");

	Params::AthenaHUDContext_ExecuteActionNameFromHUD Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ExecuteActionNameFromHUDWithEventType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputEvent                             KeyEvent                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::ExecuteActionNameFromHUDWithEventType(const class FName ActionName, const EInputEvent KeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ExecuteActionNameFromHUDWithEventType");

	Params::AthenaHUDContext_ExecuteActionNameFromHUDWithEventType Parms{};

	Parms.ActionName = ActionName;
	Parms.KeyEvent = KeyEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.FireFromHUDStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TouchIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          DebugWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::FireFromHUDStart(int32 TouchIndex, class UWidget* DebugWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "FireFromHUDStart");

	Params::AthenaHUDContext_FireFromHUDStart Parms{};

	Parms.TouchIndex = TouchIndex;
	Parms.DebugWidget = DebugWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.FireFromHUDStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TouchIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          DebugWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::FireFromHUDStop(int32 TouchIndex, class UWidget* DebugWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "FireFromHUDStop");

	Params::AthenaHUDContext_FireFromHUDStop Parms{};

	Parms.TouchIndex = TouchIndex;
	Parms.DebugWidget = DebugWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ForceFireFromHUDStop
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::ForceFireFromHUDStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ForceFireFromHUDStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ForwardOnSpecialActorListChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FSpecialActorRepData             SpecialActorData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaHUDContext::ForwardOnSpecialActorListChanged(const struct FSpecialActorRepData& SpecialActorData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ForwardOnSpecialActorListChanged");

	Params::AthenaHUDContext_ForwardOnSpecialActorListChanged Parms{};

	Parms.SpecialActorData = std::move(SpecialActorData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.GetBoundActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UAthenaHUDContext::GetBoundActions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetBoundActions");

	Params::AthenaHUDContext_GetBoundActions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetWinnerText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             ReturnText                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             WinnerName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaHUDContext::GetWinnerText(class FText* ReturnText, const class FText& WinnerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetWinnerText");

	Params::AthenaHUDContext_GetWinnerText Parms{};

	Parms.WinnerName = std::move(WinnerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ReturnText != nullptr)
		*ReturnText = std::move(Parms.ReturnText);
}


// Function FortniteUI.AthenaHUDContext.HandleGamePhaseChange
// (Final, Native, Private)
// Parameters:
// EAthenaGamePhaseStep                    NewGamePhase                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::HandleGamePhaseChange(EAthenaGamePhaseStep NewGamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HandleGamePhaseChange");

	Params::AthenaHUDContext_HandleGamePhaseChange Parms{};

	Parms.NewGamePhase = NewGamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.HandleLocalPlayerBeginSkydiving
// (Final, Native, Private)

void UAthenaHUDContext::HandleLocalPlayerBeginSkydiving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HandleLocalPlayerBeginSkydiving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.HandleLocalPlayerDBNOStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsDBNO                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::HandleLocalPlayerDBNOStateChanged(bool bIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HandleLocalPlayerDBNOStateChanged");

	Params::AthenaHUDContext_HandleLocalPlayerDBNOStateChanged Parms{};

	Parms.bIsDBNO = bIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.HandleUIGameplayCue
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FName                             CueName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UAthenaHUDContext::HandleUIGameplayCue(class FName CueName, EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HandleUIGameplayCue");

	Params::AthenaHUDContext_HandleUIGameplayCue Parms{};

	Parms.CueName = CueName;
	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.IsActionBound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsActionBound(const class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsActionBound");

	Params::AthenaHUDContext_IsActionBound Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.JumpFromHudEnd
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::JumpFromHudEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "JumpFromHudEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.JumpFromHudStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TouchIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::JumpFromHudStart(int32 TouchIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "JumpFromHudStart");

	Params::AthenaHUDContext_JumpFromHudStart Parms{};

	Parms.TouchIndex = TouchIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.OnAllWinnersAnnounced
// (Final, Native, Private)

void UAthenaHUDContext::OnAllWinnersAnnounced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAllWinnersAnnounced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaAutoFireChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bEntering                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnAthenaAutoFireChanged__DelegateSignature(bool bEntering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaAutoFireChanged__DelegateSignature");

	Params::AthenaHUDContext_OnAthenaAutoFireChanged__DelegateSignature Parms{};

	Parms.bEntering = bEntering;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaGamePhaseChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EAthenaGamePhaseStep                    NewPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnAthenaGamePhaseChanged__DelegateSignature(EAthenaGamePhaseStep NewPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaGamePhaseChanged__DelegateSignature");

	Params::AthenaHUDContext_OnAthenaGamePhaseChanged__DelegateSignature Parms{};

	Parms.NewPhase = NewPhase;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaHUDAllWinnersAnnounced__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FAthenaWinnerInfo                Param_WinnerInfo                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnAthenaHUDAllWinnersAnnounced__DelegateSignature(const struct FAthenaWinnerInfo& Param_WinnerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaHUDAllWinnersAnnounced__DelegateSignature");

	Params::AthenaHUDContext_OnAthenaHUDAllWinnersAnnounced__DelegateSignature Parms{};

	Parms.Param_WinnerInfo = std::move(Param_WinnerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaInventoryItemSelected__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnAthenaInventoryItemSelected__DelegateSignature(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaInventoryItemSelected__DelegateSignature");

	Params::AthenaHUDContext_OnAthenaInventoryItemSelected__DelegateSignature Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaInventorySwapComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnAthenaInventorySwapComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaInventorySwapComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaInventorySwapStarted__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnAthenaInventorySwapStarted__DelegateSignature(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaInventorySwapStarted__DelegateSignature");

	Params::AthenaHUDContext_OnAthenaInventorySwapStarted__DelegateSignature Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnAthenaSettingsApplied__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnAthenaSettingsApplied__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnAthenaSettingsApplied__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnCanPTTChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnCanPTTChange__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnCanPTTChange__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaHUDContext.OnClientSettingUpdatedShowViewers
// (Final, Native, Public)

void UAthenaHUDContext::OnClientSettingUpdatedShowViewers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnClientSettingUpdatedShowViewers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnForwardStartedFalling__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnForwardStartedFalling__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnForwardStartedFalling__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerBeginSkydiving__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnLocalPlayerBeginSkydiving__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerBeginSkydiving__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerDBNOStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bIsDBNO                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnLocalPlayerDBNOStateChanged__DelegateSignature(bool bIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerDBNOStateChanged__DelegateSignature");

	Params::AthenaHUDContext_OnLocalPlayerDBNOStateChanged__DelegateSignature Parms{};

	Parms.bIsDBNO = bIsDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerDeathOnWin__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnLocalPlayerDeathOnWin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerDeathOnWin__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerKilledPlayer__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnLocalPlayerKilledPlayer__DelegateSignature(const class AFortPlayerStateAthena* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerKilledPlayer__DelegateSignature");

	Params::AthenaHUDContext_OnLocalPlayerKilledPlayer__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerLost__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EEndOfMatchReason                       LostReason                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnLocalPlayerLost__DelegateSignature(EEndOfMatchReason LostReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerLost__DelegateSignature");

	Params::AthenaHUDContext_OnLocalPlayerLost__DelegateSignature Parms{};

	Parms.LostReason = LostReason;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalPlayerWon__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnLocalPlayerWon__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalPlayerWon__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLocalTeamWon__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnLocalTeamWon__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLocalTeamWon__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnLowPerformanceMode__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bInLowPerformanceMode                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnLowPerformanceMode__DelegateSignature(bool bInLowPerformanceMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnLowPerformanceMode__DelegateSignature");

	Params::AthenaHUDContext_OnLowPerformanceMode__DelegateSignature Parms{};

	Parms.bInLowPerformanceMode = bInLowPerformanceMode;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnPlayerFiredWeapon__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnPlayerFiredWeapon__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnPlayerFiredWeapon__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnPlayerNameChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           NewName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnPlayerNameChange__DelegateSignature(const class FString& NewName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnPlayerNameChange__DelegateSignature");

	Params::AthenaHUDContext_OnPlayerNameChange__DelegateSignature Parms{};

	Parms.NewName = std::move(NewName);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnSignalQualityChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                                   NewQuality                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::OnSignalQualityChange__DelegateSignature(float NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnSignalQualityChange__DelegateSignature");

	Params::AthenaHUDContext_OnSignalQualityChange__DelegateSignature Parms{};

	Parms.NewQuality = NewQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaHUDContext.OnSpecialActorListChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::OnSpecialActorListChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "OnSpecialActorListChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.PlaylistUIExtensionChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::PlaylistUIExtensionChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "PlaylistUIExtensionChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaHUDContext.PTTStateChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EPTTState                               NewPushToTalkState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::PTTStateChange__DelegateSignature(EPTTState NewPushToTalkState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "PTTStateChange__DelegateSignature");

	Params::AthenaHUDContext_PTTStateChange__DelegateSignature Parms{};

	Parms.NewPushToTalkState = NewPushToTalkState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDContext.PushGameOverEmoteInput
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::PushGameOverEmoteInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "PushGameOverEmoteInput");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ReloadFromHUD
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::ReloadFromHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ReloadFromHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SelectWidgetToMove
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SelectWidgetToMove(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SelectWidgetToMove");

	Params::AthenaHUDContext_SelectWidgetToMove Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetLockOnStickCoords
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        LockOnCoords                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetLockOnStickCoords(const struct FVector2D& LockOnCoords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetLockOnStickCoords");

	Params::AthenaHUDContext_SetLockOnStickCoords Parms{};

	Parms.LockOnCoords = std::move(LockOnCoords);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetPTTState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPTTState                               NewPushToTalkState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetPTTState(EPTTState NewPushToTalkState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetPTTState");

	Params::AthenaHUDContext_SetPTTState Parms{};

	Parms.NewPushToTalkState = NewPushToTalkState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetResourceMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortResourceType                       NewMaterial                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetResourceMaterial(EFortResourceType NewMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetResourceMaterial");

	Params::AthenaHUDContext_SetResourceMaterial Parms{};

	Parms.NewMaterial = NewMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetSelectedInventoryItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetSelectedInventoryItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetSelectedInventoryItem");

	Params::AthenaHUDContext_SetSelectedInventoryItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetSelectWidgetToMoveMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetSelectWidgetToMoveMode(bool bSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetSelectWidgetToMoveMode");

	Params::AthenaHUDContext_SetSelectWidgetToMoveMode Parms{};

	Parms.bSet = bSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SetTargetingToggleable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SetTargetingToggleable(const bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SetTargetingToggleable");

	Params::AthenaHUDContext_SetTargetingToggleable Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.ShouldDisplayPlacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::ShouldDisplayPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ShouldDisplayPlacement");

	Params::AthenaHUDContext_ShouldDisplayPlacement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.ShouldDisplayScoreUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::ShouldDisplayScoreUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ShouldDisplayScoreUI");

	Params::AthenaHUDContext_ShouldDisplayScoreUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.ShowMobilePicker
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::ShowMobilePicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ShowMobilePicker");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaHUDContext.ShowMobilePicker__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaHUDContext::ShowMobilePicker__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "ShowMobilePicker__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaHUDContext.StartOrFinishSwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::StartOrFinishSwap(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "StartOrFinishSwap");

	Params::AthenaHUDContext_StartOrFinishSwap Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.StopItemSelectionInputFromHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TouchIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIdx                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::StopItemSelectionInputFromHUD(const int32 TouchIndex, const int32 SlotIdx, EFortQuickBars InQuickBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "StopItemSelectionInputFromHUD");

	Params::AthenaHUDContext_StopItemSelectionInputFromHUD Parms{};

	Parms.TouchIndex = TouchIndex;
	Parms.SlotIdx = SlotIdx;
	Parms.InQuickBar = InQuickBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.StopTargettingFromHUD
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::StopTargettingFromHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "StopTargettingFromHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.SwapQuickBarFocusFromHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotOverride                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::SwapQuickBarFocusFromHUD(EFortQuickBars InQuickBar, int32 SlotOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "SwapQuickBarFocusFromHUD");

	Params::AthenaHUDContext_SwapQuickBarFocusFromHUD Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.SlotOverride = SlotOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.TakeItemSelectionInputFromHUD
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TouchIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIdx                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUsing                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReloadOrUseIfAlreadySelected                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopUseImmediately                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::TakeItemSelectionInputFromHUD(const int32 TouchIndex, const int32 SlotIdx, bool* bIsUsing, EFortQuickBars InQuickBar, bool bReloadOrUseIfAlreadySelected, bool bStopUseImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "TakeItemSelectionInputFromHUD");

	Params::AthenaHUDContext_TakeItemSelectionInputFromHUD Parms{};

	Parms.TouchIndex = TouchIndex;
	Parms.SlotIdx = SlotIdx;
	Parms.InQuickBar = InQuickBar;
	Parms.bReloadOrUseIfAlreadySelected = bReloadOrUseIfAlreadySelected;
	Parms.bStopUseImmediately = bStopUseImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsUsing != nullptr)
		*bIsUsing = Parms.bIsUsing;
}


// Function FortniteUI.AthenaHUDContext.TakeLookInputFromHUD
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         LookRotator                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAthenaHUDContext::TakeLookInputFromHUD(const struct FRotator& LookRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "TakeLookInputFromHUD");

	Params::AthenaHUDContext_TakeLookInputFromHUD Parms{};

	Parms.LookRotator = std::move(LookRotator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.TakeLookStickInputFromHUD
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        LookStickPosition                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::TakeLookStickInputFromHUD(const struct FVector2D& LookStickPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "TakeLookStickInputFromHUD");

	Params::AthenaHUDContext_TakeLookStickInputFromHUD Parms{};

	Parms.LookStickPosition = std::move(LookStickPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.TakeMovementInputFromHUD
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          MoveVector                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTrySprint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::TakeMovementInputFromHUD(const struct FVector& MoveVector, bool bTrySprint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "TakeMovementInputFromHUD");

	Params::AthenaHUDContext_TakeMovementInputFromHUD Parms{};

	Parms.MoveVector = std::move(MoveVector);
	Parms.bTrySprint = bTrySprint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.UpdateSelectedWidgetMoveOffsetVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        VectorOffset                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FMoveScale                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::UpdateSelectedWidgetMoveOffsetVector(const struct FVector2D& VectorOffset, float FMoveScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "UpdateSelectedWidgetMoveOffsetVector");

	Params::AthenaHUDContext_UpdateSelectedWidgetMoveOffsetVector Parms{};

	Parms.VectorOffset = std::move(VectorOffset);
	Parms.FMoveScale = FMoveScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.UseOrRleoadFromHUDStart
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::UseOrRleoadFromHUDStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "UseOrRleoadFromHUDStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.UseOrRleoadFromHUDStop
// (Final, Native, Public, BlueprintCallable)

void UAthenaHUDContext::UseOrRleoadFromHUDStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "UseOrRleoadFromHUDStop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.CanAutoRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::CanAutoRun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "CanAutoRun");

	Params::AthenaHUDContext_CanAutoRun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.CanCurrentWeaponAutoFireFromReticle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::CanCurrentWeaponAutoFireFromReticle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "CanCurrentWeaponAutoFireFromReticle");

	Params::AthenaHUDContext_CanCurrentWeaponAutoFireFromReticle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.CanShootInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::CanShootInVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "CanShootInVehicle");

	Params::AthenaHUDContext_CanShootInVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.CycleQuickbar
// (Final, Native, Public, BlueprintCallable, Const)

void UAthenaHUDContext::CycleQuickbar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "CycleQuickbar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDContext.GetBatteryLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaHUDContext::GetBatteryLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetBatteryLevel");

	Params::AthenaHUDContext_GetBatteryLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetCanPTT
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::GetCanPTT() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetCanPTT");

	Params::AthenaHUDContext_GetCanPTT Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetCurrentViewModel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaPlayerViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaPlayerViewModel* UAthenaHUDContext::GetCurrentViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetCurrentViewModel");

	Params::AthenaHUDContext_GetCurrentViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetInLowPerformanceMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::GetInLowPerformanceMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetInLowPerformanceMode");

	Params::AthenaHUDContext_GetInLowPerformanceMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetInteractPressedTouchIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaHUDContext::GetInteractPressedTouchIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetInteractPressedTouchIndex");

	Params::AthenaHUDContext_GetInteractPressedTouchIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetJumpPressedTouchIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaHUDContext::GetJumpPressedTouchIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetJumpPressedTouchIndex");

	Params::AthenaHUDContext_GetJumpPressedTouchIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetLocalTime
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Hours                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minutes                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDContext::GetLocalTime(int32* Hours, int32* Minutes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetLocalTime");

	Params::AthenaHUDContext_GetLocalTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Hours != nullptr)
		*Hours = Parms.Hours;

	if (Minutes != nullptr)
		*Minutes = Parms.Minutes;
}


// Function FortniteUI.AthenaHUDContext.GetPlayerColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UAthenaHUDContext::GetPlayerColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetPlayerColor");

	Params::AthenaHUDContext_GetPlayerColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaHUDContext::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetPlayerName");

	Params::AthenaHUDContext_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetPlaylistUIExtender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortGameUIExtenderAthena*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortGameUIExtenderAthena* UAthenaHUDContext::GetPlaylistUIExtender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetPlaylistUIExtender");

	Params::AthenaHUDContext_GetPlaylistUIExtender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetPTTState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPTTState                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPTTState UAthenaHUDContext::GetPTTState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetPTTState");

	Params::AthenaHUDContext_GetPTTState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetSelectedInventoryItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UAthenaHUDContext::GetSelectedInventoryItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetSelectedInventoryItem");

	Params::AthenaHUDContext_GetSelectedInventoryItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetSquadConnectedCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaHUDContext::GetSquadConnectedCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetSquadConnectedCount");

	Params::AthenaHUDContext_GetSquadConnectedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetVictoryMusic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundCue*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundCue* UAthenaHUDContext::GetVictoryMusic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetVictoryMusic");

	Params::AthenaHUDContext_GetVictoryMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetVictoryText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaHUDContext::GetVictoryText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetVictoryText");

	Params::AthenaHUDContext_GetVictoryText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.GetVictoryUIType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaVictoryUIType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAthenaVictoryUIType UAthenaHUDContext::GetVictoryUIType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "GetVictoryUIType");

	Params::AthenaHUDContext_GetVictoryUIType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.HasAutofireTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::HasAutofireTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HasAutofireTarget");

	Params::AthenaHUDContext_HasAutofireTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.HasLockOnTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::HasLockOnTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HasLockOnTarget");

	Params::AthenaHUDContext_HasLockOnTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.HasWifi
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::HasWifi() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "HasWifi");

	Params::AthenaHUDContext_HasWifi Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsAutoRunEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsAutoRunEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsAutoRunEnabled");

	Params::AthenaHUDContext_IsAutoRunEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsCrouching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsCrouching() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsCrouching");

	Params::AthenaHUDContext_IsCrouching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsCurrentWeaponFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsCurrentWeaponFiring() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsCurrentWeaponFiring");

	Params::AthenaHUDContext_IsCurrentWeaponFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsInBuildMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsInBuildMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsInBuildMode");

	Params::AthenaHUDContext_IsInBuildMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsInSelectWidgetToMoveMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsInSelectWidgetToMoveMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsInSelectWidgetToMoveMode");

	Params::AthenaHUDContext_IsInSelectWidgetToMoveMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsMovingSelectedWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsMovingSelectedWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsMovingSelectedWidget");

	Params::AthenaHUDContext_IsMovingSelectedWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsOperatingTurret
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsOperatingTurret() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsOperatingTurret");

	Params::AthenaHUDContext_IsOperatingTurret Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsShowViewerCountEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsShowViewerCountEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsShowViewerCountEnabled");

	Params::AthenaHUDContext_IsShowViewerCountEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsSwapping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsSwapping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsSwapping");

	Params::AthenaHUDContext_IsSwapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsTargeting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsTargeting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsTargeting");

	Params::AthenaHUDContext_IsTargeting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.IsUsingScope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::IsUsingScope() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "IsUsingScope");

	Params::AthenaHUDContext_IsUsingScope Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDContext.UseTapToShoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaHUDContext::UseTapToShoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDContext", "UseTapToShoot");

	Params::AthenaHUDContext_UseTapToShoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDGamePhaseChangingBase.GamePhaseStepChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAthenaGamePhaseStep                    Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDGamePhaseChangingBase::GamePhaseStepChanged(EAthenaGamePhaseStep Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDGamePhaseChangingBase", "GamePhaseStepChanged");

	Params::AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged Parms{};

	Parms.Step = Step;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDGamePhaseChangingBase.HandleGamePhaseStepChanged
// (Final, Native, Private)
// Parameters:
// EAthenaGamePhaseStep                    Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaHUDGamePhaseChangingBase::HandleGamePhaseStepChanged(EAthenaGamePhaseStep Step)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDGamePhaseChangingBase", "HandleGamePhaseStepChanged");

	Params::AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged Parms{};

	Parms.Step = Step;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaHUDGamePhaseChangingBase.UpdateMessaging
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EAthenaGamePhaseStep                    Step                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             TimeText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaHUDGamePhaseChangingBase::UpdateMessaging(EAthenaGamePhaseStep Step, const class FText& MESSAGE, const class FText& TimeText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDGamePhaseChangingBase", "UpdateMessaging");

	Params::AthenaHUDGamePhaseChangingBase_UpdateMessaging Parms{};

	Parms.Step = Step;
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.TimeText = std::move(TimeText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAlterationButtonWidget.OnSetup
// (Event, Public, BlueprintEvent)

void UFortAlterationButtonWidget::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationButtonWidget", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationButtonWidget.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterationInfo*              InAlterationInfo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationButtonWidget::Setup(class UFortAlterationInfo* InAlterationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationButtonWidget", "Setup");

	Params::FortAlterationButtonWidget_Setup Parms{};

	Parms.InAlterationInfo = InAlterationInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationButtonWidget.GetAlterationInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationInfo*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationInfo* UFortAlterationButtonWidget::GetAlterationInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationButtonWidget", "GetAlterationInfo");

	Params::FortAlterationButtonWidget_GetAlterationInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaHUDPlayerActionAlertBase.AlertPlayer
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EAthenaPlayerActionAlert                Alert                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DetailText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaHUDPlayerActionAlertBase::AlertPlayer(EAthenaPlayerActionAlert Alert, const class FText& DetailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDPlayerActionAlertBase", "AlertPlayer");

	Params::AthenaHUDPlayerActionAlertBase_AlertPlayer Parms{};

	Parms.Alert = Alert;
	Parms.DetailText = std::move(DetailText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaHUDPlayerActionAlertBase.RequestNextAlert
// (Final, Native, Protected, BlueprintCallable)

void UAthenaHUDPlayerActionAlertBase::RequestNextAlert()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaHUDPlayerActionAlertBase", "RequestNextAlert");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget_NUI.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget_NUI::SetItemToRepresent(const class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget_NUI", "SetItemToRepresent");

	Params::FortItemWidget_NUI_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget_NUI.SetItemViewContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortItemViewContextInterface>Param_ItemViewContext                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortItemWidget_NUI::SetItemViewContext(TScriptInterface<class IFortItemViewContextInterface> Param_ItemViewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget_NUI", "SetItemViewContext");

	Params::FortItemWidget_NUI_SetItemViewContext Parms{};

	Parms.Param_ItemViewContext = Param_ItemViewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.ShouldUseNewItemCards
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMultiSizeItemCard::ShouldUseNewItemCards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMultiSizeItemCard", "ShouldUseNewItemCards");

	Params::FortMultiSizeItemCard_ShouldUseNewItemCards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMultiSizeItemCard.SetCardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCardSize                       CardSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetCardSize(const EFortItemCardSize CardSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetCardSize");

	Params::FortMultiSizeItemCard_SetCardSize Parms{};

	Parms.CardSize = CardSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetEmptyItemType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemType                           NewEmptyItemType                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetEmptyItemType(const EFortItemType NewEmptyItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetEmptyItemType");

	Params::FortMultiSizeItemCard_SetEmptyItemType Parms{};

	Parms.NewEmptyItemType = NewEmptyItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetQuantityOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_QuantityOverride                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetQuantityOverride(const int32 Param_QuantityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetQuantityOverride");

	Params::FortMultiSizeItemCard_SetQuantityOverride Parms{};

	Parms.Param_QuantityOverride = Param_QuantityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetRarityOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortRarity                             Param_RarityOverride                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetRarityOverride(const EFortRarity Param_RarityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetRarityOverride");

	Params::FortMultiSizeItemCard_SetRarityOverride Parms{};

	Parms.Param_RarityOverride = Param_RarityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetShouldCollapseBorderPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetShouldCollapseBorderPadding(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetShouldCollapseBorderPadding");

	Params::FortMultiSizeItemCard_SetShouldCollapseBorderPadding Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetShouldCollapseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetShouldCollapseItem(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetShouldCollapseItem");

	Params::FortMultiSizeItemCard_SetShouldCollapseItem Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.SetShouldDisplayItemAsReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeItemCard::SetShouldDisplayItemAsReward(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "SetShouldDisplayItemAsReward");

	Params::FortMultiSizeItemCard_SetShouldDisplayItemAsReward Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeItemCard.GetCardSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemCardSize                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemCardSize UFortMultiSizeItemCard::GetCardSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeItemCard", "GetCardSize");

	Params::FortMultiSizeItemCard_GetCardSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnBroadcastSpectatorPerPlayerInfoChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FFortBroadcastInfoPerPlayer>BroadcastPerPlayerInfo                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnBroadcastSpectatorPerPlayerInfoChanged(const TArray<struct FFortBroadcastInfoPerPlayer>& BroadcastPerPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnBroadcastSpectatorPerPlayerInfoChanged");

	Params::AthenaSpectatorUIContext_OnBroadcastSpectatorPerPlayerInfoChanged Parms{};

	Parms.BroadcastPerPlayerInfo = std::move(BroadcastPerPlayerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnFollowedPlayerChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorPC                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 NewFollowedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnFollowedPlayerChanged");

	Params::AthenaSpectatorUIContext_OnFollowedPlayerChanged Parms{};

	Parms.SpectatorPC = SpectatorPC;
	Parms.NewFollowedPlayer = NewFollowedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnGamePhaseChanged
// (Final, Native, Private)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnGamePhaseChanged");

	Params::AthenaSpectatorUIContext_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnGameStateSet
// (Final, Native, Private)
// Parameters:
// class AFortGameState*                   InGameState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnGameStateSet(class AFortGameState* InGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnGameStateSet");

	Params::AthenaSpectatorUIContext_OnGameStateSet Parms{};

	Parms.InGameState = InGameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnPawnForReplayRelevancyChanged
// (Final, Native, Private)
// Parameters:
// class AFortPawn*                        InPawnForReplayRelevancy                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnPawnForReplayRelevancyChanged(class AFortPawn* InPawnForReplayRelevancy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnPawnForReplayRelevancyChanged");

	Params::AthenaSpectatorUIContext_OnPawnForReplayRelevancyChanged Parms{};

	Parms.InPawnForReplayRelevancy = InPawnForReplayRelevancy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnPlayerBecameIrrelevant
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 FPS                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnPlayerBecameIrrelevant(class AFortPlayerState* FPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnPlayerBecameIrrelevant");

	Params::AthenaSpectatorUIContext_OnPlayerBecameIrrelevant Parms{};

	Parms.FPS = FPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnPlayerBecameRelevant
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 FPS                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnPlayerBecameRelevant(class AFortPlayerState* FPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnPlayerBecameRelevant");

	Params::AthenaSpectatorUIContext_OnPlayerBecameRelevant Parms{};

	Parms.FPS = FPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorUIContext.OnPlayerStateAdded
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           FPSA                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::OnPlayerStateAdded(class AFortPlayerStateAthena* FPSA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "OnPlayerStateAdded");

	Params::AthenaSpectatorUIContext_OnPlayerStateAdded Parms{};

	Parms.FPSA = FPSA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaSpectatorUIContext.PlayerDataDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::PlayerDataDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "PlayerDataDelegate__DelegateSignature");

	Params::AthenaSpectatorUIContext_PlayerDataDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaSpectatorUIContext.SquadDataDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorUIContext::SquadDataDelegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "SquadDataDelegate__DelegateSignature");

	Params::AthenaSpectatorUIContext_SquadDataDelegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorUIContext.GetFollowedPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaRemotePlayerViewData*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaRemotePlayerViewData* UAthenaSpectatorUIContext::GetFollowedPlayerData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "GetFollowedPlayerData");

	Params::AthenaSpectatorUIContext_GetFollowedPlayerData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorUIContext.GetPlayerData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerUID                                              (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaRemotePlayerViewData*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaRemotePlayerViewData* UAthenaSpectatorUIContext::GetPlayerData(const struct FUniqueNetIdRepl& PlayerUID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "GetPlayerData");

	Params::AthenaSpectatorUIContext_GetPlayerData Parms{};

	Parms.PlayerUID = std::move(PlayerUID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorUIContext.GetPlayerDataMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<struct FUniqueNetIdRepl, class UAthenaRemotePlayerViewData*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<struct FUniqueNetIdRepl, class UAthenaRemotePlayerViewData*> UAthenaSpectatorUIContext::GetPlayerDataMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "GetPlayerDataMap");

	Params::AthenaSpectatorUIContext_GetPlayerDataMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorUIContext.GetSquadDataMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<uint8, class UAthenaRemoteSquadViewData*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<uint8, class UAthenaRemoteSquadViewData*> UAthenaSpectatorUIContext::GetSquadDataMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorUIContext", "GetSquadDataMap");

	Params::AthenaSpectatorUIContext_GetSquadDataMap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaIndicatorLayerBase.SetDataSource
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaPlayerViewModel*           PlayerViewModel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaIndicatorLayerBase::SetDataSource(class UAthenaPlayerViewModel* PlayerViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaIndicatorLayerBase", "SetDataSource");

	Params::AthenaIndicatorLayerBase_SetDataSource Parms{};

	Parms.PlayerViewModel = PlayerViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaIndicatorLayerBase.SquadIndicatorsChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AFortPlayerStateAthena*>   PlayerStates                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaIndicatorLayerBase::SquadIndicatorsChanged(const TArray<class AFortPlayerStateAthena*>& PlayerStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaIndicatorLayerBase", "SquadIndicatorsChanged");

	Params::AthenaIndicatorLayerBase_SquadIndicatorsChanged Parms{};

	Parms.PlayerStates = std::move(PlayerStates);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaIndicatorLayerBase.GetPlayerViewModel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaPlayerViewModel*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaPlayerViewModel* UAthenaIndicatorLayerBase::GetPlayerViewModel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaIndicatorLayerBase", "GetPlayerViewModel");

	Params::AthenaIndicatorLayerBase_GetPlayerViewModel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaIndicatorLayerBase.GetSquadMembers
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerStateAthena*>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerStateAthena*> UAthenaIndicatorLayerBase::GetSquadMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaIndicatorLayerBase", "GetSquadMembers");

	Params::AthenaIndicatorLayerBase_GetSquadMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaMatchmakingWidget.GetCurrentTournamentAndEvent
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           TournamentId                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventId                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::GetCurrentTournamentAndEvent(class FString* TournamentId, class FString* EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "GetCurrentTournamentAndEvent");

	Params::FortAthenaMatchmakingWidget_GetCurrentTournamentAndEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TournamentId != nullptr)
		*TournamentId = std::move(Parms.TournamentId);

	if (EventId != nullptr)
		*EventId = std::move(Parms.EventId);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OnAvailablePlaylistsUpdated
// (Event, Protected, BlueprintEvent)

void UFortAthenaMatchmakingWidget::OnAvailablePlaylistsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OnAvailablePlaylistsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OnMatchmakingFinishedBlueprint
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::OnMatchmakingFinishedBlueprint(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OnMatchmakingFinishedBlueprint");

	Params::FortAthenaMatchmakingWidget_OnMatchmakingFinishedBlueprint Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OnNewModeViolatorUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShouldShow                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::OnNewModeViolatorUpdated(bool bShouldShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OnNewModeViolatorUpdated");

	Params::FortAthenaMatchmakingWidget_OnNewModeViolatorUpdated Parms{};

	Parms.bShouldShow = bShouldShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OnSetCancelButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             CancelButtonText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::OnSetCancelButtonText(const class FText& CancelButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OnSetCancelButtonText");

	Params::FortAthenaMatchmakingWidget_OnSetCancelButtonText Parms{};

	Parms.CancelButtonText = std::move(CancelButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OnSetPlayButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PlayButtonText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::OnSetPlayButtonText(const class FText& PlayButtonText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OnSetPlayButtonText");

	Params::FortAthenaMatchmakingWidget_OnSetPlayButtonText Parms{};

	Parms.PlayButtonText = std::move(PlayButtonText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.OpenCreativeOptions_NativizeMe
// (Event, Protected, BlueprintEvent)

void UFortAthenaMatchmakingWidget::OpenCreativeOptions_NativizeMe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "OpenCreativeOptions_NativizeMe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.PlaylistChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPlaylistFrontEndData            NewPlaylist                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             PlaylistCMSOverrideName                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortLobbyType                          LobbyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::PlaylistChanged(const struct FPlaylistFrontEndData& NewPlaylist, const class FText& PlaylistCMSOverrideName, EFortLobbyType LobbyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "PlaylistChanged");

	Params::FortAthenaMatchmakingWidget_PlaylistChanged Parms{};

	Parms.NewPlaylist = std::move(NewPlaylist);
	Parms.PlaylistCMSOverrideName = std::move(PlaylistCMSOverrideName);
	Parms.LobbyType = LobbyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.SetSquadFillText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    InCurrentSquadFill                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::SetSquadFillText(bool InCurrentSquadFill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "SetSquadFillText");

	Params::FortAthenaMatchmakingWidget_SetSquadFillText Parms{};

	Parms.InCurrentSquadFill = InCurrentSquadFill;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingWidget.UpdateCustomViolatorText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ModeName                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SubText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingWidget::UpdateCustomViolatorText(const class FText& ModeName, const class FText& SubText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingWidget", "UpdateCustomViolatorText");

	Params::FortAthenaMatchmakingWidget_UpdateCustomViolatorText Parms{};

	Parms.ModeName = std::move(ModeName);
	Parms.SubText = std::move(SubText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaInventoryPanelBase.AdvanceSelection
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItemTileView*                TileView                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::AdvanceSelection(class UFortItemTileView* TileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "AdvanceSelection");

	Params::AthenaInventoryPanelBase_AdvanceSelection Parms{};

	Parms.TileView = TileView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaInventoryPanelBase.AttemptToUpdateFocus
// (Final, Native, Protected, BlueprintCallable)

void UAthenaInventoryPanelBase::AttemptToUpdateFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "AttemptToUpdateFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaInventoryPanelBase.FocusTileView
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItemTileView*                TileView                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::FocusTileView(class UFortItemTileView* TileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "FocusTileView");

	Params::AthenaInventoryPanelBase_FocusTileView Parms{};

	Parms.TileView = TileView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaInventoryPanelBase.GetTileViewForItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemTileView*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemTileView* UAthenaInventoryPanelBase::GetTileViewForItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "GetTileViewForItem");

	Params::AthenaInventoryPanelBase_GetTileViewForItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaInventoryPanelBase.HandleCursorModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::HandleCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "HandleCursorModeChanged");

	Params::AthenaInventoryPanelBase_HandleCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaInventoryPanelBase.HandleCursorModeChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeContentWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::HandleCursorModeChangedBP(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "HandleCursorModeChangedBP");

	Params::AthenaInventoryPanelBase_HandleCursorModeChangedBP Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentWidget = CursorModeContentWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaInventoryPanelBase.HandleInventoryItemSelected
// (Final, Native, Private)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::HandleInventoryItemSelected(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "HandleInventoryItemSelected");

	Params::AthenaInventoryPanelBase_HandleInventoryItemSelected Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaInventoryPanelBase.HandleQuickBarChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::HandleQuickBarChangedBP(EFortQuickBars QuickBarType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "HandleQuickBarChangedBP");

	Params::AthenaInventoryPanelBase_HandleQuickBarChangedBP Parms{};

	Parms.QuickBarType = QuickBarType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaInventoryPanelBase.RequestEquip
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::RequestEquip(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "RequestEquip");

	Params::AthenaInventoryPanelBase_RequestEquip Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaInventoryPanelBase.SetBypassNotifications
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bBypass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaInventoryPanelBase::SetBypassNotifications(bool bBypass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaInventoryPanelBase", "SetBypassNotifications");

	Params::AthenaInventoryPanelBase_SetBypassNotifications Parms{};

	Parms.bBypass = bBypass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSeasonPassLevelInfo.ContainsChaseReward
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaSeasonRewardTrack                Track                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonPassLevelInfo::ContainsChaseReward(EAthenaSeasonRewardTrack Track) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "ContainsChaseReward");

	Params::FortSeasonPassLevelInfo_ContainsChaseReward Parms{};

	Parms.Track = Track;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSeasonPassLevelInfo::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "GetLevel");

	Params::FortSeasonPassLevelInfo_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.GetLevelProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSeasonPassLevelInfo::GetLevelProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "GetLevelProgress");

	Params::FortSeasonPassLevelInfo_GetLevelProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.GetNumRewardItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaSeasonRewardTrack                Track                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSeasonPassLevelInfo::GetNumRewardItems(EAthenaSeasonRewardTrack Track) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "GetNumRewardItems");

	Params::FortSeasonPassLevelInfo_GetNumRewardItems Parms{};

	Parms.Track = Track;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.GetRewardItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaSeasonRewardTrack                Track                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortSeasonPassLevelInfo::GetRewardItems(EAthenaSeasonRewardTrack Track) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "GetRewardItems");

	Params::FortSeasonPassLevelInfo_GetRewardItems Parms{};

	Parms.Track = Track;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.GetSeasonPassMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSeasonPassLevelInfo::GetSeasonPassMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "GetSeasonPassMaxLevel");

	Params::FortSeasonPassLevelInfo_GetSeasonPassMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.IsFreeClaimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonPassLevelInfo::IsFreeClaimed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "IsFreeClaimed");

	Params::FortSeasonPassLevelInfo_IsFreeClaimed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.IsFreeUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonPassLevelInfo::IsFreeUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "IsFreeUnlocked");

	Params::FortSeasonPassLevelInfo_IsFreeUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.IsPaidClaimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonPassLevelInfo::IsPaidClaimed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "IsPaidClaimed");

	Params::FortSeasonPassLevelInfo_IsPaidClaimed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSeasonPassLevelInfo.IsPaidUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonPassLevelInfo::IsPaidUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonPassLevelInfo", "IsPaidUnlocked");

	Params::FortSeasonPassLevelInfo_IsPaidUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStormSurgeWidgetBase.OnStartDisplaying
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaStormSurgeWidgetBase::OnStartDisplaying(const class FText& TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWidgetBase", "OnStartDisplaying");

	Params::AthenaStormSurgeWidgetBase_OnStartDisplaying Parms{};

	Parms.TitleText = std::move(TitleText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaStormSurgeWidgetBase.OnStopDisplaying
// (Event, Protected, BlueprintEvent)

void UAthenaStormSurgeWidgetBase::OnStopDisplaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWidgetBase", "OnStopDisplaying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaStormSurgeWidgetBase.OnStormCapStateChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaStormCapState                    StormCapState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStormSurgeWidgetBase::OnStormCapStateChanged(EAthenaStormCapState StormCapState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWidgetBase", "OnStormCapStateChanged");

	Params::AthenaStormSurgeWidgetBase_OnStormCapStateChanged Parms{};

	Parms.StormCapState = StormCapState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaStormSurgeWidgetBase.OnUpdateThresholdDisplay
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ThresholdText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EStormSurgeThresholdType                ThresholdType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStormSurgeWidgetBase::OnUpdateThresholdDisplay(const class FText& ThresholdText, EStormSurgeThresholdType ThresholdType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWidgetBase", "OnUpdateThresholdDisplay");

	Params::AthenaStormSurgeWidgetBase_OnUpdateThresholdDisplay Parms{};

	Parms.ThresholdText = std::move(ThresholdText);
	Parms.ThresholdType = ThresholdType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.EnterEditStyle
// (Final, Native, Protected)

void UAthenaItemSelectorScreenBase::EnterEditStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "EnterEditStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.ExitEditStyle
// (Final, Native, Protected, BlueprintCallable)

void UAthenaItemSelectorScreenBase::ExitEditStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "ExitEditStyle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.HandleSelectedTabChanged
// (Final, Native, Private)
// Parameters:
// class FName                             SelectedTabID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::HandleSelectedTabChanged(class FName SelectedTabID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "HandleSelectedTabChanged");

	Params::AthenaItemSelectorScreenBase_HandleSelectedTabChanged Parms{};

	Parms.SelectedTabID = SelectedTabID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnCurrentItemChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnCurrentItemChanged(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnCurrentItemChanged");

	Params::AthenaItemSelectorScreenBase_OnCurrentItemChanged Parms{};

	Parms.SelectedItem = SelectedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnFinsihedItemSave
// (Event, Public, BlueprintEvent)

void UAthenaItemSelectorScreenBase::OnFinsihedItemSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnFinsihedItemSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnFinsihedItemSetup
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             CategoryDisplayName                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ItemDisplayTypeName                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EAthenaCustomizationCategory            SelectedCategory                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnFinsihedItemSetup(const class FText& CategoryDisplayName, const class FText& ItemDisplayTypeName, EAthenaCustomizationCategory SelectedCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnFinsihedItemSetup");

	Params::AthenaItemSelectorScreenBase_OnFinsihedItemSetup Parms{};

	Parms.CategoryDisplayName = std::move(CategoryDisplayName);
	Parms.ItemDisplayTypeName = std::move(ItemDisplayTypeName);
	Parms.SelectedCategory = SelectedCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnItemSelectedChanged
// (Final, Native, Protected)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnItemSelectedChanged(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnItemSelectedChanged");

	Params::AthenaItemSelectorScreenBase_OnItemSelectedChanged Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnItemSelectionCommited
// (Final, Native, Protected)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnItemSelectionCommited(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnItemSelectionCommited");

	Params::AthenaItemSelectorScreenBase_OnItemSelectionCommited Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnSavingItemStarted
// (Event, Public, BlueprintEvent)

void UAthenaItemSelectorScreenBase::OnSavingItemStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnSavingItemStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnTabSelectionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShowingVariants                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnTabSelectionChanged(bool bShowingVariants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnTabSelectionChanged");

	Params::AthenaItemSelectorScreenBase_OnTabSelectionChanged Parms{};

	Parms.bShowingVariants = bShowingVariants;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaItemSelectorScreenBase.OnVariantSelectionChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FMcpVariantChannelInfo           InVariant                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::OnVariantSelectionChanged(const struct FMcpVariantChannelInfo& InVariant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "OnVariantSelectionChanged");

	Params::AthenaItemSelectorScreenBase_OnVariantSelectionChanged Parms{};

	Parms.InVariant = std::move(InVariant);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.SaveAndExit
// (Final, Native, Protected)

void UAthenaItemSelectorScreenBase::SaveAndExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "SaveAndExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.StartItemCustomization
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EAthenaCustomizationCategory            InCategory                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InSubslotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CategoryDisplayName                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ItemDisplayTypeName                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaItemSelectorScreenBase::StartItemCustomization(EAthenaCustomizationCategory InCategory, int32 InSubslotIndex, const class FText& CategoryDisplayName, const class FText& ItemDisplayTypeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "StartItemCustomization");

	Params::AthenaItemSelectorScreenBase_StartItemCustomization Parms{};

	Parms.InCategory = InCategory;
	Parms.InSubslotIndex = InSubslotIndex;
	Parms.CategoryDisplayName = std::move(CategoryDisplayName);
	Parms.ItemDisplayTypeName = std::move(ItemDisplayTypeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaItemSelectorScreenBase.GetCurrentItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UAthenaItemSelectorScreenBase::GetCurrentItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaItemSelectorScreenBase", "GetCurrentItem");

	Params::AthenaItemSelectorScreenBase_GetCurrentItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.CommitMulch
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementMulchDetailsPanel::CommitMulch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "CommitMulch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementMulchDetailsPanel::HandleHostSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.HandleSetOfItemsToMulchChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementMulchDetailsPanel::HandleSetOfItemsToMulchChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "HandleSetOfItemsToMulchChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.GetItemCountsToMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> UFortItemManagementMulchDetailsPanel::GetItemCountsToMulch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "GetItemCountsToMulch");

	Params::FortItemManagementMulchDetailsPanel_GetItemCountsToMulch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.GetItemsToMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortItemManagementMulchDetailsPanel::GetItemsToMulch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "GetItemsToMulch");

	Params::FortItemManagementMulchDetailsPanel_GetItemsToMulch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementMulchDetailsPanel.IsSpaceAvailableForMulch
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementMulchDetailsPanel::IsSpaceAvailableForMulch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchDetailsPanel", "IsSpaceAvailableForMulch");

	Params::FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.TryHardCountdownWidget.HideWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UTryHardCountdownWidget::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TryHardCountdownWidget.OnGamePhaseStepChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhaseStep                    GamePhaseStep                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTryHardCountdownWidget::OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "OnGamePhaseStepChanged");

	Params::TryHardCountdownWidget_OnGamePhaseStepChanged Parms{};

	Parms.GamePhaseStep = GamePhaseStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TryHardCountdownWidget.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTryHardCountdownWidget::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "OnHandleSpectatingChanged");

	Params::TryHardCountdownWidget_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TryHardCountdownWidget.ShowWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumRemaining                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTryHardCountdownWidget::ShowWidget(int32 NumRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "ShowWidget");

	Params::TryHardCountdownWidget_ShowWidget Parms{};

	Parms.NumRemaining = NumRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TryHardCountdownWidget.UpdateNumber
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumRemaining                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTryHardCountdownWidget::UpdateNumber(int32 NumRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "UpdateNumber");

	Params::TryHardCountdownWidget_UpdateNumber Parms{};

	Parms.NumRemaining = NumRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.TryHardCountdownWidget.IsShowing
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UTryHardCountdownWidget::IsShowing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TryHardCountdownWidget", "IsShowing");

	Params::TryHardCountdownWidget_IsShowing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnActiveLeaderboardTabChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ActiveWidgetIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnActiveLeaderboardTabChanged(int32 ActiveWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnActiveLeaderboardTabChanged");

	Params::AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged Parms{};

	Parms.ActiveWidgetIndex = ActiveWidgetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnFriendsFilterChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   FriendsFilterIndex                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnFriendsFilterChanged(int32 FriendsFilterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnFriendsFilterChanged");

	Params::AthenaLeaderboardScreenBase_OnFriendsFilterChanged Parms{};

	Parms.FriendsFilterIndex = FriendsFilterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnMatchTypeChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   MatchTypeIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnMatchTypeChanged(int32 MatchTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnMatchTypeChanged");

	Params::AthenaLeaderboardScreenBase_OnMatchTypeChanged Parms{};

	Parms.MatchTypeIndex = MatchTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnPlaylistChanged
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FName                             NewPlaylistName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonInputType                        NewInputType                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnPlaylistChanged(const class FName NewPlaylistName, const ECommonInputType NewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnPlaylistChanged");

	Params::AthenaLeaderboardScreenBase_OnPlaylistChanged Parms{};

	Parms.NewPlaylistName = NewPlaylistName;
	Parms.NewInputType = NewInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnQueryFinished
// (Event, Protected, BlueprintEvent)

void UAthenaLeaderboardScreenBase::OnQueryFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnQueryFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnQueryStarted
// (Event, Protected, BlueprintEvent)

void UAthenaLeaderboardScreenBase::OnQueryStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnQueryStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateLeaderboardListUI
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortLeaderboardRowProxyInstance* LocalUserRow                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             QueryErrorStr                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnUpdateLeaderboardListUI(bool bWasSuccessful, class UFortLeaderboardRowProxyInstance* LocalUserRow, const class FText& QueryErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnUpdateLeaderboardListUI");

	Params::AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.LocalUserRow = LocalUserRow;
	Parms.QueryErrorStr = std::move(QueryErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateListHeader
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FAthenaPlaylistLeaderboardData   PlaylistTabData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnUpdateListHeader(const struct FAthenaPlaylistLeaderboardData& PlaylistTabData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnUpdateListHeader");

	Params::AthenaLeaderboardScreenBase_OnUpdateListHeader Parms{};

	Parms.PlaylistTabData = std::move(PlaylistTabData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateTabButtonText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaPlaylistLeaderboardData   PlaylistTabData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLeaderboardScreenBase::OnUpdateTabButtonText(class UCommonButton* Button, const struct FAthenaPlaylistLeaderboardData& PlaylistTabData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "OnUpdateTabButtonText");

	Params::AthenaLeaderboardScreenBase_OnUpdateTabButtonText Parms{};

	Parms.Button = Button;
	Parms.PlaylistTabData = std::move(PlaylistTabData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLeaderboardScreenBase.CanShowFriendsOnlyLeaderboard
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaLeaderboardScreenBase::CanShowFriendsOnlyLeaderboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLeaderboardScreenBase", "CanShowFriendsOnlyLeaderboard");

	Params::AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorPlayerListEntryWidget.OnEntryDataSet
// (Event, Protected, BlueprintEvent)

void UAthenaSpectatorPlayerListEntryWidget::OnEntryDataSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListEntryWidget", "OnEntryDataSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortItemManagementItemTileButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "GetPopupMenu");

	Params::FortItemManagementItemTileButton_GetPopupMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleEquipSlotChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   EquipSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemTileButton::HandleEquipSlotChanged(int32 EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleEquipSlotChanged");

	Params::FortItemManagementItemTileButton_HandleEquipSlotChanged Parms{};

	Parms.EquipSlot = EquipSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleHasItemToCompareDetailsWithChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleHasItemToCompareDetailsWithChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleHasItemToCompareDetailsWithChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleHasItemToDetailChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleHasItemToDetailChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleHasItemToDetailChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleItemChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleItemChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleItemChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleItemMulchStateChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleItemMulchStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleItemMulchStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleShowCollectionBookIndicatorChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleShowCollectionBookIndicatorChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleShowCollectionBookIndicatorChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.HandleShowRefundIndicatorChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemTileButton::HandleShowRefundIndicatorChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "HandleShowRefundIndicatorChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemTileButton.OnSlotItemComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemTileButton::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "OnSlotItemComplete");

	Params::FortItemManagementItemTileButton_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementItemTileButton.GetHomebaseSquadSlotForItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquadSlotId             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FHomebaseSquadSlotId UFortItemManagementItemTileButton::GetHomebaseSquadSlotForItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "GetHomebaseSquadSlotForItem");

	Params::FortItemManagementItemTileButton_GetHomebaseSquadSlotForItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementItemTileButton.GetItemManagementMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemManagementMode                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemManagementMode UFortItemManagementItemTileButton::GetItemManagementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemTileButton", "GetItemManagementMode");

	Params::FortItemManagementItemTileButton_GetItemManagementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.AcceptedPlaylist
// (Final, Native, Protected, BlueprintCallable)

void UFortAthenaMatchmakingOptions::AcceptedPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "AcceptedPlaylist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.CanceledPlaylist
// (Final, Native, Protected, BlueprintCallable)

void UFortAthenaMatchmakingOptions::CanceledPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "CanceledPlaylist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.CloseMatchmakingOptions
// (Final, Native, Protected, BlueprintCallable)

void UFortAthenaMatchmakingOptions::CloseMatchmakingOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "CloseMatchmakingOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.HandleButtonGroupSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::HandleButtonGroupSelectionChanged(class UCommonButton* Button, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "HandleButtonGroupSelectionChanged");

	Params::FortAthenaMatchmakingOptions_HandleButtonGroupSelectionChanged Parms{};

	Parms.Button = Button;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.HandleInputTypeChanged
// (Final, Native, Private)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::HandleInputTypeChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "HandleInputTypeChanged");

	Params::FortAthenaMatchmakingOptions_HandleInputTypeChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.OnTileDoubleClicked
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCommonButton*                    ButtonClicked                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::OnTileDoubleClicked(class UCommonButton* ButtonClicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "OnTileDoubleClicked");

	Params::FortAthenaMatchmakingOptions_OnTileDoubleClicked Parms{};

	Parms.ButtonClicked = ButtonClicked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingOptions.RepresentedPlaylistChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPlaylistFrontEndData            NewRepresentedPlaylist                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::RepresentedPlaylistChanged(const struct FPlaylistFrontEndData& NewRepresentedPlaylist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "RepresentedPlaylistChanged");

	Params::FortAthenaMatchmakingOptions_RepresentedPlaylistChanged Parms{};

	Parms.NewRepresentedPlaylist = std::move(NewRepresentedPlaylist);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingOptions.SetCustomMatchOptions
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TMap<class FString, class FString>      Options                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             PlaylistName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::SetCustomMatchOptions(const TMap<class FString, class FString>& Options, const class FName& PlaylistName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "SetCustomMatchOptions");

	Params::FortAthenaMatchmakingOptions_SetCustomMatchOptions Parms{};

	Parms.Options = std::move(Options);
	Parms.PlaylistName = PlaylistName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.SetOwningMatchmakingWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortAthenaMatchmakingWidget*     InOwningMatchmakingWidget                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::SetOwningMatchmakingWidget(class UFortAthenaMatchmakingWidget* InOwningMatchmakingWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "SetOwningMatchmakingWidget");

	Params::FortAthenaMatchmakingOptions_SetOwningMatchmakingWidget Parms{};

	Parms.InOwningMatchmakingWidget = InOwningMatchmakingWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingOptions.SetServerAccessText
// (Event, Protected, BlueprintEvent)
// Parameters:
// EServerAccessSetting                    InServerAccessSetting                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::SetServerAccessText(EServerAccessSetting InServerAccessSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "SetServerAccessText");

	Params::FortAthenaMatchmakingOptions_SetServerAccessText Parms{};

	Parms.InServerAccessSetting = InServerAccessSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingOptions.SetSpectatorButtonText
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESpectatorQueueType                     InSpectatorQueueType                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::SetSpectatorButtonText(ESpectatorQueueType InSpectatorQueueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "SetSpectatorButtonText");

	Params::FortAthenaMatchmakingOptions_SetSpectatorButtonText Parms{};

	Parms.InSpectatorQueueType = InSpectatorQueueType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingOptions.SetSquadFillText
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESquadFillSetting                       InSquadFillSetting                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::SetSquadFillText(ESquadFillSetting InSquadFillSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "SetSquadFillText");

	Params::FortAthenaMatchmakingOptions_SetSquadFillText Parms{};

	Parms.InSquadFillSetting = InSquadFillSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingOptions.UpdateMMButtonStatusBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPlaylistIsEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFillDisableReason                      FillDisableReason                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingOptions::UpdateMMButtonStatusBP(bool bPlaylistIsEnabled, EFillDisableReason FillDisableReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingOptions", "UpdateMMButtonStatusBP");

	Params::FortAthenaMatchmakingOptions_UpdateMMButtonStatusBP Parms{};

	Parms.bPlaylistIsEnabled = bPlaylistIsEnabled;
	Parms.FillDisableReason = FillDisableReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.DisplayStoreUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UStoreToastRequest*               StoreUpdatedRequest                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::DisplayStoreUpdated(class UStoreToastRequest* StoreUpdatedRequest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "DisplayStoreUpdated");

	Params::AthenaLobbyBase_DisplayStoreUpdated Parms{};

	Parms.StoreUpdatedRequest = StoreUpdatedRequest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.DynamicHandleLoadingScreenVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    Param_IsVisible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::DynamicHandleLoadingScreenVisibilityChanged(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "DynamicHandleLoadingScreenVisibilityChanged");

	Params::AthenaLobbyBase_DynamicHandleLoadingScreenVisibilityChanged Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLobbyBase.HandleGenericLinkButtonClicked
// (Final, Native, Protected)

void UAthenaLobbyBase::HandleGenericLinkButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "HandleGenericLinkButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLobbyBase.HandlePlaylistDataChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FPlaylistData                    NewPlaylistData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::HandlePlaylistDataChanged(const struct FPlaylistData& NewPlaylistData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "HandlePlaylistDataChanged");

	Params::AthenaLobbyBase_HandlePlaylistDataChanged Parms{};

	Parms.NewPlaylistData = std::move(NewPlaylistData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLobbyBase.OnBeginCursorOverPlayer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::OnBeginCursorOverPlayer(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnBeginCursorOverPlayer");

	Params::AthenaLobbyBase_OnBeginCursorOverPlayer Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.OnEndCursorOverPlayer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::OnEndCursorOverPlayer(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnEndCursorOverPlayer");

	Params::AthenaLobbyBase_OnEndCursorOverPlayer Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.OnLobbyChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EFortLobbyType                          LobbyType                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::OnLobbyChanged(const EFortLobbyType& LobbyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnLobbyChanged");

	Params::AthenaLobbyBase_OnLobbyChanged Parms{};

	Parms.LobbyType = LobbyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UAthenaLobbyBase::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLobbyBase.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UAthenaLobbyBase::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLobbyBase.OnNavigationUp
// (Event, Public, BlueprintEvent)

void UAthenaLobbyBase::OnNavigationUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnNavigationUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLobbyBase.OnPlayerClicked
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::OnPlayerClicked(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnPlayerClicked");

	Params::AthenaLobbyBase_OnPlayerClicked Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.OnUpdateSocialImportButtonText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::OnUpdateSocialImportButtonText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "OnUpdateSocialImportButtonText");

	Params::AthenaLobbyBase_OnUpdateSocialImportButtonText Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaLobbyBase.ShowDailyNews
// (Event, Protected, BlueprintEvent)

void UAthenaLobbyBase::ShowDailyNews()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "ShowDailyNews");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLobbyBase.ShowHighlightSummary
// (Final, Native, Public, BlueprintCallable)

void UAthenaLobbyBase::ShowHighlightSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "ShowHighlightSummary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaLobbyBase.ShowMobileAutoFireScreen
// (Event, Protected, BlueprintEvent)

void UAthenaLobbyBase::ShowMobileAutoFireScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "ShowMobileAutoFireScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaLobbyBase.UpdateGenericLinkText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaLobbyBase::UpdateGenericLinkText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaLobbyBase", "UpdateGenericLinkText");

	Params::AthenaLobbyBase_UpdateGenericLinkText Parms{};

	Parms.NewText = std::move(NewText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIDataConfiguration.GetDefenderSubtypeIconMultiSizeBrushByTag
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                     DefenderSubtypeTag                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMultiSizeBrushAsset*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMultiSizeBrushAsset* UFortUIDataConfiguration::GetDefenderSubtypeIconMultiSizeBrushByTag(const struct FGameplayTag& DefenderSubtypeTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIDataConfiguration", "GetDefenderSubtypeIconMultiSizeBrushByTag");

	Params::FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag Parms{};

	Parms.DefenderSubtypeTag = std::move(DefenderSubtypeTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAttributeListItem.ClearPreview
// (Final, Native, Public, BlueprintCallable)

void UFortAttributeListItem::ClearPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "ClearPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem.DisplayAttributeChanged
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem::DisplayAttributeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "DisplayAttributeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem.PreviewEnded
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem::PreviewEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "PreviewEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem.PreviewStarted
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem::PreviewStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "PreviewStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem.SetDisplayAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDisplayAttribute            InDisplayAttribute                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortDisplayAttribute            DeltaAttribute                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAttributeListItem::SetDisplayAttribute(const struct FFortDisplayAttribute& InDisplayAttribute, struct FFortDisplayAttribute* DeltaAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "SetDisplayAttribute");

	Params::FortAttributeListItem_SetDisplayAttribute Parms{};

	Parms.InDisplayAttribute = std::move(InDisplayAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeltaAttribute != nullptr)
		*DeltaAttribute = std::move(Parms.DeltaAttribute);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAttributeListItem.SetPreviewAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDisplayAttribute            InPreviewAttribute                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem::SetPreviewAttribute(const struct FFortDisplayAttribute& InPreviewAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "SetPreviewAttribute");

	Params::FortAttributeListItem_SetPreviewAttribute Parms{};

	Parms.InPreviewAttribute = std::move(InPreviewAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem.ValueChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAttributeListItem::ValueChanged(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "ValueChanged");

	Params::FortAttributeListItem_ValueChanged Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAttributeListItem.GetCurrentAttributeCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutDisplayAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem::GetCurrentAttributeCopy(struct FFortDisplayAttribute* OutDisplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "GetCurrentAttributeCopy");

	Params::FortAttributeListItem_GetCurrentAttributeCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttribute != nullptr)
		*OutDisplayAttribute = std::move(Parms.OutDisplayAttribute);
}


// Function FortniteUI.FortAttributeListItem.GetDisplayAttributeCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutDisplayAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem::GetDisplayAttributeCopy(struct FFortDisplayAttribute* OutDisplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "GetDisplayAttributeCopy");

	Params::FortAttributeListItem_GetDisplayAttributeCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttribute != nullptr)
		*OutDisplayAttribute = std::move(Parms.OutDisplayAttribute);
}


// Function FortniteUI.FortAttributeListItem.GetDisplayPreviewCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutPreviewAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem::GetDisplayPreviewCopy(struct FFortDisplayAttribute* OutPreviewAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem", "GetDisplayPreviewCopy");

	Params::FortAttributeListItem_GetDisplayPreviewCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPreviewAttribute != nullptr)
		*OutPreviewAttribute = std::move(Parms.OutPreviewAttribute);
}


// Function FortniteUI.FortAthenaNewsTile.PlayIntroAnim
// (Event, Public, BlueprintEvent)

void UFortAthenaNewsTile::PlayIntroAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsTile", "PlayIntroAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaNewsTile.SetDefaultImage
// (Event, Public, BlueprintEvent)

void UFortAthenaNewsTile::SetDefaultImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsTile", "SetDefaultImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHeroSupportPerkIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSupportPerkIndicator::SetItemToRepresent(const class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkIndicator", "SetItemToRepresent");

	Params::FortHeroSupportPerkIndicator_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroSupportPerkIndicator.SetSupportTypeToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortSupportBonusType                   Param_SupportTypeToRepresent                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSupportPerkIndicator::SetSupportTypeToRepresent(const EFortSupportBonusType Param_SupportTypeToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkIndicator", "SetSupportTypeToRepresent");

	Params::FortHeroSupportPerkIndicator_SetSupportTypeToRepresent Parms{};

	Parms.Param_SupportTypeToRepresent = Param_SupportTypeToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.RemoteControlledPawnExpirationWidget.OnPawnChanged
// (Final, Native, Protected)

void URemoteControlledPawnExpirationWidget::OnPawnChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RemoteControlledPawnExpirationWidget", "OnPawnChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaMapLayer.ClearTouches
// (Final, Native, Public, BlueprintCallable)

void UAthenaMapLayer::ClearTouches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapLayer", "ClearTouches");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaMapLayer.FlashPlayerIcon
// (Final, Native, Public, BlueprintCallable)

void UAthenaMapLayer::FlashPlayerIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapLayer", "FlashPlayerIcon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaMapLayer.SetLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     Param_LocalPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaMapLayer::SetLocalPlayer(class ULocalPlayer* Param_LocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMapLayer", "SetLocalPlayer");

	Params::AthenaMapLayer_SetLocalPlayer Parms{};

	Parms.Param_LocalPlayer = Param_LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowConfirmationDialog_NUI
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Icon                                                   (Parm, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (Parm, NativeAccessSpecifierPublic)
// TArray<struct FConfirmationDialogAction>ConfirmButtonInputActions                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             DeclineButtonInputAction                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          AdditionalContent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowConfirmation_NUI*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowConfirmation_NUI* UFortAsyncAction_ShowConfirmation_NUI::ShowConfirmationDialog_NUI(class UObject* InWorldContextObject, const struct FSlateBrush& Icon, const class FText& Title, const class FText& MESSAGE, const TArray<struct FConfirmationDialogAction>& ConfirmButtonInputActions, const class FName& DeclineButtonInputAction, class UWidget* AdditionalContent, class UWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowConfirmation_NUI", "ShowConfirmationDialog_NUI");

	Params::FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Icon = std::move(Icon);
	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.ConfirmButtonInputActions = std::move(ConfirmButtonInputActions);
	Parms.DeclineButtonInputAction = DeclineButtonInputAction;
	Parms.AdditionalContent = AdditionalContent;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_CustomInput
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Icon                                                   (Parm, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (Parm, NativeAccessSpecifierPublic)
// class FName                             ConfirmAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DeclineAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          AdditionalContent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowConfirmation_NUI*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowConfirmation_NUI* UFortAsyncAction_ShowConfirmation_NUI::ShowSimpleConfirmationDialog_CustomInput(class UObject* InWorldContextObject, const struct FSlateBrush& Icon, const class FText& Title, const class FText& MESSAGE, class FName ConfirmAction, class FName DeclineAction, class UWidget* AdditionalContent, class UWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowConfirmation_NUI", "ShowSimpleConfirmationDialog_CustomInput");

	Params::FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Icon = std::move(Icon);
	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.ConfirmAction = ConfirmAction;
	Parms.DeclineAction = DeclineAction;
	Parms.AdditionalContent = AdditionalContent;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_NUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Icon                                                   (Parm, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (Parm, NativeAccessSpecifierPublic)
// bool                                    bShowConfirm                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowDecline                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          AdditionalContent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowConfirmation_NUI*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowConfirmation_NUI* UFortAsyncAction_ShowConfirmation_NUI::ShowSimpleConfirmationDialog_NUI(class UObject* InWorldContextObject, const struct FSlateBrush& Icon, const class FText& Title, const class FText& MESSAGE, bool bShowConfirm, bool bShowDecline, class UWidget* AdditionalContent, class UWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowConfirmation_NUI", "ShowSimpleConfirmationDialog_NUI");

	Params::FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Icon = std::move(Icon);
	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.bShowConfirm = bShowConfirm;
	Parms.bShowDecline = bShowDecline;
	Parms.AdditionalContent = AdditionalContent;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchReadyDesktopPopup.UserDismissedDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBringToFront                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaMatchReadyDesktopPopup::UserDismissedDialog(bool bBringToFront)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchReadyDesktopPopup", "UserDismissedDialog");

	Params::AthenaMatchReadyDesktopPopup_UserDismissedDialog Parms{};

	Parms.bBringToFront = bBringToFront;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeList.Clear
// (Final, Native, Public, BlueprintCallable)

void UFortAttributeList::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList", "Clear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeList.ClearPreviewData
// (Final, Native, Public, BlueprintCallable)

void UFortAttributeList::ClearPreviewData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList", "ClearPreviewData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeList.SetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortDisplayAttribute>    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FFortDisplayAttribute>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortDisplayAttribute> UFortAttributeList::SetData(const TArray<struct FFortDisplayAttribute>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList", "SetData");

	Params::FortAttributeList_SetData Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAttributeList.SetPreviewData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortDisplayAttribute>    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeList::SetPreviewData(const TArray<struct FFortDisplayAttribute>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList", "SetPreviewData");

	Params::FortAttributeList_SetPreviewData Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemEntryWidget.MakeFortItemEntryObjectWrapper
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemEntry                   InItemEntry                                            (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortItemEntryObjectWrapper*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemEntryObjectWrapper* UFortItemEntryWidget::MakeFortItemEntryObjectWrapper(class UObject* Target, struct FFortItemEntry& InItemEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItemEntryWidget", "MakeFortItemEntryObjectWrapper");

	Params::FortItemEntryWidget_MakeFortItemEntryObjectWrapper Parms{};

	Parms.Target = Target;
	Parms.InItemEntry = std::move(InItemEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InItemEntry = std::move(Parms.InItemEntry);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemEntryWidget.CompareToItemEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortItemEntry                   InItemEntry                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemEntryWidget::CompareToItemEntry(const struct FFortItemEntry& InItemEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemEntryWidget", "CompareToItemEntry");

	Params::FortItemEntryWidget_CompareToItemEntry Parms{};

	Parms.InItemEntry = std::move(InItemEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemEntryWidget.GetItemTypeCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemEntryWidget::GetItemTypeCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemEntryWidget", "GetItemTypeCount");

	Params::FortItemEntryWidget_GetItemTypeCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemEntryWidget.OnEntryClick
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItemEntryWidget*             Entry                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemEntryWidget::OnEntryClick(class UFortItemEntryWidget* Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemEntryWidget", "OnEntryClick");

	Params::FortItemEntryWidget_OnEntryClick Parms{};

	Parms.Entry = Entry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemEntryWidget.OnLoadedItem
// (Event, Protected, BlueprintEvent)

void UFortItemEntryWidget::OnLoadedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemEntryWidget", "OnLoadedItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortBannerSelectorBase.CompleteHomebaseBannerSelection
// (Final, Native, Public, BlueprintCallable)

void UFortBannerSelectorBase::CompleteHomebaseBannerSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "CompleteHomebaseBannerSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBannerSelectorBase.CompleteHomebaseName
// (Final, Native, Public, BlueprintCallable)

void UFortBannerSelectorBase::CompleteHomebaseName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "CompleteHomebaseName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBannerSelectorBase.HandleBannerNameChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBannerSelectorBase::HandleBannerNameChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "HandleBannerNameChanged");

	Params::FortBannerSelectorBase_HandleBannerNameChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBannerSelectorBase.OnHomebaseNameCommitFailed
// (Event, Public, BlueprintEvent)

void UFortBannerSelectorBase::OnHomebaseNameCommitFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "OnHomebaseNameCommitFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortBannerSelectorBase.OnHomebaseNameCommitSucceeded
// (Event, Public, BlueprintEvent)

void UFortBannerSelectorBase::OnHomebaseNameCommitSucceeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "OnHomebaseNameCommitSucceeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortBannerSelectorBase.UpdateErrorText
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             ErrorMessageText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBannerSelectorBase::UpdateErrorText(const class FText& ErrorMessageText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "UpdateErrorText");

	Params::FortBannerSelectorBase_UpdateErrorText Parms{};

	Parms.ErrorMessageText = std::move(ErrorMessageText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBannerSelectorBase.HasIllegalChars
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           NewBannerName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortBannerSelectorBase::HasIllegalChars(const class FString& NewBannerName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "HasIllegalChars");

	Params::FortBannerSelectorBase_HasIllegalChars Parms{};

	Parms.NewBannerName = std::move(NewBannerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBannerSelectorBase.IsPlayerNameValid
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             PlayerName                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    OutIsValid                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutErrorText                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortBannerSelectorBase::IsPlayerNameValid(const class FText& PlayerName, bool* OutIsValid, class FText* OutErrorText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBannerSelectorBase", "IsPlayerNameValid");

	Params::FortBannerSelectorBase_IsPlayerNameValid Parms{};

	Parms.PlayerName = std::move(PlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIsValid != nullptr)
		*OutIsValid = Parms.OutIsValid;

	if (OutErrorText != nullptr)
		*OutErrorText = std::move(Parms.OutErrorText);
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.OnDBNOStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsDBNO                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerHitPointBarBase::OnDBNOStateChanged(bool IsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "OnDBNOStateChanged");

	Params::AthenaPlayerHitPointBarBase_OnDBNOStateChanged Parms{};

	Parms.IsDBNO = IsDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.OnDeltaChanged
// (Event, Protected, BlueprintEvent)

void UAthenaPlayerHitPointBarBase::OnDeltaChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "OnDeltaChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.OnMaxValueChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerHitPointBarBase::OnMaxValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "OnMaxValueChanged");

	Params::AthenaPlayerHitPointBarBase_OnMaxValueChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.OnValueChangedWithReason
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortHitPointModificationReason         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerHitPointBarBase::OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "OnValueChangedWithReason");

	Params::AthenaPlayerHitPointBarBase_OnValueChangedWithReason Parms{};

	Parms.Value = Value;
	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.SetDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           PlayerViewModel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerHitPointBarBase::SetDataSource(class UAthenaPlayerViewModel* PlayerViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "SetDataSource");

	Params::AthenaPlayerHitPointBarBase_SetDataSource Parms{};

	Parms.PlayerViewModel = PlayerViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.GetCurrentValuePercentage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaPlayerHitPointBarBase::GetCurrentValuePercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "GetCurrentValuePercentage");

	Params::AthenaPlayerHitPointBarBase_GetCurrentValuePercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaPlayerHitPointBarBase.GetLastValuePercentage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaPlayerHitPointBarBase::GetLastValuePercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerHitPointBarBase", "GetLastValuePercentage");

	Params::AthenaPlayerHitPointBarBase_GetLastValuePercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAutorunLockZone.OnInZoneChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewIsInZone                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAutorunLockZone::OnInZoneChanged(bool bNewIsInZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAutorunLockZone", "OnInZoneChanged");

	Params::FortAutorunLockZone_OnInZoneChanged Parms{};

	Parms.bNewIsInZone = bNewIsInZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.BeingRevivedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReviving                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::BeingRevivedStateChanged(class AFortPlayerStateAthena* PS, bool bReviving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "BeingRevivedStateChanged");

	Params::AthenaPlayerIndicatorBase_BeingRevivedStateChanged Parms{};

	Parms.PS = PS;
	Parms.bReviving = bReviving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.DBNOStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDBNO                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::DBNOStateChanged(class AFortPlayerStateAthena* PS, bool bDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "DBNOStateChanged");

	Params::AthenaPlayerIndicatorBase_DBNOStateChanged Parms{};

	Parms.PS = PS;
	Parms.bDBNO = bDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.MapIndicatorPositionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::MapIndicatorPositionChanged(class AFortPlayerStateAthena* PS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "MapIndicatorPositionChanged");

	Params::AthenaPlayerIndicatorBase_MapIndicatorPositionChanged Parms{};

	Parms.PS = PS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.PlayerNameChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PlayerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::PlayerNameChanged(class AFortPlayerStateAthena* PS, const class FString& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "PlayerNameChanged");

	Params::AthenaPlayerIndicatorBase_PlayerNameChanged Parms{};

	Parms.PS = PS;
	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.RefreshCurrentPawn
// (Final, Native, Protected)

void UAthenaPlayerIndicatorBase::RefreshCurrentPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "RefreshCurrentPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerIndicatorBase.SetViewModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           InPlayerVM                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::SetViewModel(class UAthenaPlayerViewModel* InPlayerVM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "SetViewModel");

	Params::AthenaPlayerIndicatorBase_SetViewModel Parms{};

	Parms.InPlayerVM = InPlayerVM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerIndicatorBase.ShowCallout
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETeamMemberState                        Callout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::ShowCallout(ETeamMemberState Callout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "ShowCallout");

	Params::AthenaPlayerIndicatorBase_ShowCallout Parms{};

	Parms.Callout = Callout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerIndicatorBase.TalkingStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTalking                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerIndicatorBase::TalkingStateChanged(class AFortPlayerStateAthena* PS, bool bTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerIndicatorBase", "TalkingStateChanged");

	Params::AthenaPlayerIndicatorBase_TalkingStateChanged Parms{};

	Parms.PS = PS;
	Parms.bTalking = bTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTutorialContext.ClearTutorialCallouts
// (Final, Native, Public, BlueprintCallable)

void UFortTutorialContext::ClearTutorialCallouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "ClearTutorialCallouts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.ContinueTutorial
// (Final, Native, Public, BlueprintCallable)

void UFortTutorialContext::ContinueTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "ContinueTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.DisableTutorialCallout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialQuestObjectiveName                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::DisableTutorialCallout(class FName WidgetName, class FName TutorialQuestObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "DisableTutorialCallout");

	Params::FortTutorialContext_DisableTutorialCallout Parms{};

	Parms.WidgetName = WidgetName;
	Parms.TutorialQuestObjectiveName = TutorialQuestObjectiveName;
	Parms.TutorialType = TutorialType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.EnableTutorialCallout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialQuestObjectiveName                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::EnableTutorialCallout(class FName WidgetName, class FName TutorialQuestObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "EnableTutorialCallout");

	Params::FortTutorialContext_EnableTutorialCallout Parms{};

	Parms.WidgetName = WidgetName;
	Parms.TutorialQuestObjectiveName = TutorialQuestObjectiveName;
	Parms.TutorialType = TutorialType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.GetHiddenTutorialCallouts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     WidgetNames                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortTutorialContext::GetHiddenTutorialCallouts(TArray<class FName>* WidgetNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "GetHiddenTutorialCallouts");

	Params::FortTutorialContext_GetHiddenTutorialCallouts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WidgetNames != nullptr)
		*WidgetNames = std::move(Parms.WidgetNames);
}


// Function FortniteUI.FortTutorialContext.GetTutorialCallouts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     WidgetNames                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortTutorialContext::GetTutorialCallouts(TArray<class FName>* WidgetNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "GetTutorialCallouts");

	Params::FortTutorialContext_GetTutorialCallouts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WidgetNames != nullptr)
		*WidgetNames = std::move(Parms.WidgetNames);
}


// Function FortniteUI.FortTutorialContext.HideTutorialCallout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialQuestObjectiveName                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::HideTutorialCallout(class FName WidgetName, class FName TutorialQuestObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "HideTutorialCallout");

	Params::FortTutorialContext_HideTutorialCallout Parms{};

	Parms.WidgetName = WidgetName;
	Parms.TutorialQuestObjectiveName = TutorialQuestObjectiveName;
	Parms.TutorialType = TutorialType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.IsTutorialCalloutVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTutorialContext::IsTutorialCalloutVisible(class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "IsTutorialCalloutVisible");

	Params::FortTutorialContext_IsTutorialCalloutVisible Parms{};

	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTutorialContext.OnNewAnnouncementStartedOnClient
// (Final, Native, Public)
// Parameters:
// class AFortClientAnnouncement*          NewAnnouncement                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::OnNewAnnouncementStartedOnClient(class AFortClientAnnouncement* NewAnnouncement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "OnNewAnnouncementStartedOnClient");

	Params::FortTutorialContext_OnNewAnnouncementStartedOnClient Parms{};

	Parms.NewAnnouncement = NewAnnouncement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.SkipTutorial
// (Final, Native, Public, BlueprintCallable)

void UFortTutorialContext::SkipTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "SkipTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.UnhideAllTutorialCallouts
// (Final, Native, Public, BlueprintCallable)

void UFortTutorialContext::UnhideAllTutorialCallouts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "UnhideAllTutorialCallouts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.UnhideTutorialCallout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialQuestObjectiveName                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::UnhideTutorialCallout(class FName WidgetName, class FName TutorialQuestObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "UnhideTutorialCallout");

	Params::FortTutorialContext_UnhideTutorialCallout Parms{};

	Parms.WidgetName = WidgetName;
	Parms.TutorialQuestObjectiveName = TutorialQuestObjectiveName;
	Parms.TutorialType = TutorialType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.UpdateTutorialAnnouncement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFortClientAnnouncementData_TutorialAnnouncementData                                       (Parm, NativeAccessSpecifierPublic)
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTutorialContext::UpdateTutorialAnnouncement(const struct FFortClientAnnouncementData_Tutorial& AnnouncementData, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "UpdateTutorialAnnouncement");

	Params::FortTutorialContext_UpdateTutorialAnnouncement Parms{};

	Parms.AnnouncementData = std::move(AnnouncementData);
	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTutorialContext.GetTutorialData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             TutorialObjectiveName                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortUITutorialData              OutTutorialData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTutorialContext::GetTutorialData(const class FName& TutorialObjectiveName, struct FFortUITutorialData* OutTutorialData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "GetTutorialData");

	Params::FortTutorialContext_GetTutorialData Parms{};

	Parms.TutorialObjectiveName = TutorialObjectiveName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTutorialData != nullptr)
		*OutTutorialData = std::move(Parms.OutTutorialData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTutorialContext.ShouldPromptToSkipTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTutorialContext::ShouldPromptToSkipTutorial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTutorialContext", "ShouldPromptToSkipTutorial");

	Params::FortTutorialContext_ShouldPromptToSkipTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaPlayerInfoBase.BeingRevivedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReviving                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::BeingRevivedStateChanged(class AFortPlayerStateAthena* PS, bool bReviving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "BeingRevivedStateChanged");

	Params::AthenaPlayerInfoBase_BeingRevivedStateChanged Parms{};

	Parms.PS = PS;
	Parms.bReviving = bReviving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.DBNOStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDBNO                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::DBNOStateChanged(class AFortPlayerStateAthena* PS, bool bDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "DBNOStateChanged");

	Params::AthenaPlayerInfoBase_DBNOStateChanged Parms{};

	Parms.PS = PS;
	Parms.bDBNO = bDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.HandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             NewSpectatingTarget                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::HandleSpectatingChanged(class AFortPlayerStateZone* NewSpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "HandleSpectatingChanged");

	Params::AthenaPlayerInfoBase_HandleSpectatingChanged Parms{};

	Parms.NewSpectatingTarget = NewSpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerInfoBase.MapIndicatorPositionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::MapIndicatorPositionChanged(class AFortPlayerStateAthena* PS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "MapIndicatorPositionChanged");

	Params::AthenaPlayerInfoBase_MapIndicatorPositionChanged Parms{};

	Parms.PS = PS;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.MutedStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Muted                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::MutedStateChanged(class AFortPlayerStateAthena* PS, bool Muted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "MutedStateChanged");

	Params::AthenaPlayerInfoBase_MutedStateChanged Parms{};

	Parms.PS = PS;
	Parms.Muted = Muted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.OnDisplayAddFriend
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowAnimation                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::OnDisplayAddFriend(bool bShowAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "OnDisplayAddFriend");

	Params::AthenaPlayerInfoBase_OnDisplayAddFriend Parms{};

	Parms.bShowAnimation = bShowAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.OnGameModeIconChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       NewGameModeIcon                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::OnGameModeIconChange(class AFortPlayerStateAthena* PS, class UTexture2D* NewGameModeIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "OnGameModeIconChange");

	Params::AthenaPlayerInfoBase_OnGameModeIconChange Parms{};

	Parms.PS = PS;
	Parms.NewGameModeIcon = NewGameModeIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.SendEpicFriendInvite
// (Final, Native, Public, BlueprintCallable)

void UAthenaPlayerInfoBase::SendEpicFriendInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "SendEpicFriendInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerInfoBase.SetPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::SetPlayerState(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "SetPlayerState");

	Params::AthenaPlayerInfoBase_SetPlayerState Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerInfoBase.TalkingStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTalking                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerInfoBase::TalkingStateChanged(class AFortPlayerStateAthena* PS, bool bTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "TalkingStateChanged");

	Params::AthenaPlayerInfoBase_TalkingStateChanged Parms{};

	Parms.PS = PS;
	Parms.bTalking = bTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaPlayerInfoBase.IsPlayerOnPC
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaPlayerInfoBase::IsPlayerOnPC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerInfoBase", "IsPlayerOnPC");

	Params::AthenaPlayerInfoBase_IsPlayerOnPC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaPlayerKillsBase.SetKillsSourcePlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerKillsBase::SetKillsSourcePlayerController(class AFortPlayerControllerAthena* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerKillsBase", "SetKillsSourcePlayerController");

	Params::AthenaPlayerKillsBase_SetKillsSourcePlayerController Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerKillsBase.SetKillsSourcePlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerKillsBase::SetKillsSourcePlayerState(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerKillsBase", "SetKillsSourcePlayerState");

	Params::AthenaPlayerKillsBase_SetKillsSourcePlayerState Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListEntryBase.ClearPreviewData
// (Final, Native, Public, BlueprintCallable)

void UFortItemQuantityListEntryBase::ClearPreviewData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "ClearPreviewData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListEntryBase.HandleDifferentItemOrQuantitySetBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    IsBeingReset                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListEntryBase::HandleDifferentItemOrQuantitySetBP(const bool IsBeingReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "HandleDifferentItemOrQuantitySetBP");

	Params::FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP Parms{};

	Parms.IsBeingReset = IsBeingReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemQuantityListEntryBase.PreviewEnded
// (Event, Protected, BlueprintEvent)

void UFortItemQuantityListEntryBase::PreviewEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "PreviewEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemQuantityListEntryBase.PreviewStarted
// (Event, Protected, BlueprintEvent)

void UFortItemQuantityListEntryBase::PreviewStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "PreviewStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemQuantityListEntryBase.SetItemDefinitionAndQuantity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemQuantityPair            ItemQuantityPair                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ShouldTreatAsReset                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListEntryBase::SetItemDefinitionAndQuantity(const struct FFortItemQuantityPair& ItemQuantityPair, const bool ShouldTreatAsReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "SetItemDefinitionAndQuantity");

	Params::FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity Parms{};

	Parms.ItemQuantityPair = std::move(ItemQuantityPair);
	Parms.ShouldTreatAsReset = ShouldTreatAsReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListEntryBase.SetItemInstanceAndQuantity
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemInstanceQuantityPair    ItemQuantityPair                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ShouldTreatAsReset                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListEntryBase::SetItemInstanceAndQuantity(const struct FFortItemInstanceQuantityPair& ItemQuantityPair, const bool ShouldTreatAsReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "SetItemInstanceAndQuantity");

	Params::FortItemQuantityListEntryBase_SetItemInstanceAndQuantity Parms{};

	Parms.ItemQuantityPair = std::move(ItemQuantityPair);
	Parms.ShouldTreatAsReset = ShouldTreatAsReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListEntryBase.SetPreviewData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemEntryPreviewData        PreviewData                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortItemQuantityListEntryBase::SetPreviewData(const struct FFortItemEntryPreviewData& PreviewData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "SetPreviewData");

	Params::FortItemQuantityListEntryBase_SetPreviewData Parms{};

	Parms.PreviewData = std::move(PreviewData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListEntryBase.GetItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UFortItemQuantityListEntryBase::GetItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "GetItemDefinition");

	Params::FortItemQuantityListEntryBase_GetItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemQuantityListEntryBase.GetItemInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemQuantityListEntryBase::GetItemInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "GetItemInstance");

	Params::FortItemQuantityListEntryBase_GetItemInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemQuantityListEntryBase.GetPreviewData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemEntryPreviewData        OutPreviewData                                         (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortItemQuantityListEntryBase::GetPreviewData(struct FFortItemEntryPreviewData* OutPreviewData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "GetPreviewData");

	Params::FortItemQuantityListEntryBase_GetPreviewData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPreviewData != nullptr)
		*OutPreviewData = std::move(Parms.OutPreviewData);
}


// Function FortniteUI.FortItemQuantityListEntryBase.IsBeingPreviewed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemQuantityListEntryBase::IsBeingPreviewed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListEntryBase", "IsBeingPreviewed");

	Params::FortItemQuantityListEntryBase_IsBeingPreviewed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaTabsScreenBase.HandleFeatureNavigateRequest
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaTabsScreenBase::HandleFeatureNavigateRequest(EFortUIFeature Feature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "HandleFeatureNavigateRequest");

	Params::FortAthenaTabsScreenBase_HandleFeatureNavigateRequest Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaTabsScreenBase.HandleFeatureStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          ChangedFeature                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaTabsScreenBase::HandleFeatureStateChanged(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "HandleFeatureStateChanged");

	Params::FortAthenaTabsScreenBase_HandleFeatureStateChanged Parms{};

	Parms.ChangedFeature = ChangedFeature;
	Parms.NewState = NewState;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaTabsScreenBase.SetActiveInvitesCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewActiveInvitesCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaTabsScreenBase::SetActiveInvitesCount(int32 NewActiveInvitesCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "SetActiveInvitesCount");

	Params::FortAthenaTabsScreenBase_SetActiveInvitesCount Parms{};

	Parms.NewActiveInvitesCount = NewActiveInvitesCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaTabsScreenBase.SetOnlineFriendsCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewOnlineFriendsCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaTabsScreenBase::SetOnlineFriendsCount(int32 NewOnlineFriendsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "SetOnlineFriendsCount");

	Params::FortAthenaTabsScreenBase_SetOnlineFriendsCount Parms{};

	Parms.NewOnlineFriendsCount = NewOnlineFriendsCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaTabsScreenBase.ShowReplayBrowser
// (Event, Protected, BlueprintEvent)

void UFortAthenaTabsScreenBase::ShowReplayBrowser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "ShowReplayBrowser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaTabsScreenBase.CanShowPrototypeTab
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAthenaTabsScreenBase::CanShowPrototypeTab(class FName TabNameID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "CanShowPrototypeTab");

	Params::FortAthenaTabsScreenBase_CanShowPrototypeTab Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaTabsScreenBase.CanShowSeasonShopTab
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAthenaTabsScreenBase::CanShowSeasonShopTab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaTabsScreenBase", "CanShowSeasonShopTab");

	Params::FortAthenaTabsScreenBase_CanShowSeasonShopTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaPlayersLeftBase.SetPlayersLeftText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PlayersText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaPlayersLeftBase::SetPlayersLeftText(const class FText& PlayersText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayersLeftBase", "SetPlayersLeftText");

	Params::AthenaPlayersLeftBase_SetPlayersLeftText Parms{};

	Parms.PlayersText = std::move(PlayersText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBangWrapperContentInterface.OnBangStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortBangWrapperContentInterface::OnBangStateChanged(bool bEnabled, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperContentInterface", "OnBangStateChanged");

	Params::FortBangWrapperContentInterface_OnBangStateChanged Parms{};

	Parms.bEnabled = bEnabled;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBangWrapperContentInterface.OnStartCallout
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             TutorialObjectiveName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortBangWrapperContentInterface::OnStartCallout(class FName TutorialObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperContentInterface", "OnStartCallout");

	Params::FortBangWrapperContentInterface_OnStartCallout Parms{};

	Parms.TutorialObjectiveName = TutorialObjectiveName;
	Parms.TutorialType = TutorialType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBangWrapperContentInterface.OnStopCallout
// (Event, Public, BlueprintEvent)

void IFortBangWrapperContentInterface::OnStopCallout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperContentInterface", "OnStopCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaPlayerTeamKillsBase.SetKillsSourcePlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerAthena*      InPlayerController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerTeamKillsBase::SetKillsSourcePlayerController(class AFortPlayerControllerAthena* InPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerTeamKillsBase", "SetKillsSourcePlayerController");

	Params::AthenaPlayerTeamKillsBase_SetKillsSourcePlayerController Parms{};

	Parms.InPlayerController = InPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerTeamKillsBase.SetKillsSourcePlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerTeamKillsBase::SetKillsSourcePlayerState(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerTeamKillsBase", "SetKillsSourcePlayerState");

	Params::AthenaPlayerTeamKillsBase_SetKillsSourcePlayerState Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaPlayerVitalityBarBase.SetDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           PlayerViewModel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaPlayerVitalityBarBase::SetDataSource(class UAthenaPlayerViewModel* PlayerViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerVitalityBarBase", "SetDataSource");

	Params::AthenaPlayerVitalityBarBase_SetDataSource Parms{};

	Parms.PlayerViewModel = PlayerViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMicIndicatorWidget.OnPlayerMicAvailable
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTalking                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMicIndicatorWidget::OnPlayerMicAvailable(bool bIsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMicIndicatorWidget", "OnPlayerMicAvailable");

	Params::FortMicIndicatorWidget_OnPlayerMicAvailable Parms{};

	Parms.bIsTalking = bIsTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMicIndicatorWidget.OnPlayerMuted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMuted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMicIndicatorWidget::OnPlayerMuted(bool bIsMuted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMicIndicatorWidget", "OnPlayerMuted");

	Params::FortMicIndicatorWidget_OnPlayerMuted Parms{};

	Parms.bIsMuted = bIsMuted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMicIndicatorWidget.OnPlayerTalkingChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTalking                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMicIndicatorWidget::OnPlayerTalkingChanged(bool bIsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMicIndicatorWidget", "OnPlayerTalkingChanged");

	Params::FortMicIndicatorWidget_OnPlayerTalkingChanged Parms{};

	Parms.bIsTalking = bIsTalking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMicIndicatorWidget.SetPlayerUniqueId
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 InPlayerUniqueId                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMicIndicatorWidget::SetPlayerUniqueId(const struct FUniqueNetIdRepl& InPlayerUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMicIndicatorWidget", "SetPlayerUniqueId");

	Params::FortMicIndicatorWidget_SetPlayerUniqueId Parms{};

	Parms.InPlayerUniqueId = std::move(InPlayerUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatBox.GetBaseStatView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaBaseStatView*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaBaseStatView* UAthenaProfileStatBox::GetBaseStatView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatBox", "GetBaseStatView");

	Params::AthenaProfileStatBox_GetBaseStatView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteUI.AthenaProfileStatBox.OnStatViewChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaBaseStatView*              Param_StatView                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatBox::OnStatViewChanged__DelegateSignature(class UAthenaBaseStatView* Param_StatView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatBox", "OnStatViewChanged__DelegateSignature");

	Params::AthenaProfileStatBox_OnStatViewChanged__DelegateSignature Parms{};

	Parms.Param_StatView = Param_StatView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaProfileStatBox.SetStatView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaBaseStatView*              InStatView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RespectParentStatView                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatBox::SetStatView(class UAthenaBaseStatView* InStatView, bool RespectParentStatView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatBox", "SetStatView");

	Params::AthenaProfileStatBox_SetStatView Parms{};

	Parms.InStatView = InStatView;
	Parms.RespectParentStatView = RespectParentStatView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatBox.GetStatStyle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     InStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FFortUIStatStyle           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FFortUIStatStyle UAthenaProfileStatBox::GetStatStyle(const struct FGameplayTag& InStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatBox", "GetStatStyle");

	Params::AthenaProfileStatBox_GetStatStyle Parms{};

	Parms.InStat = std::move(InStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLoginUnavailable.LaunchSpecificURL
// (Final, Native, Protected, BlueprintCallable)

void UFortLoginUnavailable::LaunchSpecificURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLoginUnavailable", "LaunchSpecificURL");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLoginUnavailable.OnMessageSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisableMessage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLoginUnavailable::OnMessageSet(bool bDisableMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLoginUnavailable", "OnMessageSet");

	Params::FortLoginUnavailable_OnMessageSet Parms{};

	Parms.bDisableMessage = bDisableMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBaseButton.ForceClick
// (Final, Native, Public, BlueprintCallable)

void UFortBaseButton::ForceClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "ForceClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.GetSelectionGroupIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortBaseButton::GetSelectionGroupIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetSelectionGroupIndex");

	Params::FortBaseButton_GetSelectionGroupIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.OnButtonClicked
// (Final, Native, Protected)

void UFortBaseButton::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetBangVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetBangVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetBangVisibility");

	Params::FortBaseButton_SetBangVisibility Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetBrushSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBrushSize                          InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetBrushSize(EFortBrushSize InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetBrushSize");

	Params::FortBaseButton_SetBrushSize Parms{};

	Parms.InSize = InSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetClickable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InClickable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetClickable(bool InClickable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetClickable");

	Params::FortBaseButton_SetClickable Parms{};

	Parms.InClickable = InClickable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetClickMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonClickMethod                      InClickMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetClickMethod(EButtonClickMethod InClickMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetClickMethod");

	Params::FortBaseButton_SetClickMethod Parms{};

	Parms.InClickMethod = InClickMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetHovered
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InHovered                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetHovered(bool InHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetHovered");

	Params::FortBaseButton_SetHovered Parms{};

	Parms.InHovered = InHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InSelected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetSelected(bool InSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetSelected");

	Params::FortBaseButton_SetSelected Parms{};

	Parms.InSelected = InSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetSelectionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InSelectionGroup                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetSelectionGroup(class FName InSelectionGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetSelectionGroup");

	Params::FortBaseButton_SetSelectionGroup Parms{};

	Parms.InSelectionGroup = InSelectionGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.SetStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortButtonStyle>     InStyle                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBaseButton::SetStyle(TSubclassOf<class UFortButtonStyle> InStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "SetStyle");

	Params::FortBaseButton_SetStyle Parms{};

	Parms.InStyle = InStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBaseButton.GetCurrentButtonPadding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UFortBaseButton::GetCurrentButtonPadding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetCurrentButtonPadding");

	Params::FortBaseButton_GetCurrentButtonPadding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.GetCurrentCustomPadding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UFortBaseButton::GetCurrentCustomPadding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetCurrentCustomPadding");

	Params::FortBaseButton_GetCurrentCustomPadding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.GetCurrentFont
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FSlateFontInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FSlateFontInfo UFortBaseButton::GetCurrentFont() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetCurrentFont");

	Params::FortBaseButton_GetCurrentFont Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.GetCurrentStateStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FFortStateStyle            ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FFortStateStyle UFortBaseButton::GetCurrentStateStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetCurrentStateStyle");

	Params::FortBaseButton_GetCurrentStateStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.GetSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortBaseButton::GetSelected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetSelected");

	Params::FortBaseButton_GetSelected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBaseButton.GetStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortButtonStyle*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortButtonStyle* UFortBaseButton::GetStyle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBaseButton", "GetStyle");

	Params::FortBaseButton_GetStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaBaseStatView.GetStat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     InStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaBaseStatView::GetStat(const struct FGameplayTag& InStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBaseStatView", "GetStat");

	Params::AthenaBaseStatView_GetStat Parms{};

	Parms.InStat = std::move(InStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaWeaponStatView.GetWeaponDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWeaponItemDefinition*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWeaponItemDefinition* UAthenaWeaponStatView::GetWeaponDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaWeaponStatView", "GetWeaponDefinition");

	Params::AthenaWeaponStatView_GetWeaponDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBangWrapper_NUI.OnBangStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapper_NUI::OnBangStateChanged(bool bEnabled, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "OnBangStateChanged");

	Params::FortBangWrapper_NUI_OnBangStateChanged Parms{};

	Parms.bEnabled = bEnabled;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBangWrapper_NUI.OnStartCallout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TutorialObjectiveName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETutorialType                           TutorialType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapper_NUI::OnStartCallout(class FName TutorialObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "OnStartCallout");

	Params::FortBangWrapper_NUI_OnStartCallout Parms{};

	Parms.TutorialObjectiveName = TutorialObjectiveName;
	Parms.TutorialType = TutorialType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortBangWrapper_NUI.OnStopCallout
// (Event, Protected, BlueprintEvent)

void UFortBangWrapper_NUI::OnStopCallout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "OnStopCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortBangWrapper_NUI.OnTutorialCalloutFinished
// (Event, Protected, BlueprintEvent)

void UFortBangWrapper_NUI::OnTutorialCalloutFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "OnTutorialCalloutFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortBangWrapper_NUI.SetBangStateBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapper_NUI::SetBangStateBP(bool bEnabled, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "SetBangStateBP");

	Params::FortBangWrapper_NUI_SetBangStateBP Parms{};

	Parms.bEnabled = bEnabled;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBangWrapper_NUI.SetBangType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBangType                           NewBangType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapper_NUI::SetBangType(EFortBangType NewBangType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "SetBangType");

	Params::FortBangWrapper_NUI_SetBangType Parms{};

	Parms.NewBangType = NewBangType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBangWrapper_NUI.SetTutorialNameID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InTutorialNameID                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapper_NUI::SetTutorialNameID(class FName InTutorialNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "SetTutorialNameID");

	Params::FortBangWrapper_NUI_SetTutorialNameID Parms{};

	Parms.InTutorialNameID = InTutorialNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBangWrapper_NUI.UnregisterTutorialNameID
// (Final, Native, Public, BlueprintCallable)

void UFortBangWrapper_NUI::UnregisterTutorialNameID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapper_NUI", "UnregisterTutorialNameID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaMatchStatView.GetMatchEndTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDateTime                  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FDateTime UAthenaMatchStatView::GetMatchEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchStatView", "GetMatchEndTime");

	Params::AthenaMatchStatView_GetMatchEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchStatView.GetMatchID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaMatchStatView::GetMatchID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchStatView", "GetMatchID");

	Params::AthenaMatchStatView_GetMatchID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchStatView.GetSortedWeaponViews
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     InStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UAthenaWeaponStatView*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAthenaWeaponStatView*> UAthenaMatchStatView::GetSortedWeaponViews(const struct FGameplayTag& InStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchStatView", "GetSortedWeaponViews");

	Params::AthenaMatchStatView_GetSortedWeaponViews Parms{};

	Parms.InStat = std::move(InStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchStatView.GetWeaponViewHighestStat
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     InStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaWeaponStatView*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaWeaponStatView* UAthenaMatchStatView::GetWeaponViewHighestStat(const struct FGameplayTag& InStat) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchStatView", "GetWeaponViewHighestStat");

	Params::AthenaMatchStatView_GetWeaponViewHighestStat Parms{};

	Parms.InStat = std::move(InStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchStatView.GetWeaponViews
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAthenaWeaponStatView*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAthenaWeaponStatView*> UAthenaMatchStatView::GetWeaponViews() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchStatView", "GetWeaponViews");

	Params::AthenaMatchStatView_GetWeaponViews Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchSetStatView.GetOwningSeason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaSeasonStats*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaSeasonStats* UAthenaMatchSetStatView::GetOwningSeason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchSetStatView", "GetOwningSeason");

	Params::AthenaMatchSetStatView_GetOwningSeason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaMatchSetStatView.GetBestMatchViews
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAthenaMatchStatView*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAthenaMatchStatView*> UAthenaMatchSetStatView::GetBestMatchViews() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaMatchSetStatView", "GetBestMatchViews");

	Params::AthenaMatchSetStatView_GetBestMatchViews Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatContext.CreateCurrentMatchStatView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaMatchStatView*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaMatchStatView* UAthenaProfileStatContext::CreateCurrentMatchStatView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatContext", "CreateCurrentMatchStatView");

	Params::AthenaProfileStatContext_CreateCurrentMatchStatView Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatContext.CreateMatchStatView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaSeasonStats*               StatSet                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Bucket                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaMatchSetStatView*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaMatchSetStatView* UAthenaProfileStatContext::CreateMatchStatView(class UAthenaSeasonStats* StatSet, class FName Bucket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatContext", "CreateMatchStatView");

	Params::AthenaProfileStatContext_CreateMatchStatView Parms{};

	Parms.StatSet = StatSet;
	Parms.Bucket = Bucket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatContext.CreateMatchViews
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAthenaMatchStats>        InRecentMatches                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UAthenaMatchStatView*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAthenaMatchStatView*> UAthenaProfileStatContext::CreateMatchViews(const TArray<struct FAthenaMatchStats>& InRecentMatches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatContext", "CreateMatchViews");

	Params::AthenaProfileStatContext_CreateMatchViews Parms{};

	Parms.InRecentMatches = std::move(InRecentMatches);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteUI.AthenaProfileStatContext.OnAthenaStatsProfileLoaded__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortMcpProfileAthenaStats*       StatProfile                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatContext::OnAthenaStatsProfileLoaded__DelegateSignature(class UFortMcpProfileAthenaStats* StatProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatContext", "OnAthenaStatsProfileLoaded__DelegateSignature");

	Params::AthenaProfileStatContext_OnAthenaStatsProfileLoaded__DelegateSignature Parms{};

	Parms.StatProfile = StatProfile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaProfileStatListWidgetBase.HandleStatViewChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaBaseStatView*              StatView                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatListWidgetBase::HandleStatViewChanged(class UAthenaBaseStatView* StatView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatListWidgetBase", "HandleStatViewChanged");

	Params::AthenaProfileStatListWidgetBase_HandleStatViewChanged Parms{};

	Parms.StatView = StatView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatListWidgetBase.OnStatChanged
// (Event, Protected, BlueprintEvent)

void UAthenaProfileStatListWidgetBase::OnStatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatListWidgetBase", "OnStatChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsBase.NextPlaylist
// (Final, Native, Public, BlueprintCallable)

void UAthenaProfileStatsBase::NextPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "NextPlaylist");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsBase.NextStatSet
// (Final, Native, Public, BlueprintCallable)

void UAthenaProfileStatsBase::NextStatSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "NextStatSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsBase.OnDataRecieved
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsBase::OnDataRecieved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "OnDataRecieved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsBase.OnNoData
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsBase::OnNoData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "OnNoData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsBase.OnProfileLoaded
// (Final, Native, Private)
// Parameters:
// class UFortMcpProfileAthenaStats*       ProfileAthenaStats                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatsBase::OnProfileLoaded(class UFortMcpProfileAthenaStats* ProfileAthenaStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "OnProfileLoaded");

	Params::AthenaProfileStatsBase_OnProfileLoaded Parms{};

	Parms.ProfileAthenaStats = ProfileAthenaStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsBase.OnStartFetchingData
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsBase::OnStartFetchingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "OnStartFetchingData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsBase.OnStatSetChanged
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsBase::OnStatSetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "OnStatSetChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsBase.PrevStatSet
// (Final, Native, Public, BlueprintCallable)

void UAthenaProfileStatsBase::PrevStatSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "PrevStatSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsBase.Setup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatsBase::Setup(const struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "Setup");

	Params::AthenaProfileStatsBase_Setup Parms{};

	Parms.InUniqueId = std::move(InUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsBase.GetCurrentPlaylistName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaProfileStatsBase::GetCurrentPlaylistName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "GetCurrentPlaylistName");

	Params::AthenaProfileStatsBase_GetCurrentPlaylistName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatsBase.GetCurrentStatSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaSeasonStats*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaSeasonStats* UAthenaProfileStatsBase::GetCurrentStatSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "GetCurrentStatSet");

	Params::AthenaProfileStatsBase_GetCurrentStatSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatsBase.GetUniqueID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAthenaProfileStatsBase::GetUniqueID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "GetUniqueID");

	Params::AthenaProfileStatsBase_GetUniqueID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatsBase.NumStatSets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaProfileStatsBase::NumStatSets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsBase", "NumStatSets");

	Params::AthenaProfileStatsBase_NumStatSets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.OnDataRecieved
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsRecentMatchesBase::OnDataRecieved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "OnDataRecieved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.OnNoData
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsRecentMatchesBase::OnNoData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "OnNoData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.OnProfileLoaded
// (Final, Native, Private)
// Parameters:
// class UFortMcpProfileAthenaStats*       ProfileAthenaStats                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatsRecentMatchesBase::OnProfileLoaded(class UFortMcpProfileAthenaStats* ProfileAthenaStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "OnProfileLoaded");

	Params::AthenaProfileStatsRecentMatchesBase_OnProfileLoaded Parms{};

	Parms.ProfileAthenaStats = ProfileAthenaStats;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.OnRecentMatcheChanged
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsRecentMatchesBase::OnRecentMatcheChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "OnRecentMatcheChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.OnStartFetchingData
// (Event, Public, BlueprintEvent)

void UAthenaProfileStatsRecentMatchesBase::OnStartFetchingData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "OnStartFetchingData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.Setup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatsRecentMatchesBase::Setup(const struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "Setup");

	Params::AthenaProfileStatsRecentMatchesBase_Setup Parms{};

	Parms.InUniqueId = std::move(InUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.GetRecentMatches
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UAthenaMatchStatView*>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UAthenaMatchStatView*> UAthenaProfileStatsRecentMatchesBase::GetRecentMatches() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "GetRecentMatches");

	Params::AthenaProfileStatsRecentMatchesBase_GetRecentMatches Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatsRecentMatchesBase.GetUniqueID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAthenaProfileStatsRecentMatchesBase::GetUniqueID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatsRecentMatchesBase", "GetUniqueID");

	Params::AthenaProfileStatsRecentMatchesBase_GetUniqueID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCooldownWidget.OnCooldownStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCooldownWidget::OnCooldownStarted(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCooldownWidget", "OnCooldownStarted");

	Params::FortItemCooldownWidget_OnCooldownStarted Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCooldownWidget.OnCooldownStopped
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCooldownWidget::OnCooldownStopped(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCooldownWidget", "OnCooldownStopped");

	Params::FortItemCooldownWidget_OnCooldownStopped Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemCooldownWidget.OnWorldItemDestroyed
// (Final, Native, Private)

void UFortItemCooldownWidget::OnWorldItemDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCooldownWidget", "OnWorldItemDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCooldownWidget.SetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortWorldItem*                   InWorldItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCooldownWidget::SetItem(const class UFortWorldItem* InWorldItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCooldownWidget", "SetItem");

	Params::FortItemCooldownWidget_SetItem Parms{};

	Parms.InWorldItem = InWorldItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCooldownWidget.TryStartUpdateCooldown_BP
// (Final, Native, Public, BlueprintCallable)

void UFortItemCooldownWidget::TryStartUpdateCooldown_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCooldownWidget", "TryStartUpdateCooldown_BP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatWidgetBase.CreateWeaponGroupData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MaxToReturn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeOtherCategory                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPercentages                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FStatGroupData>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FStatGroupData> UAthenaProfileStatWidgetBase::CreateWeaponGroupData(int32 MaxToReturn, bool bIncludeOtherCategory, bool bPercentages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatWidgetBase", "CreateWeaponGroupData");

	Params::AthenaProfileStatWidgetBase_CreateWeaponGroupData Parms{};

	Parms.MaxToReturn = MaxToReturn;
	Parms.bIncludeOtherCategory = bIncludeOtherCategory;
	Parms.bPercentages = bPercentages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaProfileStatWidgetBase.HandleStatViewChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaBaseStatView*              StatView                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatWidgetBase::HandleStatViewChanged(class UAthenaBaseStatView* StatView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatWidgetBase", "HandleStatViewChanged");

	Params::AthenaProfileStatWidgetBase_HandleStatViewChanged Parms{};

	Parms.StatView = StatView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatWidgetBase.OnStatChanged
// (Event, Protected, BlueprintEvent)

void UAthenaProfileStatWidgetBase::OnStatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatWidgetBase", "OnStatChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaProfileStatWidgetBase.SetAsStat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InStat                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatWidgetBase::SetAsStat(const struct FGameplayTag& InStat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatWidgetBase", "SetAsStat");

	Params::AthenaProfileStatWidgetBase_SetAsStat Parms{};

	Parms.InStat = std::move(InStat);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaProfileStatWidgetBase.SetStatView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaBaseStatView*              InStatView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    RespectParentStatView                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaProfileStatWidgetBase::SetStatView(class UAthenaBaseStatView* InStatView, bool RespectParentStatView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaProfileStatWidgetBase", "SetStatView");

	Params::AthenaProfileStatWidgetBase_SetStatView Parms{};

	Parms.InStatView = InStatView;
	Parms.RespectParentStatView = RespectParentStatView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaQuickBarNativeCell.DesiredSizeOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   WidthOverride                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeightOverride                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaQuickBarNativeCell::DesiredSizeOverride(float WidthOverride, float HeightOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaQuickBarNativeCell", "DesiredSizeOverride");

	Params::AthenaQuickBarNativeCell_DesiredSizeOverride Parms{};

	Parms.WidthOverride = WidthOverride;
	Parms.HeightOverride = HeightOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaQuickBarNativeCell.SetIsSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaQuickBarNativeCell::SetIsSelected(bool bInSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaQuickBarNativeCell", "SetIsSelected");

	Params::AthenaQuickBarNativeCell_SetIsSelected Parms{};

	Parms.bInSelected = bInSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaQuickBarNativeCell.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        InItemToRepresent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaQuickBarNativeCell::SetItemToRepresent(class UFortItem* InItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaQuickBarNativeCell", "SetItemToRepresent");

	Params::AthenaQuickBarNativeCell_SetItemToRepresent Parms{};

	Parms.InItemToRepresent = InItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailElementWidget.HandleInspectModeChanged
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandleInspectModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandleInspectModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandleItemToDetailChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandleItemToDetailChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandleItemToDetailChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandlePostDifferentItemToCompareWithSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandlePostDifferentItemToCompareWithSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandlePostDifferentItemToCompareWithSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandlePostDifferentItemToDetailSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandlePostDifferentItemToDetailSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandlePostDifferentItemToDetailSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandlePreDifferentItemToCompareWithSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandlePreDifferentItemToCompareWithSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandlePreDifferentItemToCompareWithSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandlePreDifferentItemToDetailSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandlePreDifferentItemToDetailSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandlePreDifferentItemToDetailSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandleQuantityOverrideChanged
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandleQuantityOverrideChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandleQuantityOverrideChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailElementWidget.HandleShouldPreviewUpgradingItemChanged
// (Event, Protected, BlueprintEvent)

void UFortItemDetailElementWidget::HandleShouldPreviewUpgradingItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailElementWidget", "HandleShouldPreviewUpgradingItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.BoolDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BoolParam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::BoolDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, bool BoolParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "BoolDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_BoolDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.BoolParam = BoolParam;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.FloatDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FloatParam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::FloatDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, float FloatParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "FloatDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_FloatDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.FloatParam = FloatParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnBeingRevivedStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsBeingRevived                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnBeingRevivedStateChanged(class AFortPlayerStateAthena* InPlayerState, bool bInIsBeingRevived)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnBeingRevivedStateChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnBeingRevivedStateChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.bInIsBeingRevived = bInIsBeingRevived;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnDBNOStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDBNO                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnDBNOStateChanged(class AFortPlayerStateAthena* InPlayerState, bool bInIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnDBNOStateChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnDBNOStateChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.bInIsDBNO = bInIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnDeadStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDead                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnDeadStateChanged(class AFortPlayerStateAthena* InPlayerState, bool bInIsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnDeadStateChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnDeadStateChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.bInIsDead = bInIsDead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnDisconnectedChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDisconnected                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnDisconnectedChanged(class AFortPlayerStateAthena* InPlayerState, bool bInIsDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnDisconnectedChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnDisconnectedChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.bInIsDisconnected = bInIsDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnHitPointsStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InHealthPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InShieldPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnHitPointsStateChanged(class AFortPlayerStateAthena* InPlayerState, float InHealthPercent, float InShieldPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnHitPointsStateChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnHitPointsStateChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.InHealthPercent = InHealthPercent;
	Parms.InShieldPercent = InShieldPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnKillScoreChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnKillScoreChanged(class AFortPlayerStateAthena* InPlayerState, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnKillScoreChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnKillScoreChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.InKillScore = InKillScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnLocationChanged
// (Final, Native, Private)
// Parameters:
// class FString                           InLocation                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnLocationChanged(const class FString& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnLocationChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnLocationChanged Parms{};

	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnPlaceChanged
// (Final, Native, Private)
// Parameters:
// int32                                   InPlace                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnPlaceChanged(int32 InPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnPlaceChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnPlaceChanged Parms{};

	Parms.InPlace = InPlace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnPlayerNameChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnPlayerNameChanged(class AFortPlayerStateAthena* InPlayerState, const class FString& InPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnPlayerNameChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnPlayerNameChanged Parms{};

	Parms.InPlayerState = InPlayerState;
	Parms.InPlayerName = std::move(InPlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnSquadIdChanged
// (Final, Native, Private)
// Parameters:
// uint8                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnSquadIdChanged(uint8 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnSquadIdChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnSquadIdChanged Parms{};

	Parms.InSquadId = InSquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnStormcapScoreChanged
// (Final, Native, Private)
// Parameters:
// float                                   InScore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnStormcapScoreChanged(float InScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnStormcapScoreChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnStormcapScoreChanged Parms{};

	Parms.InScore = InScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnVehicleHealthChanged
// (Final, Native, Private)

void UAthenaRemotePlayerViewData::ForwardOnVehicleHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnVehicleHealthChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnVehicleStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  InPawn                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InNewVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InOldVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnVehicleStateChanged(class AFortPlayerPawn* InPawn, class AFortAthenaVehicle* InNewVehicle, class AFortAthenaVehicle* InOldVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnVehicleStateChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnVehicleStateChanged Parms{};

	Parms.InPawn = InPawn;
	Parms.InNewVehicle = InNewVehicle;
	Parms.InOldVehicle = InOldVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.ForwardOnWeaponChanged
// (Final, Native, Private)
// Parameters:
// class AFortWeapon*                      InNewWeapon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      InPrevWeapon                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::ForwardOnWeaponChanged(class AFortWeapon* InNewWeapon, class AFortWeapon* InPrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "ForwardOnWeaponChanged");

	Params::AthenaRemotePlayerViewData_ForwardOnWeaponChanged Parms{};

	Parms.InNewWeapon = InNewWeapon;
	Parms.InPrevWeapon = InPrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.IntDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::IntDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, int32 IntParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "IntDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_IntDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.IntParam = IntParam;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.LinearColorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ColorParam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::LinearColorDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, const struct FLinearColor& ColorParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "LinearColorDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_LinearColorDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.ColorParam = std::move(ColorParam);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.PawnDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  PawnParam                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::PawnDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, class AFortPlayerPawn* PawnParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "PawnDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_PawnDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.PawnParam = PawnParam;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.PlayerStateDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateAthena*           Param_PlayerState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::PlayerStateDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, class AFortPlayerStateAthena* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "PlayerStateDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_PlayerStateDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.Param_PlayerState = Param_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemotePlayerViewData.SetPlayerState
// (Final, Native, Public)
// Parameters:
// class AFortPlayerStateAthena*           InPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::SetPlayerState(class AFortPlayerStateAthena* InPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "SetPlayerState");

	Params::AthenaRemotePlayerViewData_SetPlayerState Parms{};

	Parms.InPlayerState = InPlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.StringDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringParam                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::StringDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, const class FString& StringParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "StringDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_StringDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.StringParam = std::move(StringParam);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.UInt8Delegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   IntParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::UInt8Delegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, uint8 IntParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "UInt8Delegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_UInt8Delegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.IntParam = IntParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemotePlayerViewData.UpdateDistanceToStorm
// (Final, Native, Public)

void UAthenaRemotePlayerViewData::UpdateDistanceToStorm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "UpdateDistanceToStorm");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewData.UpdatePlayerPawn
// (Final, Native, Public)

void UAthenaRemotePlayerViewData::UpdatePlayerPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "UpdatePlayerPawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.VehicleDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               VehicleParam1                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               VehicleParam2                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::VehicleDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, class AFortAthenaVehicle* VehicleParam1, class AFortAthenaVehicle* VehicleParam2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "VehicleDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_VehicleDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.VehicleParam1 = VehicleParam1;
	Parms.VehicleParam2 = VehicleParam2;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemotePlayerViewData.WeaponDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      WeaponParam                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewData::WeaponDelegate__DelegateSignature(class UAthenaRemotePlayerViewData* PlayerData, class AFortWeapon* WeaponParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "WeaponDelegate__DelegateSignature");

	Params::AthenaRemotePlayerViewData_WeaponDelegate__DelegateSignature Parms{};

	Parms.PlayerData = PlayerData;
	Parms.WeaponParam = WeaponParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetCurrentWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortWeapon*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortWeapon* UAthenaRemotePlayerViewData::GetCurrentWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetCurrentWeapon");

	Params::AthenaRemotePlayerViewData_GetCurrentWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetDistanceToStorm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemotePlayerViewData::GetDistanceToStorm() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetDistanceToStorm");

	Params::AthenaRemotePlayerViewData_GetDistanceToStorm Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaRemotePlayerViewData::GetHealthPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetHealthPercent");

	Params::AthenaRemotePlayerViewData_GetHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetInAircraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetInAircraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetInAircraft");

	Params::AthenaRemotePlayerViewData_GetInAircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsBeingRevived
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsBeingRevived() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsBeingRevived");

	Params::AthenaRemotePlayerViewData_GetIsBeingRevived Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsDBNO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsDBNO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsDBNO");

	Params::AthenaRemotePlayerViewData_GetIsDBNO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsDead");

	Params::AthenaRemotePlayerViewData_GetIsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsDisconnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsDisconnected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsDisconnected");

	Params::AthenaRemotePlayerViewData_GetIsDisconnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsDrivingVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsDrivingVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsDrivingVehicle");

	Params::AthenaRemotePlayerViewData_GetIsDrivingVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsEliminated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsEliminated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsEliminated");

	Params::AthenaRemotePlayerViewData_GetIsEliminated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsFollowedPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsFollowedPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsFollowedPlayer");

	Params::AthenaRemotePlayerViewData_GetIsFollowedPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsInRelevancy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsInRelevancy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsInRelevancy");

	Params::AthenaRemotePlayerViewData_GetIsInRelevancy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetIsReplayRelevancyPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemotePlayerViewData::GetIsReplayRelevancyPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetIsReplayRelevancyPlayer");

	Params::AthenaRemotePlayerViewData_GetIsReplayRelevancyPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetKillScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemotePlayerViewData::GetKillScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetKillScore");

	Params::AthenaRemotePlayerViewData_GetKillScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaRemotePlayerViewData::GetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetLocation");

	Params::AthenaRemotePlayerViewData_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetMaterialCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemotePlayerViewData::GetMaterialCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetMaterialCount");

	Params::AthenaRemotePlayerViewData_GetMaterialCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetPlace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemotePlayerViewData::GetPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetPlace");

	Params::AthenaRemotePlayerViewData_GetPlace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaRemotePlayerViewData::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetPlayerName");

	Params::AthenaRemotePlayerViewData_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UAthenaRemotePlayerViewData::GetPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetPlayerPawn");

	Params::AthenaRemotePlayerViewData_GetPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateAthena*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStateAthena* UAthenaRemotePlayerViewData::GetPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetPlayerState");

	Params::AthenaRemotePlayerViewData_GetPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetPlayerUID
// (Final, Native, Public, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UAthenaRemotePlayerViewData::GetPlayerUID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetPlayerUID");

	Params::AthenaRemotePlayerViewData_GetPlayerUID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetShieldPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaRemotePlayerViewData::GetShieldPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetShieldPercent");

	Params::AthenaRemotePlayerViewData_GetShieldPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UAthenaRemotePlayerViewData::GetSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetSquadId");

	Params::AthenaRemotePlayerViewData_GetSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetStormcapScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaRemotePlayerViewData::GetStormcapScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetStormcapScore");

	Params::AthenaRemotePlayerViewData_GetStormcapScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetTeamColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UAthenaRemotePlayerViewData::GetTeamColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetTeamColor");

	Params::AthenaRemotePlayerViewData_GetTeamColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaVehicle*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaVehicle* UAthenaRemotePlayerViewData::GetVehicle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetVehicle");

	Params::AthenaRemotePlayerViewData_GetVehicle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemotePlayerViewData.GetVehicleHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAthenaRemotePlayerViewData::GetVehicleHealthPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewData", "GetVehicleHealthPercent");

	Params::AthenaRemotePlayerViewData_GetVehicleHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMatchmakingKnobsSpinnerButton.OnLoadingStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCurrentlyLoading                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsSpinnerButton::OnLoadingStateChanged(bool bCurrentlyLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsSpinnerButton", "OnLoadingStateChanged");

	Params::FortMatchmakingKnobsSpinnerButton_OnLoadingStateChanged Parms{};

	Parms.bCurrentlyLoading = bCurrentlyLoading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMatchmakingKnobsSpinnerButton.OnSelectionRotated
// (Final, Native, Private)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsSpinnerButton::OnSelectionRotated(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsSpinnerButton", "OnSelectionRotated");

	Params::FortMatchmakingKnobsSpinnerButton_OnSelectionRotated Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemotePlayerViewModel.OnFollowedPlayerChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorPC                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 NewFollowedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemotePlayerViewModel::OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemotePlayerViewModel", "OnFollowedPlayerChanged");

	Params::AthenaRemotePlayerViewModel_OnFollowedPlayerChanged Parms{};

	Parms.SpectatorPC = SpectatorPC;
	Parms.NewFollowedPlayer = NewFollowedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaRemoteSquadViewData.EventDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::EventDelegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "EventDelegate__DelegateSignature");

	Params::AthenaRemoteSquadViewData_EventDelegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemoteSquadViewData.HandlePlayerDeadStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEliminated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::HandlePlayerDeadStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool InEliminated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "HandlePlayerDeadStateChanged");

	Params::AthenaRemoteSquadViewData_HandlePlayerDeadStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InEliminated = InEliminated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemoteSquadViewData.HandlePlayerKillscoreChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::HandlePlayerKillscoreChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "HandlePlayerKillscoreChanged");

	Params::AthenaRemoteSquadViewData_HandlePlayerKillscoreChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InKillScore = InKillScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRemoteSquadViewData.HandlePlayerPlaceChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPlace                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::HandlePlayerPlaceChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "HandlePlayerPlaceChanged");

	Params::AthenaRemoteSquadViewData_HandlePlayerPlaceChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlace = InPlace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaRemoteSquadViewData.IntDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::IntDelegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData, int32 IntParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "IntDelegate__DelegateSignature");

	Params::AthenaRemoteSquadViewData_IntDelegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;
	Parms.IntParam = IntParam;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemoteSquadViewData.LinearColorDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ColorParam                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::LinearColorDelegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData, const struct FLinearColor& ColorParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "LinearColorDelegate__DelegateSignature");

	Params::AthenaRemoteSquadViewData_LinearColorDelegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;
	Parms.ColorParam = std::move(ColorParam);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemoteSquadViewData.PlayerDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaRemotePlayerViewData*      PlayerData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::PlayerDelegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData, class UAthenaRemotePlayerViewData* PlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "PlayerDelegate__DelegateSignature");

	Params::AthenaRemoteSquadViewData_PlayerDelegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;
	Parms.PlayerData = PlayerData;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.AthenaRemoteSquadViewData.UInt8Delegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UAthenaRemoteSquadViewData*       SquadData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   IntParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRemoteSquadViewData::UInt8Delegate__DelegateSignature(class UAthenaRemoteSquadViewData* SquadData, uint8 IntParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "UInt8Delegate__DelegateSignature");

	Params::AthenaRemoteSquadViewData_UInt8Delegate__DelegateSignature Parms{};

	Parms.SquadData = SquadData;
	Parms.IntParam = IntParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetIsEliminated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaRemoteSquadViewData::GetIsEliminated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetIsEliminated");

	Params::AthenaRemoteSquadViewData_GetIsEliminated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetKillScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemoteSquadViewData::GetKillScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetKillScore");

	Params::AthenaRemoteSquadViewData_GetKillScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetPlace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemoteSquadViewData::GetPlace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetPlace");

	Params::AthenaRemoteSquadViewData_GetPlace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetPlayerDatas
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UAthenaRemotePlayerViewData*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TArray<class UAthenaRemotePlayerViewData*> UAthenaRemoteSquadViewData::GetPlayerDatas() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetPlayerDatas");

	Params::AthenaRemoteSquadViewData_GetPlayerDatas Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetSquadColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UAthenaRemoteSquadViewData::GetSquadColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetSquadColor");

	Params::AthenaRemoteSquadViewData_GetSquadColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaRemoteSquadViewData.GetSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaRemoteSquadViewData::GetSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRemoteSquadViewData", "GetSquadId");

	Params::AthenaRemoteSquadViewData_GetSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserEntryWidget.GetDateTimeText
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        DateTime                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaReplayBrowserEntryWidget::GetDateTimeText(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserEntryWidget", "GetDateTimeText");

	Params::AthenaReplayBrowserEntryWidget_GetDateTimeText Parms{};

	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserEntryWidget.OnReplayBrowserEntryDataSet
// (Event, Public, BlueprintEvent)

void UAthenaReplayBrowserEntryWidget::OnReplayBrowserEntryDataSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserEntryWidget", "OnReplayBrowserEntryDataSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLegacySlateBridgeWidget.SetOnCloseHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       OnCloseHandler                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortLegacySlateBridgeWidget::SetOnCloseHandler(const TDelegate<void()>& OnCloseHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLegacySlateBridgeWidget", "SetOnCloseHandler");

	Params::FortLegacySlateBridgeWidget_SetOnCloseHandler Parms{};

	Parms.OnCloseHandler = OnCloseHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLegacySlateBridgeWidget.UpdateSlateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortLegacySlateWidget                  SlateWidgetType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLegacySlateBridgeWidget::UpdateSlateWidget(EFortLegacySlateWidget SlateWidgetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLegacySlateBridgeWidget", "UpdateSlateWidget");

	Params::FortLegacySlateBridgeWidget_UpdateSlateWidget Parms{};

	Parms.SlateWidgetType = SlateWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.AreAnyActionsOutstanding
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaReplayBrowserScreenBase::AreAnyActionsOutstanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "AreAnyActionsOutstanding");

	Params::AthenaReplayBrowserScreenBase_AreAnyActionsOutstanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.AreExternalActionsOutstanding
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaReplayBrowserScreenBase::AreExternalActionsOutstanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "AreExternalActionsOutstanding");

	Params::AthenaReplayBrowserScreenBase_AreExternalActionsOutstanding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.BrowseToReplayFolder
// (Final, Native, Protected, BlueprintCallable)

void UAthenaReplayBrowserScreenBase::BrowseToReplayFolder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "BrowseToReplayFolder");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.DeleteInvalidReplays
// (Final, Native, Protected, BlueprintCallable)

void UAthenaReplayBrowserScreenBase::DeleteInvalidReplays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "DeleteInvalidReplays");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.DeleteReplay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaReplayBrowserRowProxyInstance*RowProxy                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::DeleteReplay(const class UAthenaReplayBrowserRowProxyInstance* RowProxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "DeleteReplay");

	Params::AthenaReplayBrowserScreenBase_DeleteReplay Parms{};

	Parms.RowProxy = RowProxy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.DoesReplayFolderExist
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaReplayBrowserScreenBase::DoesReplayFolderExist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "DoesReplayFolderExist");

	Params::AthenaReplayBrowserScreenBase_DoesReplayFolderExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.IsHandlingAction
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAthenaReplayBrowserScreenBase::IsHandlingAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "IsHandlingAction");

	Params::AthenaReplayBrowserScreenBase_IsHandlingAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnActionFinished
// (Event, Protected, BlueprintEvent)

void UAthenaReplayBrowserScreenBase::OnActionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnActionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnActionStarted
// (Event, Protected, BlueprintEvent)

void UAthenaReplayBrowserScreenBase::OnActionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnActionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnBackActionExecuted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnBackActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnBackActionExecuted");

	Params::AthenaReplayBrowserScreenBase_OnBackActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnDeleteActionExecuted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnDeleteActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnDeleteActionExecuted");

	Params::AthenaReplayBrowserScreenBase_OnDeleteActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnDeleteFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnDeleteFailed(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnDeleteFailed");

	Params::AthenaReplayBrowserScreenBase_OnDeleteFailed Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnPlayActionExecuted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnPlayActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnPlayActionExecuted");

	Params::AthenaReplayBrowserScreenBase_OnPlayActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnPlayFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnPlayFailed(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnPlayFailed");

	Params::AthenaReplayBrowserScreenBase_OnPlayFailed Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnRefreshActionExecuted
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnRefreshActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnRefreshActionExecuted");

	Params::AthenaReplayBrowserScreenBase_OnRefreshActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnRenameActionExecuted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnRenameActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnRenameActionExecuted");

	Params::AthenaReplayBrowserScreenBase_OnRenameActionExecuted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnRenameFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnRenameFailed(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnRenameFailed");

	Params::AthenaReplayBrowserScreenBase_OnRenameFailed Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnRowsUpdated
// (Event, Protected, BlueprintEvent)

void UAthenaReplayBrowserScreenBase::OnRowsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnRowsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.OnSaveFailed
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::OnSaveFailed(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "OnSaveFailed");

	Params::AthenaReplayBrowserScreenBase_OnSaveFailed Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.PlayReplay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaReplayBrowserRowProxyInstance*RowProxy                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::PlayReplay(const class UAthenaReplayBrowserRowProxyInstance* RowProxy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "PlayReplay");

	Params::AthenaReplayBrowserScreenBase_PlayReplay Parms{};

	Parms.RowProxy = RowProxy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.RenameReplay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaReplayBrowserRowProxyInstance*RowProxy                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewReplayName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::RenameReplay(const class UAthenaReplayBrowserRowProxyInstance* RowProxy, const class FString& NewReplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "RenameReplay");

	Params::AthenaReplayBrowserScreenBase_RenameReplay Parms{};

	Parms.RowProxy = RowProxy;
	Parms.NewReplayName = std::move(NewReplayName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.SaveAndRenameReplay
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAthenaReplayBrowserRowProxyInstance*RowProxy                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewReplayName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::SaveAndRenameReplay(const class UAthenaReplayBrowserRowProxyInstance* RowProxy, const class FString& NewReplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "SaveAndRenameReplay");

	Params::AthenaReplayBrowserScreenBase_SaveAndRenameReplay Parms{};

	Parms.RowProxy = RowProxy;
	Parms.NewReplayName = std::move(NewReplayName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaReplayBrowserScreenBase.ShowDeleteInvalidDialog
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaReplayBrowserScreenBase::ShowDeleteInvalidDialog(const class FText& Title, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaReplayBrowserScreenBase", "ShowDeleteInvalidDialog");

	Params::AthenaReplayBrowserScreenBase_ShowDeleteInvalidDialog Parms{};

	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRespawnBase.OnGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRespawnBase::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRespawnBase", "OnGamePhaseChanged");

	Params::AthenaRespawnBase_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaRespawnBase.OnUpdateRespawnState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaRespawnBase::OnUpdateRespawnState(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRespawnBase", "OnUpdateRespawnState");

	Params::AthenaRespawnBase_OnUpdateRespawnState Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaRespawnBase.UpdateAllUI
// (Final, Native, Protected)

void UAthenaRespawnBase::UpdateAllUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaRespawnBase", "UpdateAllUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaScorePopWidgetBase.HandleNewScoreEarned
// (Final, Native, Protected)
// Parameters:
// int32                                   NewPoints                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAthenaScoringEvent                     ScoreType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaScorePopWidgetBase::HandleNewScoreEarned(int32 NewPoints, EAthenaScoringEvent ScoreType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaScorePopWidgetBase", "HandleNewScoreEarned");

	Params::AthenaScorePopWidgetBase_HandleNewScoreEarned Parms{};

	Parms.NewPoints = NewPoints;
	Parms.ScoreType = ScoreType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaScorePopWidgetBase.OnNewScoreEarned
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   NewScoreValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NewScoreTypeText                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   BigScoreThreshold                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaScorePopWidgetBase::OnNewScoreEarned(int32 NewScoreValue, const class FText& NewScoreTypeText, int32 BigScoreThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaScorePopWidgetBase", "OnNewScoreEarned");

	Params::AthenaScorePopWidgetBase_OnNewScoreEarned Parms{};

	Parms.NewScoreValue = NewScoreValue;
	Parms.NewScoreTypeText = std::move(NewScoreTypeText);
	Parms.BigScoreThreshold = BigScoreThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnCurrentValueChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InCurrentValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnCurrentValueChanged(float InCurrentValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnCurrentValueChanged");

	Params::AthenaSpectatorHitPointBarBase_OnCurrentValueChanged Parms{};

	Parms.InCurrentValue = InCurrentValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnDBNOChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsDBNO                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnDBNOChanged(bool bInIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnDBNOChanged");

	Params::AthenaSpectatorHitPointBarBase_OnDBNOChanged Parms{};

	Parms.bInIsDBNO = bInIsDBNO;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnDBNOStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsDBNO                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnDBNOStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDBNO)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnDBNOStateChanged");

	Params::AthenaSpectatorHitPointBarBase_OnDBNOStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsDBNO = bInIsDBNO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnDeltaValueChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InDeltaValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnDeltaValueChanged(float InDeltaValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnDeltaValueChanged");

	Params::AthenaSpectatorHitPointBarBase_OnDeltaValueChanged Parms{};

	Parms.InDeltaValue = InDeltaValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnEliminatedStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEliminated                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnEliminatedStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnEliminatedStateChanged");

	Params::AthenaSpectatorHitPointBarBase_OnEliminatedStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsEliminated = bInIsEliminated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnValueDamaged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InValuePercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnValueDamaged(class UAthenaRemotePlayerViewData* InPlayerData, float InValuePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnValueDamaged");

	Params::AthenaSpectatorHitPointBarBase_OnValueDamaged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InValuePercent = InValuePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.OnValueHealed
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InValuePercent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::OnValueHealed(class UAthenaRemotePlayerViewData* InPlayerData, float InValuePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "OnValueHealed");

	Params::AthenaSpectatorHitPointBarBase_OnValueHealed Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InValuePercent = InValuePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHitPointBarBase.SetPlayerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHitPointBarBase::SetPlayerData(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHitPointBarBase", "SetPlayerData");

	Params::AthenaSpectatorHitPointBarBase_SetPlayerData Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnCameraTypeChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorPC                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpectatorCameraType                    NewCameraType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDControlsBase::OnCameraTypeChanged(class AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnCameraTypeChanged");

	Params::AthenaSpectatorHUDControlsBase_OnCameraTypeChanged Parms{};

	Parms.SpectatorPC = SpectatorPC;
	Parms.NewCameraType = NewCameraType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnCurrentCameraButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnCurrentCameraButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnCurrentCameraButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnFollowedPlayerChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorPC                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 NewFollowedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorHUDControlsBase::OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnFollowedPlayerChanged");

	Params::AthenaSpectatorHUDControlsBase_OnFollowedPlayerChanged Parms{};

	Parms.SpectatorPC = SpectatorPC;
	Parms.NewFollowedPlayer = NewFollowedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnHUDVisibilityButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnHUDVisibilityButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnHUDVisibilityButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnNextPlayerButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnNextPlayerButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnNextPlayerButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnPlayerListButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnPlayerListButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnPlayerListButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnPreviousPlayerButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnPreviousPlayerButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnPreviousPlayerButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorHUDControlsBase.OnViewSettingsButtonClicked
// (Final, Native, Private)

void UAthenaSpectatorHUDControlsBase::OnViewSettingsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorHUDControlsBase", "OnViewSettingsButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListBase.FocusListView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaRemotePlayerViewData*      ItemToFocus                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListBase::FocusListView(class UAthenaRemotePlayerViewData* ItemToFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListBase", "FocusListView");

	Params::AthenaSpectatorPlayerListBase_FocusListView Parms{};

	Parms.ItemToFocus = ItemToFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListBase.SetSortMethod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESpectatorPlayerListSortMethod          InNewSortMethod                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListBase::SetSortMethod(ESpectatorPlayerListSortMethod InNewSortMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListBase", "SetSortMethod");

	Params::AthenaSpectatorPlayerListBase_SetSortMethod Parms{};

	Parms.InNewSortMethod = InNewSortMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.AthenaSpectatorPlayerListBase.SortMethodDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESpectatorPlayerListSortMethod          SortMethodParam                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListBase::SortMethodDelegate__DelegateSignature(ESpectatorPlayerListSortMethod SortMethodParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListBase", "SortMethodDelegate__DelegateSignature");

	Params::AthenaSpectatorPlayerListBase_SortMethodDelegate__DelegateSignature Parms{};

	Parms.SortMethodParam = SortMethodParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.AreAnyHomebaseNodeItemsUnseenForSquadId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemUtilities::AreAnyHomebaseNodeItemsUnseenForSquadId(class AFortPlayerController* FortPC, const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "AreAnyHomebaseNodeItemsUnseenForSquadId");

	Params::FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.AreAnyHomebaseNodeItemsUnseenForSquadType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortHomebaseSquadType                  SquadType                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemUtilities::AreAnyHomebaseNodeItemsUnseenForSquadType(class AFortPlayerController* FortPC, const EFortHomebaseSquadType SquadType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "AreAnyHomebaseNodeItemsUnseenForSquadType");

	Params::FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadType = SquadType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemForSquadSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlot                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHomebaseNodeItem*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHomebaseNodeItem* UFortHomebaseNodeItemUtilities::GetHomebaseNodeItemForSquadSlot(class AFortPlayerController* FortPC, const class FName& SquadId, const int32 SquadSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "GetHomebaseNodeItemForSquadSlot");

	Params::FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadId = SquadId;
	Parms.SquadSlot = SquadSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemForTagContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortHomebaseNodeItem*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHomebaseNodeItem* UFortHomebaseNodeItemUtilities::GetHomebaseNodeItemForTagContainer(class AFortPlayerController* FortPC, const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "GetHomebaseNodeItemForTagContainer");

	Params::FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer Parms{};

	Parms.FortPC = FortPC;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemNameForTagContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortHomebaseNodeItemUtilities::GetHomebaseNodeItemNameForTagContainer(class AFortPlayerController* FortPC, const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "GetHomebaseNodeItemNameForTagContainer");

	Params::FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer Parms{};

	Parms.FortPC = FortPC;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.IsHomebaseNodeItemUnseenForTagContainer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemUtilities::IsHomebaseNodeItemUnseenForTagContainer(class AFortPlayerController* FortPC, const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "IsHomebaseNodeItemUnseenForTagContainer");

	Params::FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer Parms{};

	Parms.FortPC = FortPC;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHomebaseNodeItemUtilities.IsSquadSlotUnseen
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlot                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemUtilities::IsSquadSlotUnseen(class AFortPlayerController* FortPC, const class FName& SquadId, const int32 SquadSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseNodeItemUtilities", "IsSquadSlotUnseen");

	Params::FortHomebaseNodeItemUtilities_IsSquadSlotUnseen Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadId = SquadId;
	Parms.SquadSlot = SquadSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnListItemClicked
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnListItemClicked(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnListItemClicked");

	Params::AthenaSpectatorMapPlayerListBase_OnListItemClicked Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerEliminatedStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsEliminated                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnPlayerEliminatedStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnPlayerEliminatedStateChanged");

	Params::AthenaSpectatorMapPlayerListBase_OnPlayerEliminatedStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsEliminated = bInIsEliminated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerIsInRelevancyChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInIsInRelevancy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnPlayerIsInRelevancyChanged(class UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnPlayerIsInRelevancyChanged");

	Params::AthenaSpectatorMapPlayerListBase_OnPlayerIsInRelevancyChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.bInIsInRelevancy = bInIsInRelevancy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerKillScoreChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InKillScore                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnPlayerKillScoreChanged(class UAthenaRemotePlayerViewData* InPlayerData, int32 InKillScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnPlayerKillScoreChanged");

	Params::AthenaSpectatorMapPlayerListBase_OnPlayerKillScoreChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InKillScore = InKillScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerNameChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnPlayerNameChanged(class UAthenaRemotePlayerViewData* InPlayerData, const class FString& InPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnPlayerNameChanged");

	Params::AthenaSpectatorMapPlayerListBase_OnPlayerNameChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerName = std::move(InPlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerSquadIdChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnPlayerSquadIdChanged(class UAthenaRemotePlayerViewData* InPlayerData, uint8 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnPlayerSquadIdChanged");

	Params::AthenaSpectatorMapPlayerListBase_OnPlayerSquadIdChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InSquadId = InSquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnSortByEliminationsActionExecuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnSortByEliminationsActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnSortByEliminationsActionExecuted");

	Params::AthenaSpectatorMapPlayerListBase_OnSortByEliminationsActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnSortByPlayerNameActionExecuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnSortByPlayerNameActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnSortByPlayerNameActionExecuted");

	Params::AthenaSpectatorMapPlayerListBase_OnSortByPlayerNameActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnSortBySquadIdActionExecuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnSortBySquadIdActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnSortBySquadIdActionExecuted");

	Params::AthenaSpectatorMapPlayerListBase_OnSortBySquadIdActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnSortByStateActionExecuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnSortByStateActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnSortByStateActionExecuted");

	Params::AthenaSpectatorMapPlayerListBase_OnSortByStateActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.OnToggleOnlyShowMapPlayersActionExecuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorMapPlayerListBase::OnToggleOnlyShowMapPlayersActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "OnToggleOnlyShowMapPlayersActionExecuted");

	Params::AthenaSpectatorMapPlayerListBase_OnToggleOnlyShowMapPlayersActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.AthenaSpectatorMapPlayerListBase.GetNextSortMethod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESpectatorPlayerListSortMethod          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESpectatorPlayerListSortMethod UAthenaSpectatorMapPlayerListBase::GetNextSortMethod() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorMapPlayerListBase", "GetNextSortMethod");

	Params::AthenaSpectatorMapPlayerListBase_GetNextSortMethod Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerksWidget_NUI.OnGeneratePerk
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortUIPerk                      FortPerk                                               (Parm, NativeAccessSpecifierPublic)
// class UFortPerkWidget_NUI*              PerkWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerksWidget_NUI::OnGeneratePerk(const struct FFortUIPerk& FortPerk, class UFortPerkWidget_NUI* PerkWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "OnGeneratePerk");

	Params::FortPerksWidget_NUI_OnGeneratePerk Parms{};

	Parms.FortPerk = std::move(FortPerk);
	Parms.PerkWidget = PerkWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPerksWidget_NUI.OnGeneratePerkTier
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortUIPerkTier                  FortPerkTier                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UFortPerkTierWidget_NUI*          PerkTierWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerksWidget_NUI::OnGeneratePerkTier(const struct FFortUIPerkTier& FortPerkTier, class UFortPerkTierWidget_NUI* PerkTierWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "OnGeneratePerkTier");

	Params::FortPerksWidget_NUI_OnGeneratePerkTier Parms{};

	Parms.FortPerkTier = std::move(FortPerkTier);
	Parms.PerkTierWidget = PerkTierWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPerksWidget_NUI.OnHeroChanged
// (Event, Public, BlueprintEvent)

void UFortPerksWidget_NUI::OnHeroChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "OnHeroChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPerksWidget_NUI.OnStateChanged
// (Event, Public, BlueprintEvent)

void UFortPerksWidget_NUI::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPerksWidget_NUI.ProcessActiveAbilityPerksAsync
// (Final, Native, Public, BlueprintCallable)

void UFortPerksWidget_NUI::ProcessActiveAbilityPerksAsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "ProcessActiveAbilityPerksAsync");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerksWidget_NUI.ProcessPerks
// (Final, Native, Public, BlueprintCallable)

void UFortPerksWidget_NUI::ProcessPerks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "ProcessPerks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerksWidget_NUI.ProcessPerkTiers
// (Final, Native, Public, BlueprintCallable)

void UFortPerksWidget_NUI::ProcessPerkTiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "ProcessPerkTiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerksWidget_NUI.SetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortHero*                        InHero                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerksWidget_NUI::SetHero(class UFortHero* InHero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "SetHero");

	Params::FortPerksWidget_NUI_SetHero Parms{};

	Parms.InHero = InHero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerksWidget_NUI.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortPerksWidgetState                   InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHero*                        InEvolutionOption                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerksWidget_NUI::SetState(EFortPerksWidgetState InState, class UFortHero* InEvolutionOption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerksWidget_NUI", "SetState");

	Params::FortPerksWidget_NUI_SetState Parms{};

	Parms.InState = InState;
	Parms.InEvolutionOption = InEvolutionOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnDistanceStateChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAthenaSpectatorNameplateDistanceState  NewDistanceState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnDistanceStateChanged(EAthenaSpectatorNameplateDistanceState NewDistanceState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnDistanceStateChanged");

	Params::AthenaSpectatorNameplateBase_OnDistanceStateChanged Parms{};

	Parms.NewDistanceState = NewDistanceState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnPlayerDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnPlayerDataSet(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnPlayerDataSet");

	Params::AthenaSpectatorNameplateBase_OnPlayerDataSet Parms{};

	Parms.InPlayerData = InPlayerData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnPlayerNameChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnPlayerNameChanged(class UAthenaRemotePlayerViewData* InPlayerData, const class FString& InPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnPlayerNameChanged");

	Params::AthenaSpectatorNameplateBase_OnPlayerNameChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerName = std::move(InPlayerName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnPlayerPawnChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  InPlayerPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnPlayerPawnChanged(class UAthenaRemotePlayerViewData* InPlayerData, class AFortPlayerPawn* InPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnPlayerPawnChanged");

	Params::AthenaSpectatorNameplateBase_OnPlayerPawnChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InPlayerPawn = InPlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InSquadId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnSquadIdChanged(class UAthenaRemotePlayerViewData* InPlayerData, uint8 InSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnSquadIdChanged");

	Params::AthenaSpectatorNameplateBase_OnSquadIdChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InSquadId = InSquadId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnTeamColorChanged
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     InTeamColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnTeamColorChanged(class UAthenaRemotePlayerViewData* InPlayerData, const struct FLinearColor& InTeamColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnTeamColorChanged");

	Params::AthenaSpectatorNameplateBase_OnTeamColorChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InTeamColor = std::move(InTeamColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnVehicleStateChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InNewVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InOldVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnVehicleStateChanged(class UAthenaRemotePlayerViewData* InPlayerData, class AFortAthenaVehicle* InNewVehicle, class AFortAthenaVehicle* InOldVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnVehicleStateChanged");

	Params::AthenaSpectatorNameplateBase_OnVehicleStateChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InNewVehicle = InNewVehicle;
	Parms.InOldVehicle = InOldVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnVehicleStateChanged_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InNewVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               InOldVehicle                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnVehicleStateChanged_BP(class UAthenaRemotePlayerViewData* InPlayerData, class AFortAthenaVehicle* InNewVehicle, class AFortAthenaVehicle* InOldVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnVehicleStateChanged_BP");

	Params::AthenaSpectatorNameplateBase_OnVehicleStateChanged_BP Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InNewVehicle = InNewVehicle;
	Parms.InOldVehicle = InOldVehicle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateBase.OnWeaponChanged
// (Final, Native, Private)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      InNewWeapon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateBase::OnWeaponChanged(class UAthenaRemotePlayerViewData* InPlayerData, class AFortWeapon* InNewWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateBase", "OnWeaponChanged");

	Params::AthenaSpectatorNameplateBase_OnWeaponChanged Parms{};

	Parms.InPlayerData = InPlayerData;
	Parms.InNewWeapon = InNewWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateLayerBase.AddNameplate
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaSpectatorNameplateBase*    NameplateWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateLayerBase::AddNameplate(class UAthenaSpectatorNameplateBase* NameplateWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateLayerBase", "AddNameplate");

	Params::AthenaSpectatorNameplateLayerBase_AddNameplate Parms{};

	Parms.NameplateWidget = NameplateWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaSpectatorNameplateLayerBase.OnNameplatesViewDistanceChanged
// (Final, Native, Private)
// Parameters:
// float                                   NewDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateLayerBase::OnNameplatesViewDistanceChanged(float NewDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateLayerBase", "OnNameplatesViewDistanceChanged");

	Params::AthenaSpectatorNameplateLayerBase_OnNameplatesViewDistanceChanged Parms{};

	Parms.NewDistance = NewDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateLayerBase.OnPlayerDataAdded
// (Final, Native, Public)
// Parameters:
// class UAthenaRemotePlayerViewData*      InPlayerData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateLayerBase::OnPlayerDataAdded(class UAthenaRemotePlayerViewData* InPlayerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateLayerBase", "OnPlayerDataAdded");

	Params::AthenaSpectatorNameplateLayerBase_OnPlayerDataAdded Parms{};

	Parms.InPlayerData = InPlayerData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorNameplateLayerBase.RemoveNameplate
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAthenaSpectatorNameplateBase*    NameplateWidget                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorNameplateLayerBase::RemoveNameplate(class UAthenaSpectatorNameplateBase* NameplateWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorNameplateLayerBase", "RemoveNameplate");

	Params::AthenaSpectatorNameplateLayerBase_RemoveNameplate Parms{};

	Parms.NameplateWidget = NameplateWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRewardNotificationData.GetIconBrush
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      IconBrush                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardNotificationData::GetIconBrush(struct FSlateBrush* IconBrush, EFortBrushSize BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationData", "GetIconBrush");

	Params::FortRewardNotificationData_GetIconBrush Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IconBrush != nullptr)
		*IconBrush = std::move(Parms.IconBrush);

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.ClearPlayers
// (Final, Native, Private)

void UAthenaSpectatorPlayerListScreenBase::ClearPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "ClearPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.OnFollowedPlayerChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerControllerSpectating*  SpectatorPC                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 NewFollowedPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListScreenBase::OnFollowedPlayerChanged(class AFortPlayerControllerSpectating* SpectatorPC, class AFortPlayerState* NewFollowedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "OnFollowedPlayerChanged");

	Params::AthenaSpectatorPlayerListScreenBase_OnFollowedPlayerChanged Parms{};

	Parms.SpectatorPC = SpectatorPC;
	Parms.NewFollowedPlayer = NewFollowedPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerBecameIrrelevant
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 NewlyIrrelevantPlayer                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListScreenBase::OnPlayerBecameIrrelevant(class AFortPlayerState* NewlyIrrelevantPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "OnPlayerBecameIrrelevant");

	Params::AthenaSpectatorPlayerListScreenBase_OnPlayerBecameIrrelevant Parms{};

	Parms.NewlyIrrelevantPlayer = NewlyIrrelevantPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerBecameRelevant
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 NewlyRelevantPlayer                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListScreenBase::OnPlayerBecameRelevant(class AFortPlayerState* NewlyRelevantPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "OnPlayerBecameRelevant");

	Params::AthenaSpectatorPlayerListScreenBase_OnPlayerBecameRelevant Parms{};

	Parms.NewlyRelevantPlayer = NewlyRelevantPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerDied
// (Final, Native, Private)
// Parameters:
// class AFortPlayerState*                 NewlyDeadPlayer                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSpectatorPlayerListScreenBase::OnPlayerDied(class AFortPlayerState* NewlyDeadPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "OnPlayerDied");

	Params::AthenaSpectatorPlayerListScreenBase_OnPlayerDied Parms{};

	Parms.NewlyDeadPlayer = NewlyDeadPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaSpectatorPlayerListScreenBase.UpdateListUI
// (Event, Protected, BlueprintEvent)

void UAthenaSpectatorPlayerListScreenBase::UpdateListUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSpectatorPlayerListScreenBase", "UpdateListUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaSquadListBase.HandleSquadMemberDisconnected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaSquadListBase::HandleSquadMemberDisconnected(const class AFortPlayerStateAthena* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaSquadListBase", "HandleSquadMemberDisconnected");

	Params::AthenaSquadListBase_HandleSquadMemberDisconnected Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaStatsScreenBase.GetTimespanAsString
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        Timespan                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaStatsScreenBase::GetTimespanAsString(const struct FTimespan& Timespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AthenaStatsScreenBase", "GetTimespanAsString");

	Params::AthenaStatsScreenBase_GetTimespanAsString Parms{};

	Parms.Timespan = std::move(Timespan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.FormatStatValueAsElapsedTime
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        ValueAsTimespan                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaStatsScreenBase::FormatStatValueAsElapsedTime(const struct FTimespan& ValueAsTimespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "FormatStatValueAsElapsedTime");

	Params::AthenaStatsScreenBase_FormatStatValueAsElapsedTime Parms{};

	Parms.ValueAsTimespan = std::move(ValueAsTimespan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.GetLastUpdateTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UAthenaStatsScreenBase::GetLastUpdateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetLastUpdateTime");

	Params::AthenaStatsScreenBase_GetLastUpdateTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.GetStatValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           BaseGameplayTag                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaStatsScreenBase::GetStatValue(const class FString& BaseGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetStatValue");

	Params::AthenaStatsScreenBase_GetStatValue Parms{};

	Parms.BaseGameplayTag = std::move(BaseGameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.OnQueryFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStatsScreenBase::OnQueryFinished(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "OnQueryFinished");

	Params::AthenaStatsScreenBase_OnQueryFinished Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaStatsScreenBase.OnQueryStarted
// (Event, Public, BlueprintEvent)

void UAthenaStatsScreenBase::OnQueryStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "OnQueryStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaStatsScreenBase.OnTabSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStatsScreenBase::OnTabSelected(class FName TabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "OnTabSelected");

	Params::AthenaStatsScreenBase_OnTabSelected Parms{};

	Parms.TabName = TabName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaStatsScreenBase.GetSecondTierPlaceTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaStatsScreenBase::GetSecondTierPlaceTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetSecondTierPlaceTag");

	Params::AthenaStatsScreenBase_GetSecondTierPlaceTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.GetStatGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           BaseStatName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaStatsScreenBase::GetStatGameplayTag(const class FString& BaseStatName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetStatGameplayTag");

	Params::AthenaStatsScreenBase_GetStatGameplayTag Parms{};

	Parms.BaseStatName = std::move(BaseStatName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.GetThirdTierPlaceTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaStatsScreenBase::GetThirdTierPlaceTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetThirdTierPlaceTag");

	Params::AthenaStatsScreenBase_GetThirdTierPlaceTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaStatsScreenBase.GetWinsTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UAthenaStatsScreenBase::GetWinsTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStatsScreenBase", "GetWinsTag");

	Params::AthenaStatsScreenBase_GetWinsTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemTransform.OnRequestCloseItemPicker
// (Event, Public, BlueprintEvent)

void UFortItemTransform::OnRequestCloseItemPicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTransform", "OnRequestCloseItemPicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemTransform.ProcessPendingSeenTransformKeys
// (Final, Native, Private, BlueprintCallable)

void UFortItemTransform::ProcessPendingSeenTransformKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTransform", "ProcessPendingSeenTransformKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTransform.LogSelectedKey
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortItem*                        SelectedKey                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemTransform::LogSelectedKey(const class UFortItem* SelectedKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTransform", "LogSelectedKey");

	Params::FortItemTransform_LogSelectedKey Parms{};

	Parms.SelectedKey = SelectedKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaStormSurgeWarningBase.OnStartDisplaying
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             SubTitleText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bDisplaySubtitle                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayDamageActiveSound                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStormSurgeWarningBase::OnStartDisplaying(const class FText& TitleText, const class FText& SubTitleText, bool bDisplaySubtitle, bool bPlayDamageActiveSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWarningBase", "OnStartDisplaying");

	Params::AthenaStormSurgeWarningBase_OnStartDisplaying Parms{};

	Parms.TitleText = std::move(TitleText);
	Parms.SubTitleText = std::move(SubTitleText);
	Parms.bDisplaySubtitle = bDisplaySubtitle;
	Parms.bPlayDamageActiveSound = bPlayDamageActiveSound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaStormSurgeWarningBase.OnStopDisplaying
// (Event, Protected, BlueprintEvent)

void UAthenaStormSurgeWarningBase::OnStopDisplaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWarningBase", "OnStopDisplaying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaStormSurgeWarningBase.OnStormCapStateChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaStormCapState                    StormCapState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaStormSurgeWarningBase::OnStormCapStateChanged(EAthenaStormCapState StormCapState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaStormSurgeWarningBase", "OnStormCapStateChanged");

	Params::AthenaStormSurgeWarningBase_OnStormCapStateChanged Parms{};

	Parms.StormCapState = StormCapState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTeamAliveCountBase.SetTeamSlotData
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   TeamIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaTeamCountSlotData         TeamSlotData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaTeamAliveCountBase::SetTeamSlotData(int32 TeamIdx, const struct FAthenaTeamCountSlotData& TeamSlotData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamAliveCountBase", "SetTeamSlotData");

	Params::AthenaTeamAliveCountBase_SetTeamSlotData Parms{};

	Parms.TeamIdx = TeamIdx;
	Parms.TeamSlotData = std::move(TeamSlotData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPartySuggestionButton.HandleLobbyStarted
// (Final, Native, Private)

void UFortPartySuggestionButton::HandleLobbyStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "HandleLobbyStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPartySuggestionButton.HandleSuggestionAccepted
// (Final, Native, Private)
// Parameters:
// int32                                   PlayerID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartySuggestionButton::HandleSuggestionAccepted(int32 PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "HandleSuggestionAccepted");

	Params::FortPartySuggestionButton_HandleSuggestionAccepted Parms{};

	Parms.PlayerID = PlayerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPartySuggestionButton.OnDismissSuggestion
// (Event, Protected, BlueprintEvent)

void UFortPartySuggestionButton::OnDismissSuggestion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "OnDismissSuggestion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPartySuggestionButton.OnDisplayInfoUpdated
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FDateTime                        LFGTime                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsInvited                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPlaying                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartySuggestionButton::OnDisplayInfoUpdated(const struct FDateTime& LFGTime, bool bIsInvited, bool bIsPlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "OnDisplayInfoUpdated");

	Params::FortPartySuggestionButton_OnDisplayInfoUpdated Parms{};

	Parms.LFGTime = std::move(LFGTime);
	Parms.bIsInvited = bIsInvited;
	Parms.bIsPlaying = bIsPlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPartySuggestionButton.OnNewSuggestionAdded
// (Event, Protected, BlueprintEvent)

void UFortPartySuggestionButton::OnNewSuggestionAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "OnNewSuggestionAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPartySuggestionButton.OnSuggestionAccepted
// (Event, Protected, BlueprintEvent)

void UFortPartySuggestionButton::OnSuggestionAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "OnSuggestionAccepted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPartySuggestionButton.UpdateDisplayInfo
// (Final, Native, Public, BlueprintCallable)

void UFortPartySuggestionButton::UpdateDisplayInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartySuggestionButton", "UpdateDisplayInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.ItemReceivedHeaderBase.InitFromGiftBoxItem
// (Event, Protected, BlueprintEvent)

void UItemReceivedHeaderBase::InitFromGiftBoxItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemReceivedHeaderBase", "InitFromGiftBoxItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRelativeAnchorCanvasSlot.SetAnchorWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          NewAnchorWidget                                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRelativeAnchorCanvasSlot::SetAnchorWidget(const class UWidget* NewAnchorWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRelativeAnchorCanvasSlot", "SetAnchorWidget");

	Params::FortRelativeAnchorCanvasSlot_SetAnchorWidget Parms{};

	Parms.NewAnchorWidget = NewAnchorWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.HandleScoreChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamScoreWidgetBase::HandleScoreChanged(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "HandleScoreChanged");

	Params::AthenaTeamScoreWidgetBase_HandleScoreChanged Parms{};

	Parms.Score = Score;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.HandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamScoreWidgetBase::HandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "HandleSpectatingChanged");

	Params::AthenaTeamScoreWidgetBase_HandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.HandleUpdate
// (Final, Native, Protected)

void UAthenaTeamScoreWidgetBase::HandleUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "HandleUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.OnLeaderboardChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ScoreDelta                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsWinner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasScore                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamScoreWidgetBase::OnLeaderboardChanged(int32 ScoreDelta, bool bIsWinner, bool bHasScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "OnLeaderboardChanged");

	Params::AthenaTeamScoreWidgetBase_OnLeaderboardChanged Parms{};

	Parms.ScoreDelta = ScoreDelta;
	Parms.bIsWinner = bIsWinner;
	Parms.bHasScore = bHasScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.OnPlacementChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Placement                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamScoreWidgetBase::OnPlacementChanged(int32 Placement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "OnPlacementChanged");

	Params::AthenaTeamScoreWidgetBase_OnPlacementChanged Parms{};

	Parms.Placement = Placement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTeamScoreWidgetBase.OnScoreChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTeamScoreWidgetBase::OnScoreChanged(int32 Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTeamScoreWidgetBase", "OnScoreChanged");

	Params::AthenaTeamScoreWidgetBase_OnScoreChanged Parms{};

	Parms.Score = Score;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_Frontend.AttemptToOpenBattlePassTabForNewSeason
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateWidget_Frontend::AttemptToOpenBattlePassTabForNewSeason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "AttemptToOpenBattlePassTabForNewSeason");

	Params::FortUIStateWidget_Frontend_AttemptToOpenBattlePassTabForNewSeason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_Frontend.CheckBanStatus
// (Final, Native, Protected)
// Parameters:
// bool                                    bBanned                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Frontend::CheckBanStatus(bool bBanned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "CheckBanStatus");

	Params::FortUIStateWidget_Frontend_CheckBanStatus Parms{};

	Parms.bBanned = bBanned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.CheckForGifts
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateWidget_Frontend::CheckForGifts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "CheckForGifts");

	Params::FortUIStateWidget_Frontend_CheckForGifts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_Frontend.HandleGiftBoxRemoved
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Frontend::HandleGiftBoxRemoved(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "HandleGiftBoxRemoved");

	Params::FortUIStateWidget_Frontend_HandleGiftBoxRemoved Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.HandleGiftingComplete
// (Final, Native, Protected)

void UFortUIStateWidget_Frontend::HandleGiftingComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "HandleGiftingComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.MarkTrailerMovieSeen
// (Final, Native, Protected, BlueprintCallable)

void UFortUIStateWidget_Frontend::MarkTrailerMovieSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "MarkTrailerMovieSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.MarkTrailerMovieSeenByIndex
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   IndexOfMovieToMarkSeen                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Frontend::MarkTrailerMovieSeenByIndex(int32 IndexOfMovieToMarkSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "MarkTrailerMovieSeenByIndex");

	Params::FortUIStateWidget_Frontend_MarkTrailerMovieSeenByIndex Parms{};

	Parms.IndexOfMovieToMarkSeen = IndexOfMovieToMarkSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.OnMatchmakingV2Changed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    MatchmakingActive                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Frontend::OnMatchmakingV2Changed(bool MatchmakingActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "OnMatchmakingV2Changed");

	Params::FortUIStateWidget_Frontend_OnMatchmakingV2Changed Parms{};

	Parms.MatchmakingActive = MatchmakingActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIStateWidget_Frontend.TryMFAModal
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TSubclassOf<class UEnableMultiFactorModal>BPClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Frontend::TryMFAModal(TSubclassOf<class UEnableMultiFactorModal> BPClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "TryMFAModal");

	Params::FortUIStateWidget_Frontend_TryMFAModal Parms{};

	Parms.BPClass = BPClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Frontend.GetTrailerMovieIndexThatNeedsToBeShownForQuest
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// int32                                   IndexOfMovieToShow                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateWidget_Frontend::GetTrailerMovieIndexThatNeedsToBeShownForQuest(int32* IndexOfMovieToShow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "GetTrailerMovieIndexThatNeedsToBeShownForQuest");

	Params::FortUIStateWidget_Frontend_GetTrailerMovieIndexThatNeedsToBeShownForQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IndexOfMovieToShow != nullptr)
		*IndexOfMovieToShow = Parms.IndexOfMovieToShow;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_Frontend.NeedSeeTrailerMovie
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateWidget_Frontend::NeedSeeTrailerMovie() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Frontend", "NeedSeeTrailerMovie");

	Params::FortUIStateWidget_Frontend_NeedSeeTrailerMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaTimeWidgetBase.HandleGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTimeWidgetBase::HandleGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "HandleGamePhaseChanged");

	Params::AthenaTimeWidgetBase_HandleGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTimeWidgetBase.OnGamePhaseStepChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhaseStep                    GamePhaseStep                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTimeWidgetBase::OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "OnGamePhaseStepChanged");

	Params::AthenaTimeWidgetBase_OnGamePhaseStepChanged Parms{};

	Parms.GamePhaseStep = GamePhaseStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTimeWidgetBase.OnStartTimeDisplay
// (Event, Protected, BlueprintEvent)

void UAthenaTimeWidgetBase::OnStartTimeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "OnStartTimeDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTimeWidgetBase.OnStopTimeDisplay
// (Event, Protected, BlueprintEvent)

void UAthenaTimeWidgetBase::OnStopTimeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "OnStopTimeDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTimeWidgetBase.StartTimeDisplay
// (Final, Native, Protected)

void UAthenaTimeWidgetBase::StartTimeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "StartTimeDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTimeWidgetBase.StopTimeDisplay
// (Final, Native, Protected)

void UAthenaTimeWidgetBase::StopTimeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "StopTimeDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTimeWidgetBase.UpdateTimeText
// (Final, Native, Protected)

void UAthenaTimeWidgetBase::UpdateTimeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTimeWidgetBase", "UpdateTimeText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTrickFeedBase.AddTrick
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TrickName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaTrickFeedBase::AddTrick(const class FText& TrickName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "AddTrick");

	Params::AthenaTrickFeedBase_AddTrick Parms{};

	Parms.TrickName = std::move(TrickName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTrickFeedBase.BindToModel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerViewModel*           ViewModel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTrickFeedBase::BindToModel(class UAthenaPlayerViewModel* ViewModel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "BindToModel");

	Params::AthenaTrickFeedBase_BindToModel Parms{};

	Parms.ViewModel = ViewModel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTrickFeedBase.RequestNextSequence
// (Final, Native, Protected, BlueprintCallable)

void UAthenaTrickFeedBase::RequestNextSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "RequestNextSequence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.AthenaTrickFeedBase.TrickSequenceCanceled
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaTrickFeedBase::TrickSequenceCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "TrickSequenceCanceled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTrickFeedBase.TrickSequenceComplete
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaTrickFeedBase::TrickSequenceComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "TrickSequenceComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTrickFeedBase.TrickSequenceFailed
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaTrickFeedBase::TrickSequenceFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "TrickSequenceFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTrickFeedBase.TrickSequenceStarted
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UAthenaTrickFeedBase::TrickSequenceStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "TrickSequenceStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.AthenaTrickFeedBase.UpdateMultiplier
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTrickFeedBase::UpdateMultiplier(int32 Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "UpdateMultiplier");

	Params::AthenaTrickFeedBase_UpdateMultiplier Parms{};

	Parms.Multiplier = Multiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTrickFeedBase.UpdateScore
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortVehicleTrickSet*             TrickSet                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaTrickFeedBase::UpdateScore(class UFortVehicleTrickSet* TrickSet, int32 TotalScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "UpdateScore");

	Params::AthenaTrickFeedBase_UpdateScore Parms{};

	Parms.TrickSet = TrickSet;
	Parms.TotalScore = TotalScore;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.AthenaTrickFeedBase.UpdateTrickStats
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             StatsText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaTrickFeedBase::UpdateTrickStats(const class FText& StatsText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaTrickFeedBase", "UpdateTrickStats");

	Params::AthenaTrickFeedBase_UpdateTrickStats Parms{};

	Parms.StatsText = std::move(StatsText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.CancelInventoryPanelTileViewRefresh
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementScreen::CancelInventoryPanelTileViewRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "CancelInventoryPanelTileViewRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.CanRequestPopupMenuForSelectedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen::CanRequestPopupMenuForSelectedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "CanRequestPopupMenuForSelectedItem");

	Params::FortItemManagementScreen_CanRequestPopupMenuForSelectedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.ConsumeItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConsumableAccountItem*       ConsumableItem                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::ConsumeItem(class UFortConsumableAccountItem* ConsumableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "ConsumeItem");

	Params::FortItemManagementScreen_ConsumeItem Parms{};

	Parms.ConsumableItem = ConsumableItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.CraftAndSlotItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::CraftAndSlotItem(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "CraftAndSlotItem");

	Params::FortItemManagementScreen_CraftAndSlotItem Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.CraftItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::CraftItem(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "CraftItem");

	Params::FortItemManagementScreen_CraftItem Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::CycleSortType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "CycleSortType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.DropItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::DropItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "DropItem");

	Params::FortItemManagementScreen_DropItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.EnterComparisonMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToCompareDetailsWith                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::EnterComparisonMode(class UFortItem* ItemToCompareDetailsWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "EnterComparisonMode");

	Params::FortItemManagementScreen_EnterComparisonMode Parms{};

	Parms.ItemToCompareDetailsWith = ItemToCompareDetailsWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.EnterDetailsMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToDetail                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::EnterDetailsMode(class UFortItem* Param_ItemToDetail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "EnterDetailsMode");

	Params::FortItemManagementScreen_EnterDetailsMode Parms{};

	Parms.Param_ItemToDetail = Param_ItemToDetail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.EnterMulchMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToMulch                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::EnterMulchMode(class UFortItem* ItemToMulch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "EnterMulchMode");

	Params::FortItemManagementScreen_EnterMulchMode Parms{};

	Parms.ItemToMulch = ItemToMulch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.EquipItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::EquipItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "EquipItem");

	Params::FortItemManagementScreen_EquipItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.HandleConsumeItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortConsumableAccountItem*       ConsumableItem                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleConsumeItemBP(class UFortConsumableAccountItem* ConsumableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleConsumeItemBP");

	Params::FortItemManagementScreen_HandleConsumeItemBP Parms{};

	Parms.ConsumableItem = ConsumableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleCraftAndSlotItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleCraftAndSlotItemBP(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleCraftAndSlotItemBP");

	Params::FortItemManagementScreen_HandleCraftAndSlotItemBP Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleCraftItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemTier                           RequestedTier                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CraftCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleCraftItemBP(class UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32 CraftCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleCraftItemBP");

	Params::FortItemManagementScreen_HandleCraftItemBP Parms{};

	Parms.SchematicItem = SchematicItem;
	Parms.RequestedTier = RequestedTier;
	Parms.CraftCount = CraftCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleDifferentItemManagementModeSetBP
// (Event, Public, BlueprintEvent)

void UFortItemManagementScreen::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementScreen.HandleDropItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleDropItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleDropItemBP");

	Params::FortItemManagementScreen_HandleDropItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleEquipItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleEquipItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleEquipItemBP");

	Params::FortItemManagementScreen_HandleEquipItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleInspectItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleInspectItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleInspectItemBP");

	Params::FortItemManagementScreen_HandleInspectItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleItemToCompareWithChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleItemToCompareWithChanged");

	Params::FortItemManagementScreen_HandleItemToCompareWithChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.HandleItemToDetailChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleItemToDetailChanged");

	Params::FortItemManagementScreen_HandleItemToDetailChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.HandleMulchQuantitySelection
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleMulchQuantitySelection(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleMulchQuantitySelection");

	Params::FortItemManagementScreen_HandleMulchQuantitySelection Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleOpenCraftingOptionsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleOpenCraftingOptionsBP(class UFortSchematicItem* SchematicItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleOpenCraftingOptionsBP");

	Params::FortItemManagementScreen_HandleOpenCraftingOptionsBP Parms{};

	Parms.SchematicItem = SchematicItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HandleTransferItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::HandleTransferItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HandleTransferItemBP");

	Params::FortItemManagementScreen_HandleTransferItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementScreen.HideCustomFilterModal
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::HideCustomFilterModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HideCustomFilterModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortItemManagementScreen::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HideMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.InspectItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::InspectItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "InspectItem");

	Params::FortItemManagementScreen_InspectItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.MarkAllItemsAsSeen
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::MarkAllItemsAsSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "MarkAllItemsAsSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortItemManagementScreen::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "NotifyPanelActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortItemManagementScreen::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "NotifyPanelDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.OpenCraftingOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSchematicItem*               SchematicItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::OpenCraftingOptions(class UFortSchematicItem* SchematicItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "OpenCraftingOptions");

	Params::FortItemManagementScreen_OpenCraftingOptions Parms{};

	Parms.SchematicItem = SchematicItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.RequestPopupMenuForSelectedItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::RequestPopupMenuForSelectedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "RequestPopupMenuForSelectedItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.SetConsumeItemRequestInProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InProgress                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::SetConsumeItemRequestInProgress(bool InProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "SetConsumeItemRequestInProgress");

	Params::FortItemManagementScreen_SetConsumeItemRequestInProgress Parms{};

	Parms.InProgress = InProgress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.SetFrontendInventoryFilter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontendInventoryFilter            Param_FrontendInventoryFilter                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::SetFrontendInventoryFilter(EFortFrontendInventoryFilter Param_FrontendInventoryFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "SetFrontendInventoryFilter");

	Params::FortItemManagementScreen_SetFrontendInventoryFilter Parms{};

	Parms.Param_FrontendInventoryFilter = Param_FrontendInventoryFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.ShowCustomFilterModal
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::ShowCustomFilterModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "ShowCustomFilterModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortItemManagementScreen::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "ShowMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.ToggleShowCollectionBookIndicator
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::ToggleShowCollectionBookIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "ToggleShowCollectionBookIndicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.ToggleShowRefundIndicator
// (Final, Native, Public, BlueprintCallable)

void UFortItemManagementScreen::ToggleShowRefundIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "ToggleShowRefundIndicator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.TransferItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementScreen::TransferItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "TransferItem");

	Params::FortItemManagementScreen_TransferItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementScreen.GetItemToCompareDetailsWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemManagementScreen::GetItemToCompareDetailsWith() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "GetItemToCompareDetailsWith");

	Params::FortItemManagementScreen_GetItemToCompareDetailsWith Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.GetItemToDetail
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemManagementScreen::GetItemToDetail() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "GetItemToDetail");

	Params::FortItemManagementScreen_GetItemToDetail Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.GetShouldShowCollectionBookIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen::GetShouldShowCollectionBookIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "GetShouldShowCollectionBookIndicator");

	Params::FortItemManagementScreen_GetShouldShowCollectionBookIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.GetShouldShowRefundIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen::GetShouldShowRefundIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "GetShouldShowRefundIndicator");

	Params::FortItemManagementScreen_GetShouldShowRefundIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.HasItemBeenSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 AccountItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen::HasItemBeenSeen(class UFortAccountItem* AccountItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "HasItemBeenSeen");

	Params::FortItemManagementScreen_HasItemBeenSeen Parms{};

	Parms.AccountItem = AccountItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementScreen.IsScreenWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementScreen::IsScreenWIFE() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementScreen", "IsScreenWIFE");

	Params::FortItemManagementScreen_IsScreenWIFE Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.AthenaWinnersList.OnWinnersAnnounced
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FAthenaWinnerInfo                WinnerInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UAthenaWinnersList::OnWinnersAnnounced(const struct FAthenaWinnerInfo& WinnerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaWinnersList", "OnWinnersAnnounced");

	Params::AthenaWinnersList_OnWinnersAnnounced Parms{};

	Parms.WinnerInfo = std::move(WinnerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.GetVoteTimeRemaining
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionVoteHUDElementWidget::GetVoteTimeRemaining(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "GetVoteTimeRemaining");

	Params::FortMissionVoteHUDElementWidget_GetVoteTimeRemaining Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.HandleDifficultyIncreaseVoteUpdate
// (Final, Native, Private, HasOutParams)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteStatus                         VoteStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   Voters                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::HandleDifficultyIncreaseVoteUpdate(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32 VoteResult, const TArray<struct FVoter>& Voters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "HandleDifficultyIncreaseVoteUpdate");

	Params::FortMissionVoteHUDElementWidget_HandleDifficultyIncreaseVoteUpdate Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteStatus = VoteStatus;
	Parms.VoteResult = VoteResult;
	Parms.Voters = std::move(Voters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.HandleMissionActivationVoteUpdate
// (Final, Native, Private, HasOutParams)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteStatus                         VoteStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   Voters                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::HandleMissionActivationVoteUpdate(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32 VoteResult, const TArray<struct FVoter>& Voters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "HandleMissionActivationVoteUpdate");

	Params::FortMissionVoteHUDElementWidget_HandleMissionActivationVoteUpdate Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteStatus = VoteStatus;
	Parms.VoteResult = VoteResult;
	Parms.Voters = std::move(Voters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.HasLocalPlayerVoted
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionVoteHUDElementWidget::HasLocalPlayerVoted(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "HasLocalPlayerVoted");

	Params::FortMissionVoteHUDElementWidget_HasLocalPlayerVoted Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.IsMultiplayerVote
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionVoteHUDElementWidget::IsMultiplayerVote(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "IsMultiplayerVote");

	Params::FortMissionVoteHUDElementWidget_IsMultiplayerVote Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.OnVoteEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ArbitratorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    VoteSucceeded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::OnVoteEnded(EFortVoteType VoteType, EFortVoteArbitratorType ArbitratorType, bool VoteSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "OnVoteEnded");

	Params::FortMissionVoteHUDElementWidget_OnVoteEnded Parms{};

	Parms.VoteType = VoteType;
	Parms.ArbitratorType = ArbitratorType;
	Parms.VoteSucceeded = VoteSucceeded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.OnVoteStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ArbitratorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   YesVoteCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NoVoteCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::OnVoteStarted(EFortVoteType VoteType, EFortVoteArbitratorType ArbitratorType, int32 YesVoteCount, int32 NoVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "OnVoteStarted");

	Params::FortMissionVoteHUDElementWidget_OnVoteStarted Parms{};

	Parms.VoteType = VoteType;
	Parms.ArbitratorType = ArbitratorType;
	Parms.YesVoteCount = YesVoteCount;
	Parms.NoVoteCount = NoVoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.OnVoteUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   YesVoteCount                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NoVoteCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::OnVoteUpdated(EFortVoteType VoteType, int32 YesVoteCount, int32 NoVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "OnVoteUpdated");

	Params::FortMissionVoteHUDElementWidget_OnVoteUpdated Parms{};

	Parms.VoteType = VoteType;
	Parms.YesVoteCount = YesVoteCount;
	Parms.NoVoteCount = NoVoteCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionVoteHUDElementWidget.RegisterFailsafeForVoteType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionVoteHUDElementWidget::RegisterFailsafeForVoteType(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionVoteHUDElementWidget", "RegisterFailsafeForVoteType");

	Params::FortMissionVoteHUDElementWidget_RegisterFailsafeForVoteType Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusQuickbar.Refresh
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UBacchusQuickbar::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusQuickbar", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusSignalQualityWidget.OnNewSignalQuality
// (Final, Native, Protected)
// Parameters:
// float                                   NewRawQuality                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusSignalQualityWidget::OnNewSignalQuality(float NewRawQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusSignalQualityWidget", "OnNewSignalQuality");

	Params::BacchusSignalQualityWidget_OnNewSignalQuality Parms{};

	Parms.NewRawQuality = NewRawQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.BacchusSignalQualityWidget.SetNewSignalQuality
// (Event, Protected, BlueprintEvent)
// Parameters:
// EBacchusSignalQuality                   NewSignalQuality                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBacchusSignalQualityWidget::SetNewSignalQuality(EBacchusSignalQuality NewSignalQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BacchusSignalQualityWidget", "SetNewSignalQuality");

	Params::BacchusSignalQualityWidget_SetNewSignalQuality Parms{};

	Parms.NewSignalQuality = NewSignalQuality;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemDisplayNameText.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDisplayNameText::SetItemToRepresent(class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDisplayNameText", "SetItemToRepresent");

	Params::FortItemDisplayNameText_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CommonTagVisibilityWidget.HandleOnHUDElementVisibilityChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTagContainer            HiddenHUDElementTags                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UCommonTagVisibilityWidget::HandleOnHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenHUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonTagVisibilityWidget", "HandleOnHUDElementVisibilityChanged");

	Params::CommonTagVisibilityWidget_HandleOnHUDElementVisibilityChanged Parms{};

	Parms.HiddenHUDElementTags = std::move(HiddenHUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CommonTagVisibilityWidget.HandleOnHUDResetToDefaults
// (Final, Native, Protected)

void UCommonTagVisibilityWidget::HandleOnHUDResetToDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonTagVisibilityWidget", "HandleOnHUDResetToDefaults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CommonTagVisibilityWidget.Initialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*                     OwningLocalPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                OwningPlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonTagVisibilityWidget::Initialize(class ULocalPlayer* OwningLocalPlayer, class APlayerController* OwningPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonTagVisibilityWidget", "Initialize");

	Params::CommonTagVisibilityWidget_Initialize Parms{};

	Parms.OwningLocalPlayer = OwningLocalPlayer;
	Parms.OwningPlayerController = OwningPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CommonTagVisibilityWidget.OnVisibilitySetEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCommonTagVisibilityWidget::OnVisibilitySetEvent(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CommonTagVisibilityWidget", "OnVisibilitySetEvent");

	Params::CommonTagVisibilityWidget_OnVisibilitySetEvent Parms{};

	Parms.InVisibility = InVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageDefenderSquadDetailsLocked.SetDefenderSquadInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetailsLocked::SetDefenderSquadInfo(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSquadDetailsLocked", "SetDefenderSquadInfo");

	Params::FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativePerformanceHUDBase.HandleVolumeStateChanged
// (Final, Native, Protected)
// Parameters:
// EVolumeState                            NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativePerformanceHUDBase::HandleVolumeStateChanged(EVolumeState NewState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "HandleVolumeStateChanged");

	Params::CreativePerformanceHUDBase_HandleVolumeStateChanged Parms{};

	Parms.NewState = NewState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativePerformanceHUDBase.HideUIMetrics
// (Event, Protected, BlueprintEvent)

void UCreativePerformanceHUDBase::HideUIMetrics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "HideUIMetrics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.CreativePerformanceHUDBase.OnClientEnterVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativePerformanceHUDBase::OnClientEnterVolume(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "OnClientEnterVolume");

	Params::CreativePerformanceHUDBase_OnClientEnterVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativePerformanceHUDBase.OnClientExitVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      Volume                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCreativePerformanceHUDBase::OnClientExitVolume(class APlayerState* ClientState, class AFortVolume* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "OnClientExitVolume");

	Params::CreativePerformanceHUDBase_OnClientExitVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativePerformanceHUDBase.OnPerformanceMetricsUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FVolumePerformanceMetrics        VolumePerformanceMetrics                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UCreativePerformanceHUDBase::OnPerformanceMetricsUpdated(const struct FVolumePerformanceMetrics& VolumePerformanceMetrics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "OnPerformanceMetricsUpdated");

	Params::CreativePerformanceHUDBase_OnPerformanceMetricsUpdated Parms{};

	Parms.VolumePerformanceMetrics = std::move(VolumePerformanceMetrics);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.CreativePerformanceHUDBase.SetUIMetrics
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVolumePerformanceMetrics        VolumePerformanceMetrics                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UCreativePerformanceHUDBase::SetUIMetrics(const struct FVolumePerformanceMetrics& VolumePerformanceMetrics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CreativePerformanceHUDBase", "SetUIMetrics");

	Params::CreativePerformanceHUDBase_SetUIMetrics Parms{};

	Parms.VolumePerformanceMetrics = std::move(VolumePerformanceMetrics);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DeimosSurvivalWidgetBase.OnUpdateObjectiveIcon
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSurvivalObjectiveIconData       ObjectiveIconData                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDeimosSurvivalWidgetBase::OnUpdateObjectiveIcon(const struct FSurvivalObjectiveIconData& ObjectiveIconData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeimosSurvivalWidgetBase", "OnUpdateObjectiveIcon");

	Params::DeimosSurvivalWidgetBase_OnUpdateObjectiveIcon Parms{};

	Parms.ObjectiveIconData = std::move(ObjectiveIconData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DeimosSurvivalWidgetBase.OnUpdateStateText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StateText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDeimosSurvivalWidgetBase::OnUpdateStateText(const class FText& StateText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeimosSurvivalWidgetBase", "OnUpdateStateText");

	Params::DeimosSurvivalWidgetBase_OnUpdateStateText Parms{};

	Parms.StateText = std::move(StateText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DiscoCaptureWidgetBase.GetClosestCapturePoint
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerPawnAthena*            ViewPawn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAthenaCapturePoint*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAthenaCapturePoint* UDiscoCaptureWidgetBase::GetClosestCapturePoint(class AFortPlayerPawnAthena* ViewPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoCaptureWidgetBase", "GetClosestCapturePoint");

	Params::DiscoCaptureWidgetBase_GetClosestCapturePoint Parms{};

	Parms.ViewPawn = ViewPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.DiscoCaptureWidgetBase.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDiscoCaptureWidgetBase::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoCaptureWidgetBase", "OnHandleSpectatingChanged");

	Params::DiscoCaptureWidgetBase_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoCaptureWidgetBase.OnUpdateCaptureUI
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EDiscoCaptureUIState                    CaptureState                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TextToDisplay                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ImageMID                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FillAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDiscoCaptureWidgetBase::OnUpdateCaptureUI(const EDiscoCaptureUIState& CaptureState, const class FText& TextToDisplay, const class UMaterialInstanceDynamic* ImageMID, float FillAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoCaptureWidgetBase", "OnUpdateCaptureUI");

	Params::DiscoCaptureWidgetBase_OnUpdateCaptureUI Parms{};

	Parms.CaptureState = CaptureState;
	Parms.TextToDisplay = std::move(TextToDisplay);
	Parms.ImageMID = ImageMID;
	Parms.FillAmount = FillAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DiscoCaptureWidgetBase.UpdateAllUI
// (Final, Native, Protected)

void UDiscoCaptureWidgetBase::UpdateAllUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoCaptureWidgetBase", "UpdateAllUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoCaptureWidgetBase.UpdateDiscoCaptureUI
// (Final, Native, Protected)

void UDiscoCaptureWidgetBase::UpdateDiscoCaptureUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoCaptureWidgetBase", "UpdateDiscoCaptureUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoWidgetBase.OnCountdownTimerUpdate
// (Final, Native, Protected)

void UDiscoWidgetBase::OnCountdownTimerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnCountdownTimerUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoWidgetBase.OnGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnGamePhaseChanged");

	Params::DiscoWidgetBase_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoWidgetBase.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnHandleSpectatingChanged");

	Params::DiscoWidgetBase_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoWidgetBase.OnMutatorObjectUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayMutatorObjectDataArray  MutatorArray                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnMutatorObjectUpdated(const struct FGameplayMutatorObjectDataArray& MutatorArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnMutatorObjectUpdated");

	Params::DiscoWidgetBase_OnMutatorObjectUpdated Parms{};

	Parms.MutatorArray = std::move(MutatorArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.DiscoWidgetBase.OnPlayScoreProgressSound
// (Event, Protected, BlueprintEvent)
// Parameters:
// EDiscoScoreProgressTypes                ScoreProgressType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalTeam                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnPlayScoreProgressSound(EDiscoScoreProgressTypes ScoreProgressType, bool bIsLocalTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnPlayScoreProgressSound");

	Params::DiscoWidgetBase_OnPlayScoreProgressSound Parms{};

	Parms.ScoreProgressType = ScoreProgressType;
	Parms.bIsLocalTeam = bIsLocalTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DiscoWidgetBase.OnUpdateCapturePoint
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   IconIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDiscoCaptureIconData            IconData                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnUpdateCapturePoint(int32 IconIndex, const struct FDiscoCaptureIconData& IconData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnUpdateCapturePoint");

	Params::DiscoWidgetBase_OnUpdateCapturePoint Parms{};

	Parms.IconIndex = IconIndex;
	Parms.IconData = std::move(IconData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DiscoWidgetBase.OnUpdateTeamScore
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   TeamIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDiscoTeamScoreData              ScoreData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UDiscoWidgetBase::OnUpdateTeamScore(int32 TeamIndex, const struct FDiscoTeamScoreData& ScoreData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "OnUpdateTeamScore");

	Params::DiscoWidgetBase_OnUpdateTeamScore Parms{};

	Parms.TeamIndex = TeamIndex;
	Parms.ScoreData = std::move(ScoreData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.DiscoWidgetBase.UpdateAllUI
// (Final, Native, Protected)

void UDiscoWidgetBase::UpdateAllUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DiscoWidgetBase", "UpdateAllUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.EmergencyNoticeBase.HideNotice
// (Event, Protected, BlueprintEvent)

void UEmergencyNoticeBase::HideNotice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyNoticeBase", "HideNotice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.EmergencyNoticeBase.ShowNotice
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Body                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UEmergencyNoticeBase::ShowNotice(const class FText& Title, const class FText& Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EmergencyNoticeBase", "ShowNotice");

	Params::EmergencyNoticeBase_ShowNotice Parms{};

	Parms.Title = std::move(Title);
	Parms.Body = std::move(Body);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMaterialProgressBar.SetBackgroundColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMaterialProgressBar::SetBackgroundColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMaterialProgressBar", "SetBackgroundColor");

	Params::FortMaterialProgressBar_SetBackgroundColor Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMaterialProgressBar.SetProgressBarSectionColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EFortMaterialProgressBarSection         BarSection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMaterialProgressBarSectionColorNumberColorNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMaterialProgressBar::SetProgressBarSectionColor(EFortMaterialProgressBarSection BarSection, const struct FLinearColor& Color, EFortMaterialProgressBarSectionColorNumber ColorNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMaterialProgressBar", "SetProgressBarSectionColor");

	Params::FortMaterialProgressBar_SetProgressBarSectionColor Parms{};

	Parms.BarSection = BarSection;
	Parms.Color = std::move(Color);
	Parms.ColorNumber = ColorNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMaterialProgressBar.SetProgressBarSectionPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortMaterialProgressBarSection         BarSection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMaterialProgressBar::SetProgressBarSectionPercent(EFortMaterialProgressBarSection BarSection, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMaterialProgressBar", "SetProgressBarSectionPercent");

	Params::FortMaterialProgressBar_SetProgressBarSectionPercent Parms{};

	Parms.BarSection = BarSection;
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMaterialProgressBar.SetStyle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortMaterialProgressBarStyle>BarStyle                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMaterialProgressBar::SetStyle(TSubclassOf<class UFortMaterialProgressBarStyle> BarStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMaterialProgressBar", "SetStyle");

	Params::FortMaterialProgressBar_SetStyle Parms{};

	Parms.BarStyle = BarStyle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportablePlayerBase.SetSelectionState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAnimateOnSelect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportablePlayerBase::SetSelectionState(bool bIsSelected, bool bAnimateOnSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportablePlayerBase", "SetSelectionState");

	Params::FeedbackReportablePlayerBase_SetSelectionState Parms{};

	Parms.bIsSelected = bIsSelected;
	Parms.bAnimateOnSelect = bAnimateOnSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestPlayButton.AttemptToPlayQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestPlayButton::AttemptToPlayQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "AttemptToPlayQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestPlayButton.HandleLobbyDisconnected
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandleLobbyDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "HandleLobbyDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestPlayButton.HandleMatchmakingComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// EMatchmakingCompleteResult              Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestPlayButton::HandleMatchmakingComplete(EMatchmakingCompleteResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "HandleMatchmakingComplete");

	Params::FortQuestPlayButton_HandleMatchmakingComplete Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestPlayButton.HandleMatchmakingStarted
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandleMatchmakingStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "HandleMatchmakingStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestPlayButton.HandlePlayerStateChanged
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::HandlePlayerStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "HandlePlayerStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestPlayButton.OnContentMissing
// (Event, Public, BlueprintEvent)

void UFortQuestPlayButton::OnContentMissing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "OnContentMissing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestPlayButton.CanNavigateToQuestObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestPlayButton::CanNavigateToQuestObjective() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "CanNavigateToQuestObjective");

	Params::FortQuestPlayButton_CanNavigateToQuestObjective Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestPlayButton.CanPlayQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestPlayButton::CanPlayQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestPlayButton", "CanPlayQuest");

	Params::FortQuestPlayButton_CanPlayQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FeedbackReportPlayerBase.CloseDialog
// (Final, Native, Protected, BlueprintCallable)

void UFeedbackReportPlayerBase::CloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "CloseDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.DynamicHandlePlayerSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::DynamicHandlePlayerSelected(class UObject* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "DynamicHandlePlayerSelected");

	Params::FeedbackReportPlayerBase_DynamicHandlePlayerSelected Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.DynamicHandleReportReasonSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::DynamicHandleReportReasonSelected(class UObject* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "DynamicHandleReportReasonSelected");

	Params::FeedbackReportPlayerBase_DynamicHandleReportReasonSelected Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.HandleBackAction
// (Final, Native, Protected, BlueprintCallable)

void UFeedbackReportPlayerBase::HandleBackAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "HandleBackAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.HandleMessageChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::HandleMessageChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "HandleMessageChanged");

	Params::FeedbackReportPlayerBase_HandleMessageChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.HandleTabClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EPlayerReportingStep                    ClickedStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::HandleTabClicked(EPlayerReportingStep ClickedStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "HandleTabClicked");

	Params::FeedbackReportPlayerBase_HandleTabClicked Parms{};

	Parms.ClickedStep = ClickedStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FeedbackReportPlayerBase.OnFeedbackSentCallback
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::OnFeedbackSentCallback(bool Succeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "OnFeedbackSentCallback");

	Params::FeedbackReportPlayerBase_OnFeedbackSentCallback Parms{};

	Parms.Succeeded = Succeeded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FeedbackReportPlayerBase.OnListViewSelectionMade
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// EPlayerReportingStep                    ReportingStep                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             SelectedText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::OnListViewSelectionMade(EPlayerReportingStep ReportingStep, const class FText& SelectedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "OnListViewSelectionMade");

	Params::FeedbackReportPlayerBase_OnListViewSelectionMade Parms{};

	Parms.ReportingStep = ReportingStep;
	Parms.SelectedText = std::move(SelectedText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FeedbackReportPlayerBase.OnPopulateView
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPlayerReportingStep                    CurrentStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerBase::OnPopulateView(EPlayerReportingStep CurrentStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerBase", "OnPopulateView");

	Params::FeedbackReportPlayerBase_OnPopulateView Parms{};

	Parms.CurrentStep = CurrentStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FeedbackReportPlayerReasonBase.SetSelectionState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAnimateOnSelect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFeedbackReportPlayerReasonBase::SetSelectionState(bool bIsSelected, bool bAnimateOnSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FeedbackReportPlayerReasonBase", "SetSelectionState");

	Params::FeedbackReportPlayerReasonBase_SetSelectionState Parms{};

	Parms.bIsSelected = bIsSelected;
	Parms.bAnimateOnSelect = bAnimateOnSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownDetailView.ConvertCMSStringToColor
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           ColorString                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortShowdownDetailView::ConvertCMSStringToColor(const class FString& ColorString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "ConvertCMSStringToColor");

	Params::FortShowdownDetailView_ConvertCMSStringToColor Parms{};

	Parms.ColorString = std::move(ColorString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventId
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortShowdownDetailView::GetEventId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventId");

	Params::FortShowdownDetailView_GetEventId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventResultsSummary
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FFortShowdownEventBestResultsSummaryReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortShowdownEventBestResultsSummary UFortShowdownDetailView::GetEventResultsSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventResultsSummary");

	Params::FortShowdownDetailView_GetEventResultsSummary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentEvents
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFortShowdownDetailView::GetTournamentEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentEvents");

	Params::FortShowdownDetailView_GetTournamentEvents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentScoringRules
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<struct FFortShowdownScoringRuleInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortShowdownScoringRuleInfo> UFortShowdownDetailView::GetTournamentScoringRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentScoringRules");

	Params::FortShowdownDetailView_GetTournamentScoringRules Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.RefreshDataBP
// (Event, Protected, BlueprintEvent)

void UFortShowdownDetailView::RefreshDataBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "RefreshDataBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortShowdownDetailView.SetTournament
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TournamentId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownDetailView::SetTournament(const class FString& TournamentId, const class FString& EventId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "SetTournament");

	Params::FortShowdownDetailView_SetTournament Parms{};

	Parms.TournamentId = std::move(TournamentId);
	Parms.EventId = std::move(EventId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownDetailView.GetBestEventScore
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetBestEventScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetBestEventScore");

	Params::FortShowdownDetailView_GetBestEventScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetCurrentEventScore
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetCurrentEventScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetCurrentEventScore");

	Params::FortShowdownDetailView_GetCurrentEventScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetCurrentEventTeamNumMatchesPlayed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetCurrentEventTeamNumMatchesPlayed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetCurrentEventTeamNumMatchesPlayed");

	Params::FortShowdownDetailView_GetCurrentEventTeamNumMatchesPlayed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventBeginTime
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortShowdownDetailView::GetEventBeginTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventBeginTime");

	Params::FortShowdownDetailView_GetEventBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventDateAsText
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        DateTime                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDateTimeStyle                      Style                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortShowdownDetailView::GetEventDateAsText(const struct FDateTime& DateTime, EFortDateTimeStyle Style) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventDateAsText");

	Params::FortShowdownDetailView_GetEventDateAsText Parms{};

	Parms.DateTime = std::move(DateTime);
	Parms.Style = Style;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventEndTime
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortShowdownDetailView::GetEventEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventEndTime");

	Params::FortShowdownDetailView_GetEventEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventPinState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortShowdownPinState                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortShowdownPinState UFortShowdownDetailView::GetEventPinState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventPinState");

	Params::FortShowdownDetailView_GetEventPinState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortShowdownEventState                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortShowdownEventState UFortShowdownDetailView::GetEventState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventState");

	Params::FortShowdownDetailView_GetEventState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventTimeAsText
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        DateTime                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDateTimeStyle                      Style                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortShowdownDetailView::GetEventTimeAsText(const struct FDateTime& DateTime, EFortDateTimeStyle Style) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventTimeAsText");

	Params::FortShowdownDetailView_GetEventTimeAsText Parms{};

	Parms.DateTime = std::move(DateTime);
	Parms.Style = Style;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetEventTimeLeft
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortShowdownDetailView::GetEventTimeLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetEventTimeLeft");

	Params::FortShowdownDetailView_GetEventTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentBeginTime
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortShowdownDetailView::GetTournamentBeginTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentBeginTime");

	Params::FortShowdownDetailView_GetTournamentBeginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentBestPinState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortShowdownPinState                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortShowdownPinState UFortShowdownDetailView::GetTournamentBestPinState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentBestPinState");

	Params::FortShowdownDetailView_GetTournamentBestPinState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentBestScore
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetTournamentBestScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentBestScore");

	Params::FortShowdownDetailView_GetTournamentBestScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentEndTime
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortShowdownDetailView::GetTournamentEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentEndTime");

	Params::FortShowdownDetailView_GetTournamentEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentId
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortShowdownDetailView::GetTournamentId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentId");

	Params::FortShowdownDetailView_GetTournamentId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentMatchCap
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetTournamentMatchCap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentMatchCap");

	Params::FortShowdownDetailView_GetTournamentMatchCap Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentMatchType
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortShowdownMatchType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortShowdownMatchType UFortShowdownDetailView::GetTournamentMatchType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentMatchType");

	Params::FortShowdownDetailView_GetTournamentMatchType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentNextEvent
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortShowdownDetailView::GetTournamentNextEvent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentNextEvent");

	Params::FortShowdownDetailView_GetTournamentNextEvent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentPinUnlockScore
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortShowdownDetailView::GetTournamentPinUnlockScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentPinUnlockScore");

	Params::FortShowdownDetailView_GetTournamentPinUnlockScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortShowdownEventState                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortShowdownEventState UFortShowdownDetailView::GetTournamentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentState");

	Params::FortShowdownDetailView_GetTournamentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.GetTournamentTimeLeft
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortShowdownDetailView::GetTournamentTimeLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "GetTournamentTimeLeft");

	Params::FortShowdownDetailView_GetTournamentTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.IsEventLeaderboardAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortShowdownDetailView::IsEventLeaderboardAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "IsEventLeaderboardAvailable");

	Params::FortShowdownDetailView_IsEventLeaderboardAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortShowdownDetailView.ShouldShowCrossplayError
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortShowdownDetailView::ShouldShowCrossplayError() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownDetailView", "ShouldShowCrossplayError");

	Params::FortShowdownDetailView_ShouldShowCrossplayError Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAbilitySystemContext.RegisterForAttributeChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          ASC                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       Callback                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortAbilitySystemContext::RegisterForAttributeChanged(class UWidget* Widget, class UAbilitySystemComponent* ASC, const struct FGameplayAttribute& Attribute, TDelegate<void()> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemContext", "RegisterForAttributeChanged");

	Params::FortAbilitySystemContext_RegisterForAttributeChanged Parms{};

	Parms.Widget = Widget;
	Parms.ASC = ASC;
	Parms.Attribute = std::move(Attribute);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAbilitySystemContext.RemoveDelegatesFromWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilitySystemContext::RemoveDelegatesFromWidget(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemContext", "RemoveDelegatesFromWidget");

	Params::FortAbilitySystemContext_RemoveDelegatesFromWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAbilitySystemContext.HasMatchingGameplayTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     TagToCheck                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemContext::HasMatchingGameplayTag(const struct FGameplayTag& TagToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemContext", "HasMatchingGameplayTag");

	Params::FortAbilitySystemContext_HasMatchingGameplayTag Parms{};

	Parms.TagToCheck = std::move(TagToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAccountOptions.ChangeSamsungStoreSetting
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   SettingIdx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAccountOptions::ChangeSamsungStoreSetting(int32 SettingIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "ChangeSamsungStoreSetting");

	Params::FortAccountOptions_ChangeSamsungStoreSetting Parms{};

	Parms.SettingIdx = SettingIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountOptions.LoadSamsungOptions
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>                     OutOptions                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   CurrentOptionIdx                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAccountOptions::LoadSamsungOptions(TArray<class FText>* OutOptions, int32* CurrentOptionIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "LoadSamsungOptions");

	Params::FortAccountOptions_LoadSamsungOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOptions != nullptr)
		*OutOptions = std::move(Parms.OutOptions);

	if (CurrentOptionIdx != nullptr)
		*CurrentOptionIdx = Parms.CurrentOptionIdx;
}


// Function FortniteUI.FortAccountOptions.SaveSettingsToMcp
// (Final, Native, Protected, BlueprintCallable)

void UFortAccountOptions::SaveSettingsToMcp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "SaveSettingsToMcp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountOptions.SetCanReceiveGifts
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInCanReceiveGifts                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAccountOptions::SetCanReceiveGifts(bool bInCanReceiveGifts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "SetCanReceiveGifts");

	Params::FortAccountOptions_SetCanReceiveGifts Parms{};

	Parms.bInCanReceiveGifts = bInCanReceiveGifts;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountOptions.SetPrivacySettings
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMcpPrivacySettings              NewPrivacySettings                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAccountOptions::SetPrivacySettings(const struct FMcpPrivacySettings& NewPrivacySettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "SetPrivacySettings");

	Params::FortAccountOptions_SetPrivacySettings Parms{};

	Parms.NewPrivacySettings = std::move(NewPrivacySettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountOptions.SetRefundRequestText
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RefundsRemaining                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRefunds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DaysToRefund                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAccountOptions::SetRefundRequestText(int32 RefundsRemaining, int32 TotalRefunds, int32 DaysToRefund)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "SetRefundRequestText");

	Params::FortAccountOptions_SetRefundRequestText Parms{};

	Parms.RefundsRemaining = RefundsRemaining;
	Parms.TotalRefunds = TotalRefunds;
	Parms.DaysToRefund = DaysToRefund;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAccountOptions.CanLocalPlayerReceiveGifts
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountOptions::CanLocalPlayerReceiveGifts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "CanLocalPlayerReceiveGifts");

	Params::FortAccountOptions_CanLocalPlayerReceiveGifts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAccountOptions.ShouldShowSamsungStore
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountOptions::ShouldShowSamsungStore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountOptions", "ShouldShowSamsungStore");

	Params::FortAccountOptions_ShouldShowSamsungStore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapCosmeticListWidget.UpdateCosmeticListDisplay
// (Event, Public, BlueprintEvent)

void UFortQuestMapCosmeticListWidget::UpdateCosmeticListDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapCosmeticListWidget", "UpdateCosmeticListDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestMapCosmeticListWidget.GetDisplayItemDefs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItemDefinition*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItemDefinition*> UFortQuestMapCosmeticListWidget::GetDisplayItemDefs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapCosmeticListWidget", "GetDisplayItemDefs");

	Params::FortQuestMapCosmeticListWidget_GetDisplayItemDefs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLobby.DynamicHandleLoadingScreenVisibilityChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    Param_IsVisible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLobby::DynamicHandleLoadingScreenVisibilityChanged(bool Param_IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "DynamicHandleLoadingScreenVisibilityChanged");

	Params::FortLobby_DynamicHandleLoadingScreenVisibilityChanged Parms{};

	Parms.Param_IsVisible = Param_IsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLobby.OnBeginCursorOverPlayer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLobby::OnBeginCursorOverPlayer(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "OnBeginCursorOverPlayer");

	Params::FortLobby_OnBeginCursorOverPlayer Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortLobby.OnEndCursorOverPlayer
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLobby::OnEndCursorOverPlayer(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "OnEndCursorOverPlayer");

	Params::FortLobby_OnEndCursorOverPlayer Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortLobby.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UFortLobby::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLobby.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UFortLobby::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLobby.OnPlayerClicked
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLobby::OnPlayerClicked(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobby", "OnPlayerClicked");

	Params::FortLobby_OnPlayerClicked Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAccountWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// (Final, Native, Protected)
// Parameters:
// struct FFortPublicAccountInfo           NewInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAccountWidgetBase::HandleCurrentlyViewedAccountInfoChanged(const struct FFortPublicAccountInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountWidgetBase", "HandleCurrentlyViewedAccountInfoChanged");

	Params::FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAccountWidgetBase.OnAccountInfoChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortPublicAccountInfo           Result                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortAccountWidgetBase::OnAccountInfoChanged(const struct FFortPublicAccountInfo& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountWidgetBase", "OnAccountInfoChanged");

	Params::FortAccountWidgetBase_OnAccountInfoChanged Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAccountWidgetBase.GetNextSeasonChaseReward
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemQuantityPair            Reward                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   RewardLevel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartingLevel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountWidgetBase::GetNextSeasonChaseReward(struct FFortItemQuantityPair* Reward, int32* RewardLevel, int32 StartingLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountWidgetBase", "GetNextSeasonChaseReward");

	Params::FortAccountWidgetBase_GetNextSeasonChaseReward Parms{};

	Parms.StartingLevel = StartingLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Reward != nullptr)
		*Reward = std::move(Parms.Reward);

	if (RewardLevel != nullptr)
		*RewardLevel = Parms.RewardLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAccountWidgetBase.GetNextSeasonReward
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemQuantityPair            Reward                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   RewardLevel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountWidgetBase::GetNextSeasonReward(struct FFortItemQuantityPair* Reward, int32* RewardLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountWidgetBase", "GetNextSeasonReward");

	Params::FortAccountWidgetBase_GetNextSeasonReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Reward != nullptr)
		*Reward = std::move(Parms.Reward);

	if (RewardLevel != nullptr)
		*RewardLevel = Parms.RewardLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAccountWidgetBase.GetSeasonBannerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaSeasonBannerLevel         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaSeasonBannerLevel UFortAccountWidgetBase::GetSeasonBannerInfo(int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountWidgetBase", "GetSeasonBannerInfo");

	Params::FortAccountWidgetBase_GetSeasonBannerInfo Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActorCanvas.AddActorIndicator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortActorIndicatorWidget*        Indicator                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortActorCanvasSlot*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortActorCanvasSlot* UFortActorCanvas::AddActorIndicator(class UFortActorIndicatorWidget* Indicator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActorCanvas", "AddActorIndicator");

	Params::FortActorCanvas_AddActorIndicator Parms{};

	Parms.Indicator = Indicator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortActorCanvas.OnHUDElementVisibilityChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayTagContainer            HiddenHUDElementTags                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortActorCanvas::OnHUDElementVisibilityChanged(const struct FGameplayTagContainer& HiddenHUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortActorCanvas", "OnHUDElementVisibilityChanged");

	Params::FortActorCanvas_OnHUDElementVisibilityChanged Parms{};

	Parms.HiddenHUDElementTags = std::move(HiddenHUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerkWidget_NUI.GetTooltipContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortTooltipContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipContext* UFortPerkWidget_NUI::GetTooltipContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetTooltipContext");

	Params::FortPerkWidget_NUI_GetTooltipContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.OnCombinedTooltipDescriptionReady
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPerkWidget_NUI::OnCombinedTooltipDescriptionReady(const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "OnCombinedTooltipDescriptionReady");

	Params::FortPerkWidget_NUI_OnCombinedTooltipDescriptionReady Parms{};

	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPerkWidget_NUI.OnPerkUpdated
// (Event, Public, BlueprintEvent)

void UFortPerkWidget_NUI::OnPerkUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "OnPerkUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPerkWidget_NUI.OnTooltipDescriptionReady
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class FText>                     DescriptionList                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPerkWidget_NUI::OnTooltipDescriptionReady(const TArray<class FText>& DescriptionList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "OnTooltipDescriptionReady");

	Params::FortPerkWidget_NUI_OnTooltipDescriptionReady Parms{};

	Parms.DescriptionList = std::move(DescriptionList);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPerkWidget_NUI.RequestCombinedTooltipDescription
// (Final, Native, Public, BlueprintCallable)

void UFortPerkWidget_NUI::RequestCombinedTooltipDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "RequestCombinedTooltipDescription");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerkWidget_NUI.RequestTooltipDescription
// (Final, Native, Public, BlueprintCallable)

void UFortPerkWidget_NUI::RequestTooltipDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "RequestTooltipDescription");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerkWidget_NUI.SetTooltipContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortTooltipContext*              InTooltipContext                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerkWidget_NUI::SetTooltipContext(const class UFortTooltipContext* InTooltipContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "SetTooltipContext");

	Params::FortPerkWidget_NUI_SetTooltipContext Parms{};

	Parms.InTooltipContext = InTooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPerkWidget_NUI.GetIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      Brush                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::GetIcon(struct FSlateBrush* Brush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetIcon");

	Params::FortPerkWidget_NUI_GetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.GetPerkTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemTier                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemTier UFortPerkWidget_NUI::GetPerkTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetPerkTier");

	Params::FortPerkWidget_NUI_GetPerkTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.GetRequiredLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPerkWidget_NUI::GetRequiredLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetRequiredLevel");

	Params::FortPerkWidget_NUI_GetRequiredLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.GetSupportBonusType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSupportBonusType                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortSupportBonusType UFortPerkWidget_NUI::GetSupportBonusType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetSupportBonusType");

	Params::FortPerkWidget_NUI_GetSupportBonusType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.GetTooltipTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortPerkWidget_NUI::GetTooltipTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "GetTooltipTitle");

	Params::FortPerkWidget_NUI_GetTooltipTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.HasAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::HasAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "HasAbility");

	Params::FortPerkWidget_NUI_HasAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.IsPerkEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::IsPerkEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "IsPerkEmpty");

	Params::FortPerkWidget_NUI_IsPerkEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.IsPerkHighlighted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::IsPerkHighlighted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "IsPerkHighlighted");

	Params::FortPerkWidget_NUI_IsPerkHighlighted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.IsPerkUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::IsPerkUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "IsPerkUnlocked");

	Params::FortPerkWidget_NUI_IsPerkUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkWidget_NUI.IsTierPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPerkWidget_NUI::IsTierPerk() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkWidget_NUI", "IsTierPerk");

	Params::FortPerkWidget_NUI_IsTierPerk Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTextStyleList.GetTextStyles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftClassPtr<class UClass>>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftClassPtr<class UClass>> UFortTextStyleList::GetTextStyles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTextStyleList", "GetTextStyles");

	Params::FortTextStyleList_GetTextStyles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationModOptinScreenBase.ConvertItemAlterations
// (Final, Native, Protected, BlueprintCallable)

void UFortAlterationModOptinScreenBase::ConvertItemAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModOptinScreenBase", "ConvertItemAlterations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationModOptinScreenBase.OnItemConversionComplete
// (Event, Protected, BlueprintEvent)

void UFortAlterationModOptinScreenBase::OnItemConversionComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModOptinScreenBase", "OnItemConversionComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationModOptinScreenBase.OnSetupItem
// (Event, Protected, BlueprintEvent)

void UFortAlterationModOptinScreenBase::OnSetupItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModOptinScreenBase", "OnSetupItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationModOptinScreenBase.RequestClose
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bCancelled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModOptinScreenBase::RequestClose(bool bCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModOptinScreenBase", "RequestClose");

	Params::FortAlterationModOptinScreenBase_RequestClose Parms{};

	Parms.bCancelled = bCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationModOptinScreenBase.SetupItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationModOptinScreenBase::SetupItem(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationModOptinScreenBase", "SetupItem");

	Params::FortAlterationModOptinScreenBase_SetupItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationOption.OnSetup
// (Event, Public, BlueprintEvent)

void UFortAlterationOption::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationOption.Setup
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAlterationOption                InAlterationOption                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortAlterationOptionType               InAlterationOptionType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationOption::Setup(struct FAlterationOption* InAlterationOption, EFortAlterationOptionType InAlterationOptionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "Setup");

	Params::FortAlterationOption_Setup Parms{};

	Parms.InAlterationOptionType = InAlterationOptionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InAlterationOption != nullptr)
		*InAlterationOption = std::move(Parms.InAlterationOption);
}


// Function FortniteUI.FortAlterationOption.GetAlterationDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortAlterationOption::GetAlterationDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "GetAlterationDefinition");

	Params::FortAlterationOption_GetAlterationDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationOption.GetAlterationOptionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAlterationOptionType               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortAlterationOptionType UFortAlterationOption::GetAlterationOptionType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "GetAlterationOptionType");

	Params::FortAlterationOption_GetAlterationOptionType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationOption.GetCurrentPipCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxPipCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAlterationOption::GetCurrentPipCount(float MaxPipCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "GetCurrentPipCount");

	Params::FortAlterationOption_GetCurrentPipCount Parms{};

	Parms.MaxPipCount = MaxPipCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationOption.GetNextPipCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxPipCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAlterationOption::GetNextPipCount(float MaxPipCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "GetNextPipCount");

	Params::FortAlterationOption_GetNextPipCount Parms{};

	Parms.MaxPipCount = MaxPipCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationOption.GetRequiredIngredients
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemQuantityPair> UFortAlterationOption::GetRequiredIngredients() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationOption", "GetRequiredIngredients");

	Params::FortAlterationOption_GetRequiredIngredients Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetAlterationDefintion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortAlterationInfo::GetAlterationDefintion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetAlterationDefintion");

	Params::FortAlterationInfo_GetAlterationDefintion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetCorrespondingItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortAlterationInfo::GetCorrespondingItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetCorrespondingItem");

	Params::FortAlterationInfo_GetCorrespondingItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetCurrentPipCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MaxPips                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAlterationInfo::GetCurrentPipCount(float MaxPips) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetCurrentPipCount");

	Params::FortAlterationInfo_GetCurrentPipCount Parms{};

	Parms.MaxPips = MaxPips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortAlterationInfo::GetRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetRarity");

	Params::FortAlterationInfo_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetRequiredLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAlterationInfo::GetRequiredLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetRequiredLevel");

	Params::FortAlterationInfo_GetRequiredLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.GetSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAlterationInfo::GetSlotIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "GetSlotIndex");

	Params::FortAlterationInfo_GetSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.IsAlterationHighlighted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationInfo::IsAlterationHighlighted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "IsAlterationHighlighted");

	Params::FortAlterationInfo_IsAlterationHighlighted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.IsAlterationUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationInfo::IsAlterationUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "IsAlterationUnlocked");

	Params::FortAlterationInfo_IsAlterationUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationInfo.IsFreeAlterationChoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAlterationInfo::IsFreeAlterationChoice() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationInfo", "IsFreeAlterationChoice");

	Params::FortAlterationInfo_IsFreeAlterationChoice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAlterationWidget.OnSetup
// (Event, Public, BlueprintEvent)

void UFortAlterationWidget::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationWidget", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAlterationWidget.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterationInfo*              InAlterationInfo                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAlterationWidget::Setup(class UFortAlterationInfo* InAlterationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationWidget", "Setup");

	Params::FortAlterationWidget_Setup Parms{};

	Parms.InAlterationInfo = InAlterationInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAlterationWidget.GetAlterationInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationInfo*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationInfo* UFortAlterationWidget::GetAlterationInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationWidget", "GetAlterationInfo");

	Params::FortAlterationWidget_GetAlterationInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAnnouncementWidget.AnnouncementStopped
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortClientAnnouncement*          Announcement                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnnouncementWidget::AnnouncementStopped(class AFortClientAnnouncement* Announcement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnouncementWidget", "AnnouncementStopped");

	Params::FortAnnouncementWidget_AnnouncementStopped Parms{};

	Parms.Announcement = Announcement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAnnouncementWidget.BindUpdateEvents
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class AFortClientAnnouncement*          Announcement                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnnouncementWidget::BindUpdateEvents(class AFortClientAnnouncement* Announcement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnouncementWidget", "BindUpdateEvents");

	Params::FortAnnouncementWidget_BindUpdateEvents Parms{};

	Parms.Announcement = Announcement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAnnouncementWidget.FindFirstUnboundAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             AnnouncementBody                                       (Parm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortAnnouncementWidget::FindFirstUnboundAction(const class FText& AnnouncementBody)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnouncementWidget", "FindFirstUnboundAction");

	Params::FortAnnouncementWidget_FindFirstUnboundAction Parms{};

	Parms.AnnouncementBody = std::move(AnnouncementBody);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAnnouncementWidget.UpdateWidgetData
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortClientAnnouncement*          Announcement                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnnouncementWidget::UpdateWidgetData(class AFortClientAnnouncement* Announcement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnouncementWidget", "UpdateWidgetData");

	Params::FortAnnouncementWidget_UpdateWidgetData Parms{};

	Parms.Announcement = Announcement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAnnouncementWidget.GetTextForAction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortAnnouncementWidget::GetTextForAction(const class FName& ActionName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnnouncementWidget", "GetTextForAction");

	Params::FortAnnouncementWidget_GetTextForAction Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_CheckForStwMfaReward.CheckForStwMfaReward
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Param_PlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_CheckForStwMfaReward*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_CheckForStwMfaReward* UFortAsyncAction_CheckForStwMfaReward::CheckForStwMfaReward(class AFortPlayerController* Param_PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_CheckForStwMfaReward", "CheckForStwMfaReward");

	Params::FortAsyncAction_CheckForStwMfaReward_CheckForStwMfaReward Parms{};

	Parms.Param_PlayerController = Param_PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_CreateWidgetAsync.CreateWidgetAsync
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             UserWidgetSoftClass                                    (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuspendInputUntilComplete                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_CreateWidgetAsync*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_CreateWidgetAsync* UFortAsyncAction_CreateWidgetAsync::CreateWidgetAsync(class UObject* WorldContextObject, TSoftClassPtr<class UClass> UserWidgetSoftClass, class APlayerController* OwningPlayer, bool bSuspendInputUntilComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_CreateWidgetAsync", "CreateWidgetAsync");

	Params::FortAsyncAction_CreateWidgetAsync_CreateWidgetAsync Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UserWidgetSoftClass = UserWidgetSoftClass;
	Parms.OwningPlayer = OwningPlayer;
	Parms.bSuspendInputUntilComplete = bSuspendInputUntilComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_LoadCurrentSubgameProfiles.LoadCurrentSubgameProfiles
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Param_PlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_LoadCurrentSubgameProfiles*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_LoadCurrentSubgameProfiles* UFortAsyncAction_LoadCurrentSubgameProfiles::LoadCurrentSubgameProfiles(class AFortPlayerController* Param_PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_LoadCurrentSubgameProfiles", "LoadCurrentSubgameProfiles");

	Params::FortAsyncAction_LoadCurrentSubgameProfiles_LoadCurrentSubgameProfiles Parms{};

	Parms.Param_PlayerController = Param_PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_SetUIState.SetUIState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIState                            DesiredState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_SetUIState*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_SetUIState* UFortAsyncAction_SetUIState::SetUIState(class UObject* InWorldContextObject, EFortUIState DesiredState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_SetUIState", "SetUIState");

	Params::FortAsyncAction_SetUIState_SetUIState Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.DesiredState = DesiredState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_ShowAdvancedLatentConfirmation_NUI.ShowAdvancedLatentActionConfirmation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Icon                                                   (Parm, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (Parm, NativeAccessSpecifierPublic)
// TArray<struct FConfirmationDialogAction>ConfirmButtonInputActions                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             DeclineButtonInputAction                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          AdditionalContent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI* UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI::ShowAdvancedLatentActionConfirmation(class UObject* InWorldContextObject, const struct FSlateBrush& Icon, const class FText& Title, const class FText& MESSAGE, const TArray<struct FConfirmationDialogAction>& ConfirmButtonInputActions, const class FName& DeclineButtonInputAction, class UWidget* AdditionalContent, class UWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowAdvancedLatentConfirmation_NUI", "ShowAdvancedLatentActionConfirmation");

	Params::FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Icon = std::move(Icon);
	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.ConfirmButtonInputActions = std::move(ConfirmButtonInputActions);
	Parms.DeclineButtonInputAction = DeclineButtonInputAction;
	Parms.AdditionalContent = AdditionalContent;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOnlineStatusPanel.OnFocused
// (Event, Protected, BlueprintEvent)

void UFortOnlineStatusPanel::OnFocused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOnlineStatusPanel", "OnFocused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAsyncAction_ShowPartyDialog.ShowPartyLeaderManageDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTeamMemberInfo              Param_TeamMemberInfo                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalPlayer*                     Param_LocalPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowPartyDialog* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowPartyDialog* UFortAsyncAction_ShowPartyDialog::ShowPartyLeaderManageDialog(class UObject* InWorldContextObject, const struct FFortTeamMemberInfo& Param_TeamMemberInfo, class ULocalPlayer* Param_LocalPlayer, class UUserWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowPartyDialog", "ShowPartyLeaderManageDialog");

	Params::FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Param_TeamMemberInfo = std::move(Param_TeamMemberInfo);
	Parms.Param_LocalPlayer = Param_LocalPlayer;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAsyncAction_ShowPartyDialog.ShowPartyMemberManageDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTeamMemberInfo              Param_TeamMemberInfo                                   (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULocalPlayer*                     Param_LocalPlayer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      LeftAdditionalContent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_ShowPartyDialog* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_ShowPartyDialog* UFortAsyncAction_ShowPartyDialog::ShowPartyMemberManageDialog(class UObject* InWorldContextObject, const struct FFortTeamMemberInfo& Param_TeamMemberInfo, class ULocalPlayer* Param_LocalPlayer, class UUserWidget* LeftAdditionalContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_ShowPartyDialog", "ShowPartyMemberManageDialog");

	Params::FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Param_TeamMemberInfo = std::move(Param_TeamMemberInfo);
	Parms.Param_LocalPlayer = Param_LocalPlayer;
	Parms.LeftAdditionalContent = LeftAdditionalContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaMatchmakingTile.OnCMSDataUpdated
// (Event, Public, BlueprintEvent)

void UFortAthenaMatchmakingTile::OnCMSDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "OnCMSDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaMatchmakingTile.PlaylistChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPlaylistFrontEndData            PlaylistToRepresent                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingTile::PlaylistChanged(const struct FPlaylistFrontEndData& PlaylistToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "PlaylistChanged");

	Params::FortAthenaMatchmakingTile_PlaylistChanged Parms{};

	Parms.PlaylistToRepresent = std::move(PlaylistToRepresent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingTile.PopulateTextFieldsFromCMS
// (Final, Native, Public, BlueprintCallable)

void UFortAthenaMatchmakingTile::PopulateTextFieldsFromCMS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "PopulateTextFieldsFromCMS");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaMatchmakingTile.SetDefaultImage
// (Event, Public, BlueprintEvent)

void UFortAthenaMatchmakingTile::SetDefaultImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "SetDefaultImage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaMatchmakingTile.SetTileSize
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NumRowTiles                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingTile::SetTileSize(int32 NumRowTiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "SetTileSize");

	Params::FortAthenaMatchmakingTile_SetTileSize Parms{};

	Parms.NumRowTiles = NumRowTiles;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaMatchmakingTile.TilePlaylistSetAsMatchmakingPlaylist
// (Event, Public, BlueprintEvent)

void UFortAthenaMatchmakingTile::TilePlaylistSetAsMatchmakingPlaylist()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "TilePlaylistSetAsMatchmakingPlaylist");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaMatchmakingTile.UpdateTileAvailability
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Available                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaMatchmakingTile::UpdateTileAvailability(bool Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaMatchmakingTile", "UpdateTileAvailability");

	Params::FortAthenaMatchmakingTile_UpdateTileAvailability Parms{};

	Parms.Available = Available;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHeroLoadoutScreenBase.SetHeroLoadout
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     HeroLoadout                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutScreenBase::SetHeroLoadout(class UFortCampaignHeroLoadoutItem* HeroLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutScreenBase", "SetHeroLoadout");

	Params::FortHeroLoadoutScreenBase_SetHeroLoadout Parms{};

	Parms.HeroLoadout = HeroLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHeroLoadoutScreenBase.GetIsReadOnly
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroLoadoutScreenBase::GetIsReadOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutScreenBase", "GetIsReadOnly");

	Params::FortHeroLoadoutScreenBase_GetIsReadOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortAthenaNewsWidget.HandleNewsStyle
// (Event, Public, BlueprintEvent)
// Parameters:
// EAthenaNewsStyle                        NewsStyle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaNewsWidget::HandleNewsStyle(EAthenaNewsStyle NewsStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "HandleNewsStyle");

	Params::FortAthenaNewsWidget_HandleNewsStyle Parms{};

	Parms.NewsStyle = NewsStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAthenaNewsWidget.LogMotDCloseAction
// (Final, Native, Public, BlueprintCallable)

void UFortAthenaNewsWidget::LogMotDCloseAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "LogMotDCloseAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaNewsWidget.LogMotDLobbyNavAction
// (Final, Native, Public, BlueprintCallable)

void UFortAthenaNewsWidget::LogMotDLobbyNavAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "LogMotDLobbyNavAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaNewsWidget.PlayNewsTilesIntro
// (Final, Native, Protected, BlueprintCallable)

void UFortAthenaNewsWidget::PlayNewsTilesIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "PlayNewsTilesIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAthenaNewsWidget.ResetViewConfiguration
// (Event, Public, BlueprintEvent)

void UFortAthenaNewsWidget::ResetViewConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "ResetViewConfiguration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAthenaNewsWidget.SingleItemConfiguration
// (Event, Public, BlueprintEvent)

void UFortAthenaNewsWidget::SingleItemConfiguration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaNewsWidget", "SingleItemConfiguration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.ItemCardWidgetBase.OnLootInfoSet
// (Event, Public, BlueprintEvent)

void UItemCardWidgetBase::OnLootInfoSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCardWidgetBase", "OnLootInfoSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.ItemCardWidgetBase.SetLootInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGiftInfo*                    Param_LootInfo                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UItemCardWidgetBase::SetLootInfo(class UFortGiftInfo* Param_LootInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemCardWidgetBase", "SetLootInfo");

	Params::ItemCardWidgetBase_SetLootInfo Parms{};

	Parms.Param_LootInfo = Param_LootInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMulchConfirmationModalWidget.CommitMulch
// (Final, Native, Public, BlueprintCallable)

void UFortMulchConfirmationModalWidget::CommitMulch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMulchConfirmationModalWidget", "CommitMulch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMulchConfirmationModalWidget.GetMulchWarnings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TMap<EItemRecyclingWarning, int32>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TMap<EItemRecyclingWarning, int32> UFortMulchConfirmationModalWidget::GetMulchWarnings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMulchConfirmationModalWidget", "GetMulchWarnings");

	Params::FortMulchConfirmationModalWidget_GetMulchWarnings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMulchConfirmationModalWidget.UpdateConfirmationModal
// (Final, Native, Private)

void UFortMulchConfirmationModalWidget::UpdateConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMulchConfirmationModalWidget", "UpdateConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMulchConfirmationModalWidget.UpdateConfirmationModal_BP
// (Event, Public, BlueprintEvent)

void UFortMulchConfirmationModalWidget::UpdateConfirmationModal_BP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMulchConfirmationModalWidget", "UpdateConfirmationModal_BP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTreeItemWidget.HandleQuestsUpdated
// (Final, Native, Protected)

void UFortQuestTreeItemWidget::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTreeItemWidget", "HandleQuestsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTreeItemWidget.OnQuestsUpdated
// (Event, Protected, BlueprintEvent)

void UFortQuestTreeItemWidget::OnQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTreeItemWidget", "OnQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTreeItemWidget.SetupAsCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestCategory*               Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget::SetupAsCategory(class UFortQuestCategory* Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTreeItemWidget", "SetupAsCategory");

	Params::FortQuestTreeItemWidget_SetupAsCategory Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestTreeItemWidget.SetupAsQuest
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTreeItemWidget::SetupAsQuest(class UFortQuestItem* Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTreeItemWidget", "SetupAsQuest");

	Params::FortQuestTreeItemWidget_SetupAsQuest Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAttributeList_NUI.ClearPreviewData
// (Final, Native, Public, BlueprintCallable)

void UFortAttributeList_NUI::ClearPreviewData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "ClearPreviewData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeList_NUI.OnAddShownAttributeListItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortAttributeListItem_NUI*       AttributeListItemWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAttributeList_NUI::OnAddShownAttributeListItem(class UFortAttributeListItem_NUI* AttributeListItemWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "OnAddShownAttributeListItem");

	Params::FortAttributeList_NUI_OnAddShownAttributeListItem Parms{};

	Parms.AttributeListItemWidget = AttributeListItemWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAttributeList_NUI.OnClearShownAttributes
// (Event, Protected, BlueprintEvent)

void UFortAttributeList_NUI::OnClearShownAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "OnClearShownAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeList_NUI.OnRemoveShownAttributeListItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortAttributeListItem_NUI*       AttributeListItemWidget                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AtIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAttributeList_NUI::OnRemoveShownAttributeListItem(class UFortAttributeListItem_NUI* AttributeListItemWidget, int32 AtIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "OnRemoveShownAttributeListItem");

	Params::FortAttributeList_NUI_OnRemoveShownAttributeListItem Parms{};

	Parms.AttributeListItemWidget = AttributeListItemWidget;
	Parms.AtIndex = AtIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAttributeList_NUI.SetData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortDisplayAttribute>    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeList_NUI::SetData(const TArray<struct FFortDisplayAttribute>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "SetData");

	Params::FortAttributeList_NUI_SetData Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeList_NUI.SetPreviewData
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortDisplayAttribute>    Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeList_NUI::SetPreviewData(const TArray<struct FFortDisplayAttribute>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeList_NUI", "SetPreviewData");

	Params::FortAttributeList_NUI_SetPreviewData Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem_NUI.ClearPreview
// (Final, Native, Public, BlueprintCallable)

void UFortAttributeListItem_NUI::ClearPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "ClearPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem_NUI.DisplayAttributeChanged
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem_NUI::DisplayAttributeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "DisplayAttributeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem_NUI.PreviewEnded
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem_NUI::PreviewEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "PreviewEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem_NUI.PreviewStarted
// (Event, Public, BlueprintEvent)

void UFortAttributeListItem_NUI::PreviewStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "PreviewStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortAttributeListItem_NUI.SetDisplayAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDisplayAttribute            InDisplayAttribute                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::SetDisplayAttribute(const struct FFortDisplayAttribute& InDisplayAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "SetDisplayAttribute");

	Params::FortAttributeListItem_NUI_SetDisplayAttribute Parms{};

	Parms.InDisplayAttribute = std::move(InDisplayAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem_NUI.SetPreviewAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDisplayAttribute            InPreviewAttribute                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::SetPreviewAttribute(const struct FFortDisplayAttribute& InPreviewAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "SetPreviewAttribute");

	Params::FortAttributeListItem_NUI_SetPreviewAttribute Parms{};

	Parms.InPreviewAttribute = std::move(InPreviewAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortAttributeListItem_NUI.ValueChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::ValueChanged(float Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "ValueChanged");

	Params::FortAttributeListItem_NUI_ValueChanged Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortAttributeListItem_NUI.GetCurrentAttributeCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutDisplayAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::GetCurrentAttributeCopy(struct FFortDisplayAttribute* OutDisplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "GetCurrentAttributeCopy");

	Params::FortAttributeListItem_NUI_GetCurrentAttributeCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttribute != nullptr)
		*OutDisplayAttribute = std::move(Parms.OutDisplayAttribute);
}


// Function FortniteUI.FortAttributeListItem_NUI.GetDisplayAttributeCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutDisplayAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::GetDisplayAttributeCopy(struct FFortDisplayAttribute* OutDisplayAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "GetDisplayAttributeCopy");

	Params::FortAttributeListItem_NUI_GetDisplayAttributeCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttribute != nullptr)
		*OutDisplayAttribute = std::move(Parms.OutDisplayAttribute);
}


// Function FortniteUI.FortAttributeListItem_NUI.GetDisplayPreviewCopy
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortDisplayAttribute            OutPreviewAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortAttributeListItem_NUI::GetDisplayPreviewCopy(struct FFortDisplayAttribute* OutPreviewAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "GetDisplayPreviewCopy");

	Params::FortAttributeListItem_NUI_GetDisplayPreviewCopy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPreviewAttribute != nullptr)
		*OutPreviewAttribute = std::move(Parms.OutPreviewAttribute);
}


// Function FortniteUI.FortAttributeListItem_NUI.HasPreviewAttribute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAttributeListItem_NUI::HasPreviewAttribute() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttributeListItem_NUI", "HasPreviewAttribute");

	Params::FortAttributeListItem_NUI_HasPreviewAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBangWrapperOld.SetBangVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBangWrapperOld::SetBangVisibility(bool InVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperOld", "SetBangVisibility");

	Params::FortBangWrapperOld_SetBangVisibility Parms{};

	Parms.InVisible = InVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBangWrapperContentButton.FinishTutorialCallout
// (Final, Native, Public, BlueprintCallable)

void UFortBangWrapperContentButton::FinishTutorialCallout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperContentButton", "FinishTutorialCallout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBangWrapperContentWidget.FinishTutorialCallout
// (Final, Native, Public, BlueprintCallable)

void UFortBangWrapperContentWidget::FinishTutorialCallout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBangWrapperContentWidget", "FinishTutorialCallout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.GetArbitratorType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortVoteArbitratorType UFortMissionActivationInfo::GetArbitratorType(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetArbitratorType");

	Params::FortMissionActivationInfo_GetArbitratorType Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetVoteCounts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutYesVoteCount                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutNoVoteCount                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::GetVoteCounts(EFortVoteType VoteType, int32* OutYesVoteCount, int32* OutNoVoteCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetVoteCounts");

	Params::FortMissionActivationInfo_GetVoteCounts Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutYesVoteCount != nullptr)
		*OutYesVoteCount = Parms.OutYesVoteCount;

	if (OutNoVoteCount != nullptr)
		*OutNoVoteCount = Parms.OutNoVoteCount;
}


// Function FortniteUI.FortMissionActivationInfo.GetVoters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FVoter> UFortMissionActivationInfo::GetVoters(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetVoters");

	Params::FortMissionActivationInfo_GetVoters Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.HandleGameplayVoteUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteStatus                         VoteStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVoter>                   Voters                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::HandleGameplayVoteUpdated(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32 VoteResult, const TArray<struct FVoter>& Voters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "HandleGameplayVoteUpdated");

	Params::FortMissionActivationInfo_HandleGameplayVoteUpdated Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteStatus = VoteStatus;
	Parms.VoteResult = VoteResult;
	Parms.Voters = std::move(Voters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.HandleTeamMemberAdded
// (Final, Native, Private)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::HandleTeamMemberAdded(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "HandleTeamMemberAdded");

	Params::FortMissionActivationInfo_HandleTeamMemberAdded Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.HandleTeamMemberRemoved
// (Final, Native, Private)
// Parameters:
// int32                                   RemovedIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::HandleTeamMemberRemoved(int32 RemovedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "HandleTeamMemberRemoved");

	Params::FortMissionActivationInfo_HandleTeamMemberRemoved Parms{};

	Parms.RemovedIndex = RemovedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.HasPlayerVoted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::HasPlayerVoted(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "HasPlayerVoted");

	Params::FortMissionActivationInfo_HasPlayerVoted Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.RequestVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VoteDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FailedVoteLockOutDuration                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortVoteArbitratorType                 ArbitratorType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::RequestVote(EFortVoteType VoteType, float VoteDuration, float FailedVoteLockOutDuration, EFortVoteArbitratorType ArbitratorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "RequestVote");

	Params::FortMissionActivationInfo_RequestVote Parms{};

	Parms.VoteType = VoteType;
	Parms.VoteDuration = VoteDuration;
	Parms.FailedVoteLockOutDuration = FailedVoteLockOutDuration;
	Parms.ArbitratorType = ArbitratorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.SubmitVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApprove                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::SubmitVote(EFortVoteType VoteType, bool bApprove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "SubmitVote");

	Params::FortMissionActivationInfo_SubmitVote Parms{};

	Parms.VoteType = VoteType;
	Parms.bApprove = bApprove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationInfo.CanRequestVote
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::CanRequestVote(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "CanRequestVote");

	Params::FortMissionActivationInfo_CanRequestVote Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.DoesPrimaryMissionContainTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::DoesPrimaryMissionContainTags(const struct FGameplayTagContainer& Tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "DoesPrimaryMissionContainTags");

	Params::FortMissionActivationInfo_DoesPrimaryMissionContainTags Parms{};

	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetAvailableBluGloCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfo::GetAvailableBluGloCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetAvailableBluGloCount");

	Params::FortMissionActivationInfo_GetAvailableBluGloCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetDeltaRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   BaseDifficultyIncreaseTier                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ComparedDifficultyIncreaseTier                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemDelta>           DeltaRewards                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortMissionActivationInfo::GetDeltaRewards(int32 BaseDifficultyIncreaseTier, int32 ComparedDifficultyIncreaseTier, TArray<struct FFortItemDelta>* DeltaRewards) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetDeltaRewards");

	Params::FortMissionActivationInfo_GetDeltaRewards Parms{};

	Parms.BaseDifficultyIncreaseTier = BaseDifficultyIncreaseTier;
	Parms.ComparedDifficultyIncreaseTier = ComparedDifficultyIncreaseTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeltaRewards != nullptr)
		*DeltaRewards = std::move(Parms.DeltaRewards);
}


// Function FortniteUI.FortMissionActivationInfo.GetIncreaseDifficultyBluGloRequirement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfo::GetIncreaseDifficultyBluGloRequirement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetIncreaseDifficultyBluGloRequirement");

	Params::FortMissionActivationInfo_GetIncreaseDifficultyBluGloRequirement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetInstigatorId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortMissionActivationInfo::GetInstigatorId(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetInstigatorId");

	Params::FortMissionActivationInfo_GetInstigatorId Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetLockoutTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMissionActivationInfo::GetLockoutTimeRemaining(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetLockoutTimeRemaining");

	Params::FortMissionActivationInfo_GetLockoutTimeRemaining Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetMissionObjectiveTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionActivationInfo::GetMissionObjectiveTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetMissionObjectiveTimeRemaining");

	Params::FortMissionActivationInfo_GetMissionObjectiveTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetMissionVoteType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortVoteType UFortMissionActivationInfo::GetMissionVoteType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetMissionVoteType");

	Params::FortMissionActivationInfo_GetMissionVoteType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetPrimaryMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortMissionActivationInfo::GetPrimaryMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetPrimaryMission");

	Params::FortMissionActivationInfo_GetPrimaryMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetPrimaryMissionInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMissionInfo*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionInfo* UFortMissionActivationInfo::GetPrimaryMissionInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetPrimaryMissionInfo");

	Params::FortMissionActivationInfo_GetPrimaryMissionInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetStartObjectiveBluGloRequirement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionActivationInfo::GetStartObjectiveBluGloRequirement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetStartObjectiveBluGloRequirement");

	Params::FortMissionActivationInfo_GetStartObjectiveBluGloRequirement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.GetVoteTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionActivationInfo::GetVoteTimeRemaining(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "GetVoteTimeRemaining");

	Params::FortMissionActivationInfo_GetVoteTimeRemaining Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.IsAnyVoteActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::IsAnyVoteActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "IsAnyVoteActive");

	Params::FortMissionActivationInfo_IsAnyVoteActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.IsPlayerVoteInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::IsPlayerVoteInstigator(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "IsPlayerVoteInstigator");

	Params::FortMissionActivationInfo_IsPlayerVoteInstigator Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.IsVoteActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::IsVoteActive(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "IsVoteActive");

	Params::FortMissionActivationInfo_IsVoteActive Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.IsVoteLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionActivationInfo::IsVoteLocked(EFortVoteType VoteType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "IsVoteLocked");

	Params::FortMissionActivationInfo_IsVoteLocked Parms{};

	Parms.VoteType = VoteType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationInfo.TimeSecondsToText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   InSeconds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMissionActivationInfo::TimeSecondsToText(float InSeconds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationInfo", "TimeSecondsToText");

	Params::FortMissionActivationInfo_TimeSecondsToText Parms{};

	Parms.InSeconds = InSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetBrushBySizeFromMultiSizeBrush
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortMultiSizeBrush              MultiSizeBrush                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateBrush                ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

const struct FSlateBrush UFortButtonStyle::GetBrushBySizeFromMultiSizeBrush(const struct FFortMultiSizeBrush& MultiSizeBrush, EFortBrushSize Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortButtonStyle", "GetBrushBySizeFromMultiSizeBrush");

	Params::FortButtonStyle_GetBrushBySizeFromMultiSizeBrush Parms{};

	Parms.MultiSizeBrush = std::move(MultiSizeBrush);
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetFontBySizeFromMultiSizeFont
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortMultiSizeFont               MultiSizeFont                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateFontInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FSlateFontInfo UFortButtonStyle::GetFontBySizeFromMultiSizeFont(const struct FFortMultiSizeFont& MultiSizeFont, EFortBrushSize Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortButtonStyle", "GetFontBySizeFromMultiSizeFont");

	Params::FortButtonStyle_GetFontBySizeFromMultiSizeFont Parms{};

	Parms.MultiSizeFont = std::move(MultiSizeFont);
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetMarginBySizeFromMultiSizeMargin
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortMultiSizeMargin             MultiSizeMargin                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UFortButtonStyle::GetMarginBySizeFromMultiSizeMargin(const struct FFortMultiSizeMargin& MultiSizeMargin, EFortBrushSize Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortButtonStyle", "GetMarginBySizeFromMultiSizeMargin");

	Params::FortButtonStyle_GetMarginBySizeFromMultiSizeMargin Parms{};

	Parms.MultiSizeMargin = std::move(MultiSizeMargin);
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetButtonPaddingBySize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UFortButtonStyle::GetButtonPaddingBySize(EFortBrushSize Size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortButtonStyle", "GetButtonPaddingBySize");

	Params::FortButtonStyle_GetButtonPaddingBySize Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetCustomPaddingBySize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FMargin                    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

const struct FMargin UFortButtonStyle::GetCustomPaddingBySize(EFortBrushSize Size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortButtonStyle", "GetCustomPaddingBySize");

	Params::FortButtonStyle_GetCustomPaddingBySize Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortButtonStyle.GetFontBySize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FSlateFontInfo             ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FSlateFontInfo UFortButtonStyle::GetFontBySize(EFortBrushSize Size) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortButtonStyle", "GetFontBySize");

	Params::FortButtonStyle_GetFontBySize Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortBluGloCounter.OnBluGloQuantityChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBluGloCounter::OnBluGloQuantityChanged(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBluGloCounter", "OnBluGloQuantityChanged");

	Params::FortBluGloCounter_OnBluGloQuantityChanged Parms{};

	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortBuildingInfoIndicatorWidget.SetKeyBindWidgetBoundAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortKeybindWidget*               FortKeybindWidget                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingInteraction                InteractionType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingInfoIndicatorWidget::SetKeyBindWidgetBoundAction(class UFortKeybindWidget* FortKeybindWidget, const class FName ActionName, const EFortBuildingInteraction InteractionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingInfoIndicatorWidget", "SetKeyBindWidgetBoundAction");

	Params::FortBuildingInfoIndicatorWidget_SetKeyBindWidgetBoundAction Parms{};

	Parms.FortKeybindWidget = FortKeybindWidget;
	Parms.ActionName = ActionName;
	Parms.InteractionType = InteractionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCampaignMap.OnShowNextPage
// (Event, Public, BlueprintEvent)

void UFortCampaignMap::OnShowNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCampaignMap", "OnShowNextPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCampaignMap.OnShowPreviousPage
// (Event, Public, BlueprintEvent)

void UFortCampaignMap::OnShowPreviousPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCampaignMap", "OnShowPreviousPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCampaignMap.OnSwipeLeft
// (Final, Native, Private)

void UFortCampaignMap::OnSwipeLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCampaignMap", "OnSwipeLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCampaignMap.OnSwipeRight
// (Final, Native, Private)

void UFortCampaignMap::OnSwipeRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCampaignMap", "OnSwipeRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.DisposeLayout
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapNodeLayout::DisposeLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "DisposeLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.HandleQuestButtonSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedQuestButton                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout::HandleQuestButtonSelected(class UCommonButton* SelectedQuestButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "HandleQuestButtonSelected");

	Params::FortQuestMapNodeLayout_HandleQuestButtonSelected Parms{};

	Parms.SelectedQuestButton = SelectedQuestButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.HandleQuestIndexSelectionModelIndexChanged
// (Final, Native, Private)

void UFortQuestMapNodeLayout::HandleQuestIndexSelectionModelIndexChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "HandleQuestIndexSelectionModelIndexChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.SetLayoutPanel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*                     Value                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout::SetLayoutPanel(class UPanelWidget* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "SetLayoutPanel");

	Params::FortQuestMapNodeLayout_SetLayoutPanel Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.SetParentScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestMapScreen*              Parent                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapNodeLayout::SetParentScreen(class UFortQuestMapScreen* Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "SetParentScreen");

	Params::FortQuestMapNodeLayout_SetParentScreen Parms{};

	Parms.Parent = Parent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapNodeLayout.GetQuestPageData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortQuestMapPage                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortQuestMapPage UFortQuestMapNodeLayout::GetQuestPageData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapNodeLayout", "GetQuestPageData");

	Params::FortQuestMapNodeLayout_GetQuestPageData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCampaignTeamMemberEntry.OnPlayerAttributesChanged
// (Event, Protected, BlueprintEvent)

void UFortCampaignTeamMemberEntry::OnPlayerAttributesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCampaignTeamMemberEntry", "OnPlayerAttributesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortChatContainer.HandleGetMenuContentForAnchor
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortChatContainer::HandleGetMenuContentForAnchor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatContainer", "HandleGetMenuContentForAnchor");

	Params::FortChatContainer_HandleGetMenuContentForAnchor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortChatContainer.OnSendButtonDisplayChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowSendButton                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChatContainer::OnSendButtonDisplayChanged(bool bShowSendButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatContainer", "OnSendButtonDisplayChanged");

	Params::FortChatContainer_OnSendButtonDisplayChanged Parms{};

	Parms.bShowSendButton = bShowSendButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChatMessageEntry.OnFocusedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFocused                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChatMessageEntry::OnFocusedChanged(bool bIsFocused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatMessageEntry", "OnFocusedChanged");

	Params::FortChatMessageEntry_OnFocusedChanged Parms{};

	Parms.bIsFocused = bIsFocused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChatPanel.OnWidgetIsOnFocusedPathChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bOnFocusPath                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortChatPanel::OnWidgetIsOnFocusedPathChanged(bool bOnFocusPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatPanel", "OnWidgetIsOnFocusedPathChanged");

	Params::FortChatPanel_OnWidgetIsOnFocusedPathChanged Parms{};

	Parms.bOnFocusPath = bOnFocusPath;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortChatWidget.FocusChatEntry
// (Final, Native, Public, BlueprintCallable)

void UFortChatWidget::FocusChatEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatWidget", "FocusChatEntry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChatWidget.MinimizeChatWidget
// (Final, Native, Public, BlueprintCallable)

void UFortChatWidget::MinimizeChatWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatWidget", "MinimizeChatWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortChatWidget.SetControllerActionBrush
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      SlateBrush                                             (Parm, NativeAccessSpecifierPublic)

void UFortChatWidget::SetControllerActionBrush(const struct FSlateBrush& SlateBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortChatWidget", "SetControllerActionBrush");

	Params::FortChatWidget_SetControllerActionBrush Parms{};

	Parms.SlateBrush = std::move(SlateBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCheatMenuFactory.AddGrantCheatMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InstanceId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatMenuFactory::AddGrantCheatMenu(class UCommonUserWidget* Widget, const class FString& TemplateId, const class FString& InstanceId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCheatMenuFactory", "AddGrantCheatMenu");

	Params::FortCheatMenuFactory_AddGrantCheatMenu Parms{};

	Parms.Widget = Widget;
	Parms.TemplateId = std::move(TemplateId);
	Parms.InstanceId = std::move(InstanceId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCheatMenuFactory.AddStoreCheatMenu
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatMenuFactory::AddStoreCheatMenu(class UCommonUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCheatMenuFactory", "AddStoreCheatMenu");

	Params::FortCheatMenuFactory_AddStoreCheatMenu Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLoginStatus.SetLoginStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InLoginStatus                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortLoginStatus::SetLoginStatus(const class FText& InLoginStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLoginStatus", "SetLoginStatus");

	Params::FortLoginStatus_SetLoginStatus Parms{};

	Parms.InLoginStatus = std::move(InLoginStatus);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLoginStatus.SetTitleText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortLoginStatus::SetTitleText(const class FText& TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLoginStatus", "SetTitleText");

	Params::FortLoginStatus_SetTitleText Parms{};

	Parms.TitleText = std::move(TitleText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCMSInfoCarousel.NavigatePageLeft
// (Final, Native, Protected, BlueprintCallable)

void UFortCMSInfoCarousel::NavigatePageLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCMSInfoCarousel", "NavigatePageLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCMSInfoCarousel.NavigatePageRight
// (Final, Native, Protected, BlueprintCallable)

void UFortCMSInfoCarousel::NavigatePageRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCMSInfoCarousel", "NavigatePageRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPurchaseHistoryEntry.SetPurchaseText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PurchaseText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bHasBeenRefunded                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::SetPurchaseText(const class FText& PurchaseText, bool bHasBeenRefunded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "SetPurchaseText");

	Params::FortPurchaseHistoryEntry_SetPurchaseText Parms{};

	Parms.PurchaseText = std::move(PurchaseText);
	Parms.bHasBeenRefunded = bHasBeenRefunded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryEntry.SetRefundState
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             PurchaseText                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EItemRefundability                      Refundability                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::SetRefundState(const class FText& PurchaseText, EItemRefundability Refundability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "SetRefundState");

	Params::FortPurchaseHistoryEntry_SetRefundState Parms{};

	Parms.PurchaseText = std::move(PurchaseText);
	Parms.Refundability = Refundability;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryEntry.UpdateItemList
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UFortMultiSizeItemCard*>   ItemCards                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryEntry::UpdateItemList(const TArray<class UFortMultiSizeItemCard*>& ItemCards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryEntry", "UpdateItemList");

	Params::FortPurchaseHistoryEntry_UpdateItemList Parms{};

	Parms.ItemCards = std::move(ItemCards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.ClearRewards
// (Native, Public, BlueprintCallable)

void UFortCollectionBookGenericRewardWidget::ClearRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "ClearRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.OnRewardStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// ECollectionBookRewardStatus             NewStatus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::OnRewardStatusChanged(ECollectionBookRewardStatus NewStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "OnRewardStatusChanged");

	Params::FortCollectionBookGenericRewardWidget_OnRewardStatusChanged Parms{};

	Parms.NewStatus = NewStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetCurrentItemToDisplay
// (Native, Protected)
// Parameters:
// class UFortItem*                        ItemToDisplay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetCurrentItemToDisplay(class UFortItem* ItemToDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "SetCurrentItemToDisplay");

	Params::FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay Parms{};

	Parms.ItemToDisplay = ItemToDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetRewards
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  Rewards                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetRewards(const struct FFortRewardInfo& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "SetRewards");

	Params::FortCollectionBookGenericRewardWidget_SetRewards Parms{};

	Parms.Rewards = std::move(Rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetRewardStatus
// (Native, Public, BlueprintCallable)
// Parameters:
// ECollectionBookRewardStatus             Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookGenericRewardWidget::SetRewardStatus(ECollectionBookRewardStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "SetRewardStatus");

	Params::FortCollectionBookGenericRewardWidget_SetRewardStatus Parms{};

	Parms.Status = Status;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.GetRewardStatus
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECollectionBookRewardStatus             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECollectionBookRewardStatus UFortCollectionBookGenericRewardWidget::GetRewardStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "GetRewardStatus");

	Params::FortCollectionBookGenericRewardWidget_GetRewardStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookGenericRewardWidget.HasRewards
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookGenericRewardWidget::HasRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookGenericRewardWidget", "HasRewards");

	Params::FortCollectionBookGenericRewardWidget_HasRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapDetailsPanel.DisplayActiveQuest
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapDetailsPanel::DisplayActiveQuest(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapDetailsPanel", "DisplayActiveQuest");

	Params::FortQuestMapDetailsPanel_DisplayActiveQuest Parms{};

	Parms.QuestItem = QuestItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapDetailsPanel.DisplayInactiveQuest
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItemDefinition*         QuestDef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapDetailsPanel::DisplayInactiveQuest(class UFortQuestItemDefinition* QuestDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapDetailsPanel", "DisplayInactiveQuest");

	Params::FortQuestMapDetailsPanel_DisplayInactiveQuest Parms{};

	Parms.QuestDef = QuestDef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookItemPopupMenu.CanItemBePurchased
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookItemPopupMenu::CanItemBePurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookItemPopupMenu", "CanItemBePurchased");

	Params::FortCollectionBookItemPopupMenu_CanItemBePurchased Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookItemPopupMenu.CanItemBeUnslotted
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookItemPopupMenu::CanItemBeUnslotted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookItemPopupMenu", "CanItemBeUnslotted");

	Params::FortCollectionBookItemPopupMenu_CanItemBeUnslotted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookItemPopupMenu.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookItemPopupMenu::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookItemPopupMenu", "HandleItemChanged");

	Params::FortCollectionBookItemPopupMenu_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookItemPopupMenu.HandleItemUpdated
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookItemPopupMenu::HandleItemUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookItemPopupMenu", "HandleItemUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCollectionBookItemPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCollectionBookSlotButton*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCollectionBookSlotButton* UFortCollectionBookItemPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookItemPopupMenu", "GetHostButton");

	Params::FortCollectionBookItemPopupMenu_GetHostButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookOverviewWidget.OnActivated
// (Native, Event, Public, BlueprintEvent)

void UFortCollectionBookOverviewWidget::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookOverviewWidget", "OnActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookOverviewWidget.OnDeactivated
// (Native, Event, Public, BlueprintEvent)

void UFortCollectionBookOverviewWidget::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookOverviewWidget", "OnDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleDelayedOnPlayerAttributesChanged
// (Final, Native, Private)

void UFortPlayerTrackerBase::HandleDelayedOnPlayerAttributesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleDelayedOnPlayerAttributesChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleOnLocalPlayerInfoUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleOnLocalPlayerInfoUpdated(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleOnLocalPlayerInfoUpdated");

	Params::FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleOnPlayerIdUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FUniqueNetIdRepl                 NewInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleOnPlayerIdUpdated(const struct FUniqueNetIdRepl& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleOnPlayerIdUpdated");

	Params::FortPlayerTrackerBase_HandleOnPlayerIdUpdated Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandlePartyLeft
// (Final, Native, Protected)

void UFortPlayerTrackerBase::HandlePartyLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandlePartyLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberAdded
// (Final, Native, Protected)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleTeamMemberAdded(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleTeamMemberAdded");

	Params::FortPlayerTrackerBase_HandleTeamMemberAdded Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberRemoved
// (Final, Native, Protected)
// Parameters:
// int32                                   RemovedIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleTeamMemberRemoved(int32 RemovedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleTeamMemberRemoved");

	Params::FortPlayerTrackerBase_HandleTeamMemberRemoved Parms{};

	Parms.RemovedIndex = RemovedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberStateChanged
// (Final, Native, Protected)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleTeamMemberStateChanged(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleTeamMemberStateChanged");

	Params::FortPlayerTrackerBase_HandleTeamMemberStateChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberStateChangedId
// (Final, Native, Protected)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::HandleTeamMemberStateChangedId(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleTeamMemberStateChangedId");

	Params::FortPlayerTrackerBase_HandleTeamMemberStateChangedId Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.HandleTooltipAttributeChanged
// (Final, Native, Private)

void UFortPlayerTrackerBase::HandleTooltipAttributeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HandleTooltipAttributeChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.OnPlayerAttributesChanged
// (Event, Public, BlueprintEvent)

void UFortPlayerTrackerBase::OnPlayerAttributesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "OnPlayerAttributesChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPlayerTrackerBase.OnPlayerInfoChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortTeamMemberInfo              NewInfo                                                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::OnPlayerInfoChanged(const struct FFortTeamMemberInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "OnPlayerInfoChanged");

	Params::FortPlayerTrackerBase_OnPlayerInfoChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPlayerTrackerBase.RegisterAttributeChangedDelegates
// (Final, Native, Protected)

void UFortPlayerTrackerBase::RegisterAttributeChangedDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "RegisterAttributeChangedDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.ReRegisterAttributeChangedDelegates
// (Final, Native, Protected)

void UFortPlayerTrackerBase::ReRegisterAttributeChangedDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "ReRegisterAttributeChangedDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.ResetPartyEvents
// (Final, Native, Protected)

void UFortPlayerTrackerBase::ResetPartyEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "ResetPartyEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.SetTeamMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPlayerIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::SetTeamMember(int32 InPlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "SetTeamMember");

	Params::FortPlayerTrackerBase_SetTeamMember Parms{};

	Parms.InPlayerIndex = InPlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.SetUniqueId
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::SetUniqueId(const struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "SetUniqueId");

	Params::FortPlayerTrackerBase_SetUniqueId Parms{};

	Parms.InUniqueId = std::move(InUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.SetUniqueIdInternal
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerTrackerBase::SetUniqueIdInternal(const struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "SetUniqueIdInternal");

	Params::FortPlayerTrackerBase_SetUniqueIdInternal Parms{};

	Parms.InUniqueId = std::move(InUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.UpdateBasedOnId
// (Final, Native, Protected)

void UFortPlayerTrackerBase::UpdateBasedOnId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "UpdateBasedOnId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBaseFortitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBaseFortitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBaseFortitude");

	Params::FortPlayerTrackerBase_GetBaseFortitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBaseOffense
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBaseOffense() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBaseOffense");

	Params::FortPlayerTrackerBase_GetBaseOffense Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBaseResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBaseResistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBaseResistance");

	Params::FortPlayerTrackerBase_GetBaseResistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBaseTech
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBaseTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBaseTech");

	Params::FortPlayerTrackerBase_GetBaseTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBuffedFortitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBuffedFortitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBuffedFortitude");

	Params::FortPlayerTrackerBase_GetBuffedFortitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBuffedOffense
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBuffedOffense() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBuffedOffense");

	Params::FortPlayerTrackerBase_GetBuffedOffense Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBuffedResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBuffedResistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBuffedResistance");

	Params::FortPlayerTrackerBase_GetBuffedResistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetBuffedTech
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetBuffedTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetBuffedTech");

	Params::FortPlayerTrackerBase_GetBuffedTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerTrackerBase::GetHomebaseRating(int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetHomebaseRating");

	Params::FortPlayerTrackerBase_GetHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetModifiedHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerTrackerBase::GetModifiedHomebaseRating(int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetModifiedHomebaseRating");

	Params::FortPlayerTrackerBase_GetModifiedHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetTeamFortitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetTeamFortitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetTeamFortitude");

	Params::FortPlayerTrackerBase_GetTeamFortitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetTeamOffense
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetTeamOffense() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetTeamOffense");

	Params::FortPlayerTrackerBase_GetTeamOffense Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetTeamResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetTeamResistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetTeamResistance");

	Params::FortPlayerTrackerBase_GetTeamResistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.GetTeamTech
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPlayerTrackerBase::GetTeamTech() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "GetTeamTech");

	Params::FortPlayerTrackerBase_GetTeamTech Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPlayerTrackerBase.HasModifiedStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlayerTrackerBase::HasModifiedStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerTrackerBase", "HasModifiedStats");

	Params::FortPlayerTrackerBase_HasModifiedStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookPageDetailsWidget.HandleRewardDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanel*          DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::HandleRewardDetailsModalWidgetDeactivated(class UCommonActivatablePanel* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageDetailsWidget", "HandleRewardDetailsModalWidgetDeactivated");

	Params::FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnDetailsPageChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          InNewDetailsPage                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnDetailsPageChanged(const class UFortCollectionBookPage* InNewDetailsPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageDetailsWidget", "OnDetailsPageChanged");

	Params::FortCollectionBookPageDetailsWidget_OnDetailsPageChanged Parms{};

	Parms.InNewDetailsPage = InNewDetailsPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnPageProgressionUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   TotalFilledSlots                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnPageProgressionUpdated(int32 TotalFilledSlots, int32 TotalSlots, EFortCollectionBookState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageDetailsWidget", "OnPageProgressionUpdated");

	Params::FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated Parms{};

	Parms.TotalFilledSlots = TotalFilledSlots;
	Parms.TotalSlots = TotalSlots;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnSlotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageDetailsWidget::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageDetailsWidget", "OnSlotItemComplete");

	Params::FortCollectionBookPageDetailsWidget_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.GetAdjacentPickerWheelInformation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             AdjacentTitle                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bCanPageThisDirection                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::GetAdjacentPickerWheelInformation(int32 Direction, class FText* AdjacentTitle, bool* bCanPageThisDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetAdjacentPickerWheelInformation");

	Params::FortPickerContext_GetAdjacentPickerWheelInformation Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdjacentTitle != nullptr)
		*AdjacentTitle = std::move(Parms.AdjacentTitle);

	if (bCanPageThisDirection != nullptr)
		*bCanPageThisDirection = Parms.bCanPageThisDirection;
}


// Function FortniteUI.FortPickerContext.GetCurrentPickerDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortPickerContext::GetCurrentPickerDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetCurrentPickerDisplayName");

	Params::FortPickerContext_GetCurrentPickerDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPickerContext.GetPickerWheelAdjacency
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bCanPageLeft                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanPageRight                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::GetPickerWheelAdjacency(bool* bCanPageLeft, bool* bCanPageRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetPickerWheelAdjacency");

	Params::FortPickerContext_GetPickerWheelAdjacency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCanPageLeft != nullptr)
		*bCanPageLeft = Parms.bCanPageLeft;

	if (bCanPageRight != nullptr)
		*bCanPageRight = Parms.bCanPageRight;
}


// Function FortniteUI.FortPickerContext.PickerCanceled
// (Final, Native, Public, BlueprintCallable)

void UFortPickerContext::PickerCanceled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "PickerCanceled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.PickerOptionAccepted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Option                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::PickerOptionAccepted(int32 Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "PickerOptionAccepted");

	Params::FortPickerContext_PickerOptionAccepted Parms{};

	Parms.Option = Option;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.RestoreInputAxes
// (Final, Native, Public, BlueprintCallable)

void UFortPickerContext::RestoreInputAxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "RestoreInputAxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.SetFortPickerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortPickerData*                  Data                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::SetFortPickerData(class UFortPickerData* Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "SetFortPickerData");

	Params::FortPickerContext_SetFortPickerData Parms{};

	Parms.Data = Data;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.ShowRadialPickerMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortPickerToDisplay                    PickerType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WheelIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::ShowRadialPickerMenu(EFortPickerToDisplay PickerType, int32 WheelIndex, class UObject* ContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "ShowRadialPickerMenu");

	Params::FortPickerContext_ShowRadialPickerMenu Parms{};

	Parms.PickerType = PickerType;
	Parms.WheelIndex = WheelIndex;
	Parms.ContextObject = ContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.SwitchToAdjacentWheel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SelectionDirection                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::SwitchToAdjacentWheel(int32 SelectionDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "SwitchToAdjacentWheel");

	Params::FortPickerContext_SwitchToAdjacentWheel Parms{};

	Parms.SelectionDirection = SelectionDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPickerContext.DoesRadialCloseOnRelease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPickerContext::DoesRadialCloseOnRelease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "DoesRadialCloseOnRelease");

	Params::FortPickerContext_DoesRadialCloseOnRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPickerContext.GetCurrentWheelIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPickerContext::GetCurrentWheelIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetCurrentWheelIndex");

	Params::FortPickerContext_GetCurrentWheelIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPickerContext.GetListPickerOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortPickerContext::GetListPickerOption(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetListPickerOption");

	Params::FortPickerContext_GetListPickerOption Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPickerContext.GetNumPickerOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPickerContext::GetNumPickerOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetNumPickerOptions");

	Params::FortPickerContext_GetNumPickerOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPickerContext.GetRadialPickerOptionImageAndLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Label                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Brush                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        Icon                                                   (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOptionEnabled                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::GetRadialPickerOptionImageAndLabel(int32 Param_Index, class FText* Label, struct FSlateBrush* Brush, TSoftObjectPtr<class UTexture2D>* Icon, bool* bOptionEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetRadialPickerOptionImageAndLabel");

	Params::FortPickerContext_GetRadialPickerOptionImageAndLabel Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Label != nullptr)
		*Label = std::move(Parms.Label);

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (bOptionEnabled != nullptr)
		*bOptionEnabled = Parms.bOptionEnabled;
}


// Function FortniteUI.FortPickerContext.GetRadialPickerOptionItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        Item                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOptionEnabled                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPickerContext::GetRadialPickerOptionItem(int32 Param_Index, class UFortItem** Item, bool* bOptionEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "GetRadialPickerOptionItem");

	Params::FortPickerContext_GetRadialPickerOptionItem Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Item != nullptr)
		*Item = Parms.Item;

	if (bOptionEnabled != nullptr)
		*bOptionEnabled = Parms.bOptionEnabled;
}


// Function FortniteUI.FortPickerContext.UseLeftThumbstick
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPickerContext::UseLeftThumbstick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickerContext", "UseLeftThumbstick");

	Params::FortPickerContext_UseLeftThumbstick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookPageListWidget.OnCategoryDetailsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AvailableSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FilledSlots                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnCategoryDetailsUpdated(int32 AvailableSlots, int32 FilledSlots, int32 TotalSlots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageListWidget", "OnCategoryDetailsUpdated");

	Params::FortCollectionBookPageListWidget_OnCategoryDetailsUpdated Parms{};

	Parms.AvailableSlots = AvailableSlots;
	Parms.FilledSlots = FilledSlots;
	Parms.TotalSlots = TotalSlots;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookPageListWidget.OnPageDetailsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AvailableSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FilledSlots                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalSlots                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnPageDetailsUpdated(int32 AvailableSlots, int32 FilledSlots, int32 TotalSlots, EFortCollectionBookState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageListWidget", "OnPageDetailsUpdated");

	Params::FortCollectionBookPageListWidget_OnPageDetailsUpdated Parms{};

	Parms.AvailableSlots = AvailableSlots;
	Parms.FilledSlots = FilledSlots;
	Parms.TotalSlots = TotalSlots;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookPageListWidget.OnSlotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageListWidget", "OnSlotItemComplete");

	Params::FortCollectionBookPageListWidget_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPageListWidget.SetupAsCategory
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookCategory*      Category                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::SetupAsCategory(class UFortCollectionBookCategory* Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageListWidget", "SetupAsCategory");

	Params::FortCollectionBookPageListWidget_SetupAsCategory Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookPageListWidget.SetupAsPage
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPageListWidget::SetupAsPage(class UFortCollectionBookPage* Page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPageListWidget", "SetupAsPage");

	Params::FortCollectionBookPageListWidget_SetupAsPage Parms{};

	Parms.Page = Page;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortCollectionBookPicker.OnSlotItemConfirmed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        ItemToSlot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleLatentActionHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortCollectionBookPicker::OnSlotItemConfirmed__DelegateSignature(class UFortItem* ItemToSlot, class FName SlotId, const struct FFortDialogExternalLatentActionHandle& LatentActionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPicker", "OnSlotItemConfirmed__DelegateSignature");

	Params::FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature Parms{};

	Parms.ItemToSlot = ItemToSlot;
	Parms.SlotId = SlotId;
	Parms.LatentActionHandle = std::move(LatentActionHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookPicker.SlotItemConfirmationComplete
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        CommittedItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleLatentActionHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortCollectionBookPicker::SlotItemConfirmationComplete(class UFortItem* CommittedItem, const struct FFortDialogExternalLatentActionHandle& LatentActionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPicker", "SlotItemConfirmationComplete");

	Params::FortCollectionBookPicker_SlotItemConfirmationComplete Parms{};

	Parms.CommittedItem = CommittedItem;
	Parms.LatentActionHandle = std::move(LatentActionHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPicker.GetCurrentSlottedItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* UFortCollectionBookPicker::GetCurrentSlottedItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPicker", "GetCurrentSlottedItem");

	Params::FortCollectionBookPicker_GetCurrentSlottedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnBackActionExecuted
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnBackActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnBackActionExecuted");

	Params::FortCollectionBookPrimaryPanel_OnBackActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageClicked
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          ClickedPage                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookPageClicked(const class UFortCollectionBookPage* ClickedPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnCollectionBookPageClicked");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked Parms{};

	Parms.ClickedPage = ClickedPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageSelected
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnCollectionBookPageSelected");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookSectionClicked
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       ClickedSection                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnCollectionBookSectionClicked(const class UFortCollectionBookSection* ClickedSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnCollectionBookSectionClicked");

	Params::FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked Parms{};

	Parms.ClickedSection = ClickedSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnInputMethodChanged");

	Params::FortCollectionBookPrimaryPanel_OnInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookPrimaryPanel.OnSummonInfoPanelExecuted
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookPrimaryPanel::OnSummonInfoPanelExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPrimaryPanel", "OnSummonInfoPanelExecuted");

	Params::FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookProgressionRewardDetailInspectWidget.OnXPRequiredChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewXPRequired                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardDetailInspectWidget::OnXPRequiredChanged(int32 NewXPRequired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardDetailInspectWidget", "OnXPRequiredChanged");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_OnXPRequiredChanged Parms{};

	Parms.NewXPRequired = NewXPRequired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookProgressionRewardDetailInspectWidget.SetAssociatedLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardDetailInspectWidget::SetAssociatedLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardDetailInspectWidget", "SetAssociatedLevel");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressionRewardDetailInspectWidget.GetXPRequired
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookProgressionRewardDetailInspectWidget::GetXPRequired() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardDetailInspectWidget", "GetXPRequired");

	Params::FortCollectionBookProgressionRewardDetailInspectWidget_GetXPRequired Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingItemCollectorActor*      OutItemCollector                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCollectorWidget::OnItemCollectorChanged(class ABuildingItemCollectorActor* OutItemCollector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCollectorWidget", "OnItemCollectorChanged");

	Params::FortItemCollectorWidget_OnItemCollectorChanged Parms{};

	Parms.OutItemCollector = OutItemCollector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EFortItemCollectorState                 ItemCollectorState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCollectorWidget::OnItemCollectorStateChanged(EFortItemCollectorState ItemCollectorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCollectorWidget", "OnItemCollectorStateChanged");

	Params::FortItemCollectorWidget_OnItemCollectorStateChanged Parms{};

	Parms.ItemCollectorState = ItemCollectorState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorValuesChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortWorldItemDefinition*         InputItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Goal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Deposit                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Captures                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCollectorWidget::OnItemCollectorValuesChanged(class UFortWorldItemDefinition* InputItem, int32 Goal, int32 Deposit, int32 Captures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCollectorWidget", "OnItemCollectorValuesChanged");

	Params::FortItemCollectorWidget_OnItemCollectorValuesChanged Parms{};

	Parms.InputItem = InputItem;
	Parms.Goal = Goal;
	Parms.Deposit = Deposit;
	Parms.Captures = Captures;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortWebLoginWidget.DismissWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortWebLoginWidget::DismissWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWebLoginWidget", "DismissWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortWebLoginWidget.DisplayWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          WebWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortWebLoginWidget::DisplayWidget(class UWidget* WebWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWebLoginWidget", "DisplayWidget");

	Params::FortWebLoginWidget_DisplayWidget Parms{};

	Parms.WebWidget = WebWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.InspectItemBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::InspectItemBP(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardsModalWidget", "InspectItemBP");

	Params::FortCollectionBookProgressionRewardsModalWidget_InspectItemBP Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bUsingGamepad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::OnInputMethodChanged(bool bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardsModalWidget", "OnInputMethodChanged");

	Params::FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged Parms{};

	Parms.bUsingGamepad = bUsingGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnLevelProgressionSet
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NextLvlPct                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::OnLevelProgressionSet(int32 CurrentLevel, float NextLvlPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardsModalWidget", "OnLevelProgressionSet");

	Params::FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.NextLvlPct = NextLvlPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnSelectedButtonChanged
// (Final, Native, Protected)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardsModalWidget::OnSelectedButtonChanged(class UCommonButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardsModalWidget", "OnSelectedButtonChanged");

	Params::FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressionRewardWidget.SetAssociatedLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressionRewardWidget::SetAssociatedLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressionRewardWidget", "SetAssociatedLevel");

	Params::FortCollectionBookProgressionRewardWidget_SetAssociatedLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.HandleDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanel*          DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::HandleDetailsModalWidgetDeactivated(class UCommonActivatablePanel* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "HandleDetailsModalWidgetDeactivated");

	Params::FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookLevelChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookLevelChanged(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "OnCollectionBookLevelChanged");

	Params::FortCollectionBookProgressWidget_OnCollectionBookLevelChanged Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookLevelProgressionChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   NewCompletionPct                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookLevelProgressionChanged(float NewCompletionPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "OnCollectionBookLevelProgressionChanged");

	Params::FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged Parms{};

	Parms.NewCompletionPct = NewCompletionPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookPageSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "OnCollectionBookPageSelected");

	Params::FortCollectionBookProgressWidget_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookPreviewXPChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   PreviewCompletionPct                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnCollectionBookPreviewXPChange(float PreviewCompletionPct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "OnCollectionBookPreviewXPChange");

	Params::FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange Parms{};

	Parms.PreviewCompletionPct = PreviewCompletionPct;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookProgressWidget.OnSlottedItemOperationComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemSlotted                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookProgressWidget::OnSlottedItemOperationComplete(const class UFortAccountItem* ItemSlotted, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookProgressWidget", "OnSlottedItemOperationComplete");

	Params::FortCollectionBookProgressWidget_OnSlottedItemOperationComplete Parms{};

	Parms.ItemSlotted = ItemSlotted;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget.BPOnActivatableChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewActivatable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::BPOnActivatableChanged(bool bNewActivatable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "BPOnActivatableChanged");

	Params::FortItemWidget_BPOnActivatableChanged Parms{};

	Parms.bNewActivatable = bNewActivatable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemWidget.BPOnCooldownSecondsChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewCooldownSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::BPOnCooldownSecondsChanged(int32 NewCooldownSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "BPOnCooldownSecondsChanged");

	Params::FortItemWidget_BPOnCooldownSecondsChanged Parms{};

	Parms.NewCooldownSeconds = NewCooldownSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemWidget.BPOnItemChanged
// (Event, Protected, BlueprintEvent)

void UFortItemWidget::BPOnItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "BPOnItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemWidget.BPOnItemSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::BPOnItemSet(class UFortItem* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "BPOnItemSet");

	Params::FortItemWidget_BPOnItemSet Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemWidget.GetItemToCompare
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemWidget::GetItemToCompare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetItemToCompare");

	Params::FortItemWidget_GetItemToCompare Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.OnFortItemDestroyed
// (Final, Native, Private)

void UFortItemWidget::OnFortItemDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "OnFortItemDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget.OnFortItemUpdated
// (Final, Native, Private)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::OnFortItemUpdated(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "OnFortItemUpdated");

	Params::FortItemWidget_OnFortItemUpdated Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortItemWidget.OnGetItemToCompare__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// class UFortItem*                        ItemToCompare                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::OnGetItemToCompare__DelegateSignature(class UFortItem** ItemToCompare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "OnGetItemToCompare__DelegateSignature");

	Params::FortItemWidget_OnGetItemToCompare__DelegateSignature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemToCompare != nullptr)
		*ItemToCompare = Parms.ItemToCompare;
}


// Function FortniteUI.FortItemWidget.SetCooldownMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         NewCooldownMaterial                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::SetCooldownMaterial(class UMaterialInstanceDynamic* NewCooldownMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "SetCooldownMaterial");

	Params::FortItemWidget_SetCooldownMaterial Parms{};

	Parms.NewCooldownMaterial = NewCooldownMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget.SetItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        InItem                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_QuantityOverride                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemWidget::SetItem(const class UFortItem* InItem, int32 Param_QuantityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "SetItem");

	Params::FortItemWidget_SetItem Parms{};

	Parms.InItem = InItem;
	Parms.Param_QuantityOverride = Param_QuantityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget.SetOnGetItemToCompareDelegate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(class UFortItem** ItemToCompare)>InDelegate                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortItemWidget::SetOnGetItemToCompareDelegate(TDelegate<void(class UFortItem** ItemToCompare)> InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "SetOnGetItemToCompareDelegate");

	Params::FortItemWidget_SetOnGetItemToCompareDelegate Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemWidget.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemWidget::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetDescription");

	Params::FortItemWidget_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemWidget::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetDisplayName");

	Params::FortItemWidget_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetDurability
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortItemWidget::GetDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetDurability");

	Params::FortItemWidget_GetDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetIconTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          InBrushSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UFortItemWidget::GetIconTexture(EFortBrushSize InBrushSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetIconTexture");

	Params::FortItemWidget_GetIconTexture Parms{};

	Parms.InBrushSize = InBrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemWidget::GetItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetItem");

	Params::FortItemWidget_GetItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemWidget::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetLevel");

	Params::FortItemWidget_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortItemWidget::GetRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetRarity");

	Params::FortItemWidget_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetStackCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemWidget::GetStackCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetStackCount");

	Params::FortItemWidget_GetStackCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.GetType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortItemWidget::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "GetType");

	Params::FortItemWidget_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.HasDurability
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::HasDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "HasDurability");

	Params::FortItemWidget_HasDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.HasLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::HasLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "HasLevel");

	Params::FortItemWidget_HasLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.HasSecondaryCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::HasSecondaryCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "HasSecondaryCategory");

	Params::FortItemWidget_HasSecondaryCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.HasTertiaryCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::HasTertiaryCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "HasTertiaryCategory");

	Params::FortItemWidget_HasTertiaryCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::IsEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "IsEquipped");

	Params::FortItemWidget_IsEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.IsInventoryOverflowItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::IsInventoryOverflowItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "IsInventoryOverflowItem");

	Params::FortItemWidget_IsInventoryOverflowItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.IsItemValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::IsItemValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "IsItemValid");

	Params::FortItemWidget_IsItemValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.IsSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::IsSchematic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "IsSchematic");

	Params::FortItemWidget_IsSchematic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemWidget.IsSlotted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemWidget::IsSlotted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemWidget", "IsSlotted");

	Params::FortItemWidget_IsSlotted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookRecycleSlotResultsWidget.SetCurrentItemToRecycle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 InItemToRecycle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookRecycleSlotResultsWidget::SetCurrentItemToRecycle(class UFortAccountItem* InItemToRecycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookRecycleSlotResultsWidget", "SetCurrentItemToRecycle");

	Params::FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle Parms{};

	Parms.InItemToRecycle = InItemToRecycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenuSetting.CenterOnWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortOptionsMenuSetting::CenterOnWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenuSetting", "CenterOnWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortOptionsMenuSetting.UpdateSetting
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonTextBlock*                 TooltipTextBlock                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOptionsMenuSetting::UpdateSetting(class UCommonTextBlock* TooltipTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenuSetting", "UpdateSetting");

	Params::FortOptionsMenuSetting_UpdateSetting Parms{};

	Parms.TooltipTextBlock = TooltipTextBlock;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookRewardCardWidget.ClearRewards
// (Native, Public, BlueprintCallable)

void UFortCollectionBookRewardCardWidget::ClearRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookRewardCardWidget", "ClearRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortCollectionBookRewardCardWidget.OnDisplayedItemChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        DisplayedItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookRewardCardWidget::OnDisplayedItemChangedEvent__DelegateSignature(class UFortItem* DisplayedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookRewardCardWidget", "OnDisplayedItemChangedEvent__DelegateSignature");

	Params::FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature Parms{};

	Parms.DisplayedItem = DisplayedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookRewardCardWidget.SetRewards
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  Rewards                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCollectionBookRewardCardWidget::SetRewards(const struct FFortRewardInfo& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookRewardCardWidget", "SetRewards");

	Params::FortCollectionBookRewardCardWidget_SetRewards Parms{};

	Parms.Rewards = std::move(Rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookRewardCardWidget.HasRewards
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookRewardCardWidget::HasRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookRewardCardWidget", "HasRewards");

	Params::FortCollectionBookRewardCardWidget_HasRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSectionCompletionRewardWidget.HandleRewardDetailsModalWidgetDeactivated
// (Final, Native, Private)
// Parameters:
// class UCommonActivatablePanel*          DeactivatedPanel                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionCompletionRewardWidget::HandleRewardDetailsModalWidgetDeactivated(class UCommonActivatablePanel* DeactivatedPanel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionCompletionRewardWidget", "HandleRewardDetailsModalWidgetDeactivated");

	Params::FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated Parms{};

	Parms.DeactivatedPanel = DeactivatedPanel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnBackActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnBackActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnBackActionExecuted");

	Params::FortCollectionBookSectionPanel_OnBackActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnInputMethodChanged
// (Final, Native, Protected)
// Parameters:
// ECommonInputType                        CurrentInputType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnInputMethodChanged(ECommonInputType CurrentInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnInputMethodChanged");

	Params::FortCollectionBookSectionPanel_OnInputMethodChanged Parms{};

	Parms.CurrentInputType = CurrentInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnInspectActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnInspectActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnInspectActionExecuted");

	Params::FortCollectionBookSectionPanel_OnInspectActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// DelegateFunction FortniteUI.FortCollectionBookSectionPanel.OnItemAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnItemAction__DelegateSignature(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnItemAction__DelegateSignature");

	Params::FortCollectionBookSectionPanel_OnItemAction__DelegateSignature Parms{};

	Parms.SelectedItem = SelectedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortCollectionBookSectionPanel.OnItemInspectAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    EnableItemActions                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPlaceholderItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnItemInspectAction__DelegateSignature(class UFortItem* SelectedItem, bool EnableItemActions, bool IsPlaceholderItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnItemInspectAction__DelegateSignature");

	Params::FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.EnableItemActions = EnableItemActions;
	Parms.IsPlaceholderItem = IsPlaceholderItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnLogAllowedItemsActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnLogAllowedItemsActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnLogAllowedItemsActionExecuted");

	Params::FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnOpenPickerActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnOpenPickerActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnOpenPickerActionExecuted");

	Params::FortCollectionBookSectionPanel_OnOpenPickerActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnPurchaseItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnPurchaseItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnPurchaseItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnPurchaseItemActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// DelegateFunction FortniteUI.FortCollectionBookSectionPanel.OnResearchItemAction__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortCollectionBookSlotData      SlotData                                               (ConstParm, Parm, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnResearchItemAction__DelegateSignature(class UFortItem* SelectedItem, const struct FFortCollectionBookSlotData& SlotData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnResearchItemAction__DelegateSignature");

	Params::FortCollectionBookSectionPanel_OnResearchItemAction__DelegateSignature Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.SlotData = std::move(SlotData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnResearchItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 NewItem                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnResearchItemOperationComplete(const class UFortAccountItem* NewItem, const class FString& TemplateId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnResearchItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnResearchItemOperationComplete Parms{};

	Parms.NewItem = NewItem;
	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSectionChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       Section                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSectionChanged(const class UFortCollectionBookSection* Section)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSectionChanged");

	Params::FortCollectionBookSectionPanel_OnSectionChanged Parms{};

	Parms.Section = Section;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotButtonContextAction
// (Final, Native, Protected)
// Parameters:
// EFortCollectionBookPopupButtonType      ContextAction                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonContextAction(EFortCollectionBookPopupButtonType ContextAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotButtonContextAction");

	Params::FortCollectionBookSectionPanel_OnSlotButtonContextAction Parms{};

	Parms.ContextAction = ContextAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotButtonHovered
// (Final, Native, Protected)
// Parameters:
// int32                                   ButtonIx                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonHovered(int32 ButtonIx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotButtonHovered");

	Params::FortCollectionBookSectionPanel_OnSlotButtonHovered Parms{};

	Parms.ButtonIx = ButtonIx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotButtonSelected
// (Final, Native, Protected)
// Parameters:
// class UFortCollectionBookSlotButton*    SlotButton                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotButtonSelected(const class UFortCollectionBookSlotButton* SlotButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotButtonSelected");

	Params::FortCollectionBookSectionPanel_OnSlotButtonSelected Parms{};

	Parms.SlotButton = SlotButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnSlotItemActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotItemComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotItemComplete");

	Params::FortCollectionBookSectionPanel_OnSlotItemComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemConfirmationCompleted
// (Final, Native, Protected)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleLatentActionHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotItemConfirmationCompleted(class UFortItem* SelectedItem, class FName SlotId, const struct FFortDialogExternalLatentActionHandle& LatentActionHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotItemConfirmationCompleted");

	Params::FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.SlotId = SlotId;
	Parms.LatentActionHandle = std::move(LatentActionHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotPickerItemHovered
// (Final, Native, Protected)
// Parameters:
// class UFortItem*                        HoveredItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotPickerItemHovered(class UFortItem* HoveredItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotPickerItemHovered");

	Params::FortCollectionBookSectionPanel_OnSlotPickerItemHovered Parms{};

	Parms.HoveredItem = HoveredItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotPickerItemSelected
// (Final, Native, Protected)
// Parameters:
// class UFortItem*                        SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlotPickerItemSelected(class UFortItem* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlotPickerItemSelected");

	Params::FortCollectionBookSectionPanel_OnSlotPickerItemSelected Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnSlottedItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 SlottedItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnSlottedItemOperationComplete(const class UFortAccountItem* SlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnSlottedItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnSlottedItemOperationComplete Parms{};

	Parms.SlottedItem = SlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnUnslotItemActionExecuted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemActionExecuted(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnUnslotItemActionExecuted");

	Params::FortCollectionBookSectionPanel_OnUnslotItemActionExecuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnUnslotItemComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        UnslottedItem                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemComplete(const class UFortItem* UnslottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnUnslotItemComplete");

	Params::FortCollectionBookSectionPanel_OnUnslotItemComplete Parms{};

	Parms.UnslottedItem = UnslottedItem;
	Parms.SlotId = SlotId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCollectionBookSectionPanel.OnUnslotItemOperationComplete
// (Final, Native, Private)
// Parameters:
// class UFortAccountItem*                 UnslottedItem                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldSlottedItem                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionPanel::OnUnslotItemOperationComplete(const class UFortAccountItem* UnslottedItem, const class UFortAccountItem* OldSlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionPanel", "OnUnslotItemOperationComplete");

	Params::FortCollectionBookSectionPanel_OnUnslotItemOperationComplete Parms{};

	Parms.UnslottedItem = UnslottedItem;
	Parms.OldSlottedItem = OldSlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionTileWidget.OnItemSlotted
// (Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemSlotted                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnItemSlotted(const class UFortAccountItem* ItemSlotted, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionTileWidget", "OnItemSlotted");

	Params::FortCollectionBookSectionTileWidget_OnItemSlotted Parms{};

	Parms.ItemSlotted = ItemSlotted;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionTileWidget.OnItemUnslotted
// (Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemUnslotted                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 OldSlottedItem                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnItemUnslotted(const class UFortAccountItem* ItemUnslotted, const class UFortAccountItem* OldSlottedItem, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionTileWidget", "OnItemUnslotted");

	Params::FortCollectionBookSectionTileWidget_OnItemUnslotted Parms{};

	Parms.ItemUnslotted = ItemUnslotted;
	Parms.OldSlottedItem = OldSlottedItem;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSectionTileWidget.OnSectionSlotUpdate
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumFilledSlots                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSlots                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                SectionState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSectionTileWidget::OnSectionSlotUpdate(int32 NumFilledSlots, int32 NumSlots, EFortCollectionBookState SectionState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSectionTileWidget", "OnSectionSlotUpdate");

	Params::FortCollectionBookSectionTileWidget_OnSectionSlotUpdate Parms{};

	Parms.NumFilledSlots = NumFilledSlots;
	Parms.NumSlots = NumSlots;
	Parms.SectionState = SectionState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortCollectionBookSlotButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotButton", "GetPopupMenu");

	Params::FortCollectionBookSlotButton_GetPopupMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSlotButton.OnSlottedItemUpdated
// (Final, Native, Private)

void UFortCollectionBookSlotButton::OnSlottedItemUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotButton", "OnSlottedItemUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotButton.PopupMenuClosedWithAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCollectionBookPopupButtonType      Selection                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotButton::PopupMenuClosedWithAction(EFortCollectionBookPopupButtonType Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotButton", "PopupMenuClosedWithAction");

	Params::FortCollectionBookSlotButton_PopupMenuClosedWithAction Parms{};

	Parms.Selection = Selection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadStatValueWithIcon.HandleDifferentAttributeSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadStatValueWithIcon::HandleDifferentAttributeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadStatValueWithIcon", "HandleDifferentAttributeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCollectionBookSlotView.OnSelectedSlotButtonChanged
// (Native, Protected)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSelectedSlotButtonChanged(class UCommonButton* SelectedButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotView", "OnSelectedSlotButtonChanged");

	Params::FortCollectionBookSlotView_OnSelectedSlotButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIdx = ButtonIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotView.OnSlotButtonClicked
// (Native, Protected)
// Parameters:
// class UCommonButton*                    ClickedButton                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSlotButtonClicked(class UCommonButton* ClickedButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotView", "OnSlotButtonClicked");

	Params::FortCollectionBookSlotView_OnSlotButtonClicked Parms{};

	Parms.ClickedButton = ClickedButton;
	Parms.ButtonIdx = ButtonIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotView.OnSlotButtonHovered
// (Native, Protected)
// Parameters:
// class UCommonButton*                    HoveredButton                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotView::OnSlotButtonHovered(class UCommonButton* HoveredButton, int32 ButtonIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotView", "OnSlotButtonHovered");

	Params::FortCollectionBookSlotView_OnSlotButtonHovered Parms{};

	Parms.HoveredButton = HoveredButton;
	Parms.ButtonIdx = ButtonIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenuInputData.GetInputActionGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInputActionGroup                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInputActionGroup UFortOptionsMenuInputData::GetInputActionGroup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenuInputData", "GetInputActionGroup");

	Params::FortOptionsMenuInputData_GetInputActionGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenuInputData.GetInputScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortOptionsMenuInputData::GetInputScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenuInputData", "GetInputScale");

	Params::FortOptionsMenuInputData_GetInputScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemPickerTileButton.HandleItemSlottedToDifferentSquad
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHomebaseSquadSlotId             SquadSlotId                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPickerTileButton::HandleItemSlottedToDifferentSquad(const struct FHomebaseSquadSlotId& SquadSlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPickerTileButton", "HandleItemSlottedToDifferentSquad");

	Params::FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad Parms{};

	Parms.SquadSlotId = std::move(SquadSlotId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadSlotItemPickerTileButton.HandleSlottingRestrictionReasonsChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotItemPickerTileButton::HandleSlottingRestrictionReasonsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPickerTileButton", "HandleSlottingRestrictionReasonsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotItemPickerTileButton.GetSlottingRestrictionReasons
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortSquadSlottingRestrictionReason>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortSquadSlottingRestrictionReason> UFortSquadSlotItemPickerTileButton::GetSlottingRestrictionReasons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPickerTileButton", "GetSlottingRestrictionReasons");

	Params::FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteUI.FortCollectionBookSlotWidget.FortCollectionBookSlottedItemUpdatedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortCollectionBookSlotWidget::FortCollectionBookSlottedItemUpdatedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "FortCollectionBookSlottedItemUpdatedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCollectionBookSlotWidget.OnItemCardUpdated
// (Event, Protected, BlueprintEvent)

void UFortCollectionBookSlotWidget::OnItemCardUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "OnItemCardUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCollectionBookSlotWidget.OnItemDestroyed
// (Final, Native, Private)

void UFortCollectionBookSlotWidget::OnItemDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "OnItemDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotWidget.OnSlottedItemOperationComplete
// (Final, Native, Protected)
// Parameters:
// class UFortAccountItem*                 ItemSlotted                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookSlotWidget::OnSlottedItemOperationComplete(const class UFortAccountItem* ItemSlotted, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "OnSlottedItemOperationComplete");

	Params::FortCollectionBookSlotWidget_OnSlottedItemOperationComplete Parms{};

	Parms.ItemSlotted = ItemSlotted;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookSlotWidget.GetNumItemsToSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookSlotWidget::GetNumItemsToSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "GetNumItemsToSlot");

	Params::FortCollectionBookSlotWidget_GetNumItemsToSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSlotWidget.GetSlotRowName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FName UFortCollectionBookSlotWidget::GetSlotRowName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "GetSlotRowName");

	Params::FortCollectionBookSlotWidget_GetSlotRowName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSlotWidget.GetSlottedItemRepresentation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortCollectionBookSlotWidget::GetSlottedItemRepresentation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "GetSlottedItemRepresentation");

	Params::FortCollectionBookSlotWidget_GetSlottedItemRepresentation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSlotWidget.HasItemsToSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookSlotWidget::HasItemsToSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "HasItemsToSlot");

	Params::FortCollectionBookSlotWidget_HasItemsToSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookSlotWidget.IsItemSlotted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookSlotWidget::IsItemSlotted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookSlotWidget", "IsItemSlotted");

	Params::FortCollectionBookSlotWidget_IsItemSlotted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookPageClicked
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          ClickedPage                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookPageClicked(const class UFortCollectionBookPage* ClickedPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "OnCollectionBookPageClicked");

	Params::FortCollectionBookWidget_OnCollectionBookPageClicked Parms{};

	Parms.ClickedPage = ClickedPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookPageSelected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookPage*          SelectedPage                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookPageSelected(const class UFortCollectionBookPage* SelectedPage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "OnCollectionBookPageSelected");

	Params::FortCollectionBookWidget_OnCollectionBookPageSelected Parms{};

	Parms.SelectedPage = SelectedPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookSectionClicked
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortCollectionBookSection*       ClickedSection                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnCollectionBookSectionClicked(const class UFortCollectionBookSection* ClickedSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "OnCollectionBookSectionClicked");

	Params::FortCollectionBookWidget_OnCollectionBookSectionClicked Parms{};

	Parms.ClickedSection = ClickedSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookSectionCloseRequest
// (Final, Native, Protected)

void UFortCollectionBookWidget::OnCollectionBookSectionCloseRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "OnCollectionBookSectionCloseRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookWidget.OnPreviewXPChangeRequest
// (Final, Native, Protected)
// Parameters:
// int32                                   XPChange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookWidget::OnPreviewXPChangeRequest(int32 XPChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "OnPreviewXPChangeRequest");

	Params::FortCollectionBookWidget_OnPreviewXPChangeRequest Parms{};

	Parms.XPChange = XPChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCollectionBookWidget.RequestToClose
// (Final, Native, Protected, BlueprintCallable)

void UFortCollectionBookWidget::RequestToClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookWidget", "RequestToClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPreviewPedestal.ClearDisplay
// (Final, Native, Public, BlueprintCallable)

void AFortItemPreviewPedestal::ClearDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPreviewPedestal", "ClearDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemPreviewPedestal.PreviewItemBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeCurrentLoadout                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortItemPreviewPedestal::PreviewItemBP(class UFortItem* Item, bool bIncludeCurrentLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemPreviewPedestal", "PreviewItemBP");

	Params::FortItemPreviewPedestal_PreviewItemBP Parms{};

	Parms.Item = Item;
	Parms.bIncludeCurrentLoadout = bIncludeCurrentLoadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.CreateUIStateTrigger
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortUIStateTrigger>  Param_Class                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUIStateTrigger*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIStateTrigger* UFortUIManagerWidget_NUI::CreateUIStateTrigger(TSubclassOf<class UFortUIStateTrigger> Param_Class, class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "CreateUIStateTrigger");

	Params::FortUIManagerWidget_NUI_CreateUIStateTrigger Parms{};

	Parms.Param_Class = Param_Class;
	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetUIManagerWidget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUIManagerWidget_NUI*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIManagerWidget_NUI* UFortUIManagerWidget_NUI::GetUIManagerWidget(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "GetUIManagerWidget");

	Params::FortUIManagerWidget_NUI_GetUIManagerWidget Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetUINavigationManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUINavigationManager*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUINavigationManager* UFortUIManagerWidget_NUI::GetUINavigationManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "GetUINavigationManager");

	Params::FortUIManagerWidget_NUI_GetUINavigationManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetUINotificationQueue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortNotificationQueueType              QueueType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUINotificationQueue*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUINotificationQueue* UFortUIManagerWidget_NUI::GetUINotificationQueue(class UObject* WorldContextObject, EFortNotificationQueueType QueueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "GetUINotificationQueue");

	Params::FortUIManagerWidget_NUI_GetUINotificationQueue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.QueueType = QueueType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.KillConfirmationDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::KillConfirmationDialog(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "KillConfirmationDialog");

	Params::FortUIManagerWidget_NUI_KillConfirmationDialog Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.ShowErrorDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OperationDesc                                          (Parm, Deprecated, NativeAccessSpecifierPublic)
// class FText                             DisplayMessage                                         (Parm, NativeAccessSpecifierPublic)
// class FString                           ErrorNote                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortErrorSeverity                      ErrorSeverity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::ShowErrorDialog(class UObject* WorldContextObject, const class FText& OperationDesc, const class FText& DisplayMessage, const class FString& ErrorNote, EFortErrorSeverity ErrorSeverity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIManagerWidget_NUI", "ShowErrorDialog");

	Params::FortUIManagerWidget_NUI_ShowErrorDialog Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OperationDesc = std::move(OperationDesc);
	Parms.DisplayMessage = std::move(DisplayMessage);
	Parms.ErrorNote = std::move(ErrorNote);
	Parms.ErrorSeverity = ErrorSeverity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.CloseConfirmationWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUIManagerWidget_NUI::CloseConfirmationWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "CloseConfirmationWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIManagerWidget_NUI.CloseErrorWindow
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUIManagerWidget_NUI::CloseErrorWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "CloseErrorWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIManagerWidget_NUI.CreateNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortUINotification>  UINotificationClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUINotification*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUINotification* UFortUIManagerWidget_NUI::CreateNotification(TSubclassOf<class UFortUINotification> UINotificationClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "CreateNotification");

	Params::FortUIManagerWidget_NUI_CreateNotification Parms{};

	Parms.UINotificationClass = UINotificationClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.DecrementShouldBlockSubtitlePortrait
// (Final, Native, Public, BlueprintCallable)

void UFortUIManagerWidget_NUI::DecrementShouldBlockSubtitlePortrait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "DecrementShouldBlockSubtitlePortrait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.DisplayErrorDialog
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortErrorInfo                   Info                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::DisplayErrorDialog(const struct FFortErrorInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "DisplayErrorDialog");

	Params::FortUIManagerWidget_NUI_DisplayErrorDialog Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.DisplayStateContent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::DisplayStateContent(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "DisplayStateContent");

	Params::FortUIManagerWidget_NUI_DisplayStateContent Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetCachedWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           InClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortUIManagerWidget_NUI::GetCachedWidget(class UClass* InClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "GetCachedWidget");

	Params::FortUIManagerWidget_NUI_GetCachedWidget Parms{};

	Parms.InClass = InClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.HasActiveModalWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIManagerWidget_NUI::HasActiveModalWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "HasActiveModalWidget");

	Params::FortUIManagerWidget_NUI_HasActiveModalWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.IncrementShouldBlockSubtitlePortrait
// (Final, Native, Public, BlueprintCallable)

void UFortUIManagerWidget_NUI::IncrementShouldBlockSubtitlePortrait()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "IncrementShouldBlockSubtitlePortrait");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.IsShowingModalsConfirmationsErrors
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIManagerWidget_NUI::IsShowingModalsConfirmationsErrors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "IsShowingModalsConfirmationsErrors");

	Params::FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.NotifyPreShowConfirmation_NUI
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDialogDescription_NUI       DialogDescription                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::NotifyPreShowConfirmation_NUI(const struct FFortDialogDescription_NUI& DialogDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "NotifyPreShowConfirmation_NUI");

	Params::FortUIManagerWidget_NUI_NotifyPreShowConfirmation_NUI Parms{};

	Parms.DialogDescription = std::move(DialogDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnBeginSpokenDialog__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortUIManagerWidget_NUI::OnBeginSpokenDialog__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnBeginSpokenDialog__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIManagerWidget_NUI.OnEndLatentWaitForConfirmationDialog
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortDialogExternalLatentActionHandleWaitingDialogHandle                                    (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnEndLatentWaitForConfirmationDialog(struct FFortDialogExternalLatentActionHandle& WaitingDialogHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnEndLatentWaitForConfirmationDialog");

	Params::FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog Parms{};

	Parms.WaitingDialogHandle = std::move(WaitingDialogHandle);

	UObject::ProcessEvent(Func, &Parms);

	WaitingDialogHandle = std::move(Parms.WaitingDialogHandle);
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnEndSpokenDialog__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortUIManagerWidget_NUI::OnEndSpokenDialog__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnEndSpokenDialog__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnPreShowConfirmation_NUI__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class UFortUIManagerWidget_NUI*         Source                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogDescription_NUI       DialogDescription                                      (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnPreShowConfirmation_NUI__DelegateSignature(class UFortUIManagerWidget_NUI* Source, const struct FFortDialogDescription_NUI& DialogDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnPreShowConfirmation_NUI__DelegateSignature");

	Params::FortUIManagerWidget_NUI_OnPreShowConfirmation_NUI__DelegateSignature Parms{};

	Parms.Source = Source;
	Parms.DialogDescription = std::move(DialogDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnShouldBlockSubtitlePortraitChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bShouldBlockSubtitlePortrait                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnShouldBlockSubtitlePortraitChanged__DelegateSignature(bool bShouldBlockSubtitlePortrait)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnShouldBlockSubtitlePortraitChanged__DelegateSignature");

	Params::FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature Parms{};

	Parms.bShouldBlockSubtitlePortrait = bShouldBlockSubtitlePortrait;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnShouldCloseTalkingHead__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortUIManagerWidget_NUI::OnShouldCloseTalkingHead__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnShouldCloseTalkingHead__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnShouldOpenTalkingHead__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UTexture2D*                       Image                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             Subtitle                                               (Parm, NativeAccessSpecifierPublic)
// EFortAnnouncementDisplayPreference      DisplayPreference                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnShouldOpenTalkingHead__DelegateSignature(class UTexture2D* Image, const class FText& Title, const class FText& Subtitle, EFortAnnouncementDisplayPreference DisplayPreference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnShouldOpenTalkingHead__DelegateSignature");

	Params::FortUIManagerWidget_NUI_OnShouldOpenTalkingHead__DelegateSignature Parms{};

	Parms.Image = Image;
	Parms.Title = std::move(Title);
	Parms.Subtitle = std::move(Subtitle);
	Parms.DisplayPreference = DisplayPreference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.OnShowConfirmation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortDialogDescription           Description                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnShowConfirmation(const struct FFortDialogDescription& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnShowConfirmation");

	Params::FortUIManagerWidget_NUI_OnShowConfirmation Parms{};

	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.OnShowConfirmation_NUI
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortDialogDescription_NUI       Description                                            (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::OnShowConfirmation_NUI(const struct FFortDialogDescription_NUI& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnShowConfirmation_NUI");

	Params::FortUIManagerWidget_NUI_OnShowConfirmation_NUI Parms{};

	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.OnStateEnded
// (Event, Public, BlueprintEvent)

void UFortUIManagerWidget_NUI::OnStateEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnStateEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIManagerWidget_NUI.OnStateStarted
// (Event, Public, BlueprintEvent)

void UFortUIManagerWidget_NUI::OnStateStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "OnStateStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIManagerWidget_NUI.PopActivatablePanelInModalLayer
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonActivatablePanel*          Panel                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::PopActivatablePanelInModalLayer(const class UCommonActivatablePanel* Panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "PopActivatablePanelInModalLayer");

	Params::FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer Parms{};

	Parms.Panel = Panel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.PopAllContentWidgets
// (Final, Native, Public, BlueprintCallable)

void UFortUIManagerWidget_NUI::PopAllContentWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "PopAllContentWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.QueueActivatablePanelIntoModalLayer
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonActivatablePanel*          Panel                                                  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::QueueActivatablePanelIntoModalLayer(const class UCommonActivatablePanel* Panel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "QueueActivatablePanelIntoModalLayer");

	Params::FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer Parms{};

	Parms.Panel = Panel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI.QueueNotification
// (Native, Public, BlueprintCallable)
// Parameters:
// EFortNotificationQueueType              QueueType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUINotification*              Notification                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::QueueNotification(EFortNotificationQueueType QueueType, class UFortUINotification* Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "QueueNotification");

	Params::FortUIManagerWidget_NUI_QueueNotification Parms{};

	Parms.QueueType = QueueType;
	Parms.Notification = Notification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.RegisterStateTrigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUIStateTrigger*              StateTrigger                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::RegisterStateTrigger(class UFortUIStateTrigger* StateTrigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "RegisterStateTrigger");

	Params::FortUIManagerWidget_NUI_RegisterStateTrigger Parms{};

	Parms.StateTrigger = StateTrigger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.ReleaseNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUINotification*              Notification                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::ReleaseNotification(class UFortUINotification* Notification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "ReleaseNotification");

	Params::FortUIManagerWidget_NUI_ReleaseNotification Parms{};

	Parms.Notification = Notification;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.SetStateContentDisplayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::SetStateContentDisplayed(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "SetStateContentDisplayed");

	Params::FortUIManagerWidget_NUI_SetStateContentDisplayed Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.UnregisterStateTrigger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUIStateTrigger*              TriggerToRemove                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::UnregisterStateTrigger(class UFortUIStateTrigger* TriggerToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "UnregisterStateTrigger");

	Params::FortUIManagerWidget_NUI_UnregisterStateTrigger Parms{};

	Parms.TriggerToRemove = TriggerToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.UpdateStateWidgetContent
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortUIStateWidget_NUI*           StateWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::UpdateStateWidgetContent(class UFortUIStateWidget_NUI* StateWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "UpdateStateWidgetContent");

	Params::FortUIManagerWidget_NUI_UpdateStateWidgetContent Parms{};

	Parms.StateWidget = StateWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUIManagerWidget_NUI._BPGetCurrentUIState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortUIState                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortUIState UFortUIManagerWidget_NUI::_BPGetCurrentUIState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "_BPGetCurrentUIState");

	Params::FortUIManagerWidget_NUI__BPGetCurrentUIState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.CanNotificationBeQueued
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortNotificationQueueType              QueueType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortNotificationPriority               NotificationPriority                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIManagerWidget_NUI::CanNotificationBeQueued(EFortNotificationQueueType QueueType, EFortNotificationPriority NotificationPriority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "CanNotificationBeQueued");

	Params::FortUIManagerWidget_NUI_CanNotificationBeQueued Parms{};

	Parms.QueueType = QueueType;
	Parms.NotificationPriority = NotificationPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetCurrentUIStateWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortUIStateWidget_NUI*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIStateWidget_NUI* UFortUIManagerWidget_NUI::GetCurrentUIStateWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "GetCurrentUIStateWidget");

	Params::FortUIManagerWidget_NUI_GetCurrentUIStateWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.GetNavigationManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortUINavigationManager*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUINavigationManager* UFortUIManagerWidget_NUI::GetNavigationManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "GetNavigationManager");

	Params::FortUIManagerWidget_NUI_GetNavigationManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.IsStateContentDisplayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIManagerWidget_NUI::IsStateContentDisplayed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "IsStateContentDisplayed");

	Params::FortUIManagerWidget_NUI_IsStateContentDisplayed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIManagerWidget_NUI.PopContentWidget
// (Final, Native, Public, BlueprintCallable, Const)

void UFortUIManagerWidget_NUI::PopContentWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "PopContentWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.PushContentWidget
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::PushContentWidget(class UWidget* Widget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "PushContentWidget");

	Params::FortUIManagerWidget_NUI_PushContentWidget Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.PushContentWidgetAdvanced
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::PushContentWidgetAdvanced(class UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "PushContentWidgetAdvanced");

	Params::FortUIManagerWidget_NUI_PushContentWidgetAdvanced Parms{};

	Parms.Widget = Widget;
	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.SetFrontEndVisibility
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIManagerWidget_NUI::SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "SetFrontEndVisibility");

	Params::FortUIManagerWidget_NUI_SetFrontEndVisibility Parms{};

	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIManagerWidget_NUI.ShouldBlockSubtitlePortrait
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIManagerWidget_NUI::ShouldBlockSubtitlePortrait() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerWidget_NUI", "ShouldBlockSubtitlePortrait");

	Params::FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCommandRoomPedestal.HandleDifferentHeroSet
// (Final, Native, Private)

void AFortCommandRoomPedestal::HandleDifferentHeroSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCommandRoomPedestal", "HandleDifferentHeroSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeImage.SetBrushSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBrushSize                          Param_BrushSize                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeImage::SetBrushSize(EFortBrushSize Param_BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeImage", "SetBrushSize");

	Params::FortMultiSizeImage_SetBrushSize Parms{};

	Parms.Param_BrushSize = Param_BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeImage.SetColorAndOpacity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiSizeImage::SetColorAndOpacity(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeImage", "SetColorAndOpacity");

	Params::FortMultiSizeImage_SetColorAndOpacity Parms{};

	Parms.Color = std::move(Color);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMultiSizeImage.SetMultiSizeBrush
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortMultiSizeBrush              Param_MultiSizeBrush                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMultiSizeImage::SetMultiSizeBrush(const struct FFortMultiSizeBrush& Param_MultiSizeBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiSizeImage", "SetMultiSizeBrush");

	Params::FortMultiSizeImage_SetMultiSizeBrush Parms{};

	Parms.Param_MultiSizeBrush = std::move(Param_MultiSizeBrush);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortComparisonResultIndicator.SetComparisonResult
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBuffState                          Param_ComparisonResult                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortComparisonResultIndicator::SetComparisonResult(EFortBuffState Param_ComparisonResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortComparisonResultIndicator", "SetComparisonResult");

	Params::FortComparisonResultIndicator_SetComparisonResult Parms{};

	Parms.Param_ComparisonResult = Param_ComparisonResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutSlotButton.HandleMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsMenuOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutSlotButton::HandleMenuOpenChanged(bool bIsMenuOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutSlotButton", "HandleMenuOpenChanged");

	Params::FortHeroLoadoutSlotButton_HandleMenuOpenChanged Parms{};

	Parms.bIsMenuOpen = bIsMenuOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortHeroLoadoutSlotButton.OnMenuOpenChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortHeroLoadoutSlotButton*       SlotButton                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsMenuOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutSlotButton::OnMenuOpenChangedEvent__DelegateSignature(class UFortHeroLoadoutSlotButton* SlotButton, bool bIsMenuOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutSlotButton", "OnMenuOpenChangedEvent__DelegateSignature");

	Params::FortHeroLoadoutSlotButton_OnMenuOpenChangedEvent__DelegateSignature Parms{};

	Parms.SlotButton = SlotButton;
	Parms.bIsMenuOpen = bIsMenuOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortHeroLoadoutSlotButton.OnRequestChangeHero__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UFortHeroLoadoutSlotButton*       SlotButton                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutSlotButton::OnRequestChangeHero__DelegateSignature(class UFortHeroLoadoutSlotButton* SlotButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutSlotButton", "OnRequestChangeHero__DelegateSignature");

	Params::FortHeroLoadoutSlotButton_OnRequestChangeHero__DelegateSignature Parms{};

	Parms.SlotButton = SlotButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHeroLoadoutSlotButton.IsContextMenuOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroLoadoutSlotButton::IsContextMenuOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutSlotButton", "IsContextMenuOpen");

	Params::FortHeroLoadoutSlotButton_IsContextMenuOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCraftingBarWidget.HandlePlayerStartedCrafting
// (Final, Native, Protected)

void UFortCraftingBarWidget::HandlePlayerStartedCrafting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCraftingBarWidget", "HandlePlayerStartedCrafting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCraftingBarWidget.HandlePlayerStoppedCrafting
// (Final, Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCraftFailCause                     CraftFailureCause                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCraftingBarWidget::HandlePlayerStoppedCrafting(bool bSuccess, EFortCraftFailCause CraftFailureCause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCraftingBarWidget", "HandlePlayerStoppedCrafting");

	Params::FortCraftingBarWidget_HandlePlayerStoppedCrafting Parms{};

	Parms.bSuccess = bSuccess;
	Parms.CraftFailureCause = CraftFailureCause;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCraftingBarWidget.OnCompletedSetHidden
// (Final, Native, Protected)

void UFortCraftingBarWidget::OnCompletedSetHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCraftingBarWidget", "OnCompletedSetHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCraftingBarWidget.SetHideCraftingBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHideCraftBar                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCraftingBarWidget::SetHideCraftingBar(bool bInHideCraftBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCraftingBarWidget", "SetHideCraftingBar");

	Params::FortCraftingBarWidget_SetHideCraftingBar Parms{};

	Parms.bInHideCraftBar = bInHideCraftBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemReceivedWidgetBase.GetTemporaryInstance
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortReceivedItemLootInfo        ItemReference                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemReceivedWidgetBase::GetTemporaryInstance(const struct FFortReceivedItemLootInfo& ItemReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "GetTemporaryInstance");

	Params::FortItemReceivedWidgetBase_GetTemporaryInstance Parms{};

	Parms.ItemReference = std::move(ItemReference);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemReceivedWidgetBase.OnGiftBoxItemSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFromSelf                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemReceivedWidgetBase::OnGiftBoxItemSet(bool bFromSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "OnGiftBoxItemSet");

	Params::FortItemReceivedWidgetBase_OnGiftBoxItemSet Parms{};

	Parms.bFromSelf = bFromSelf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemReceivedWidgetBase.OnGiftBoxItemSetInternal
// (Final, Native, Protected)
// Parameters:
// bool                                    bFromSelf                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemReceivedWidgetBase::OnGiftBoxItemSetInternal(bool bFromSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "OnGiftBoxItemSetInternal");

	Params::FortItemReceivedWidgetBase_OnGiftBoxItemSetInternal Parms{};

	Parms.bFromSelf = bFromSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemReceivedWidgetBase.SetAlignmentOnSlot
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UScrollBox*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemReceivedWidgetBase::SetAlignmentOnSlot(class UScrollBox* Widget, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "SetAlignmentOnSlot");

	Params::FortItemReceivedWidgetBase_SetAlignmentOnSlot Parms{};

	Parms.Widget = Widget;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemReceivedWidgetBase.SetAlignmentOnSlots
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UScrollBox*                       Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemReceivedWidgetBase::SetAlignmentOnSlots(class UScrollBox* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "SetAlignmentOnSlots");

	Params::FortItemReceivedWidgetBase_SetAlignmentOnSlots Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemReceivedWidgetBase.SetGiftBoxItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGiftBoxItem*                 Param_GiftBoxItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemReceivedWidgetBase::SetGiftBoxItem(class UFortGiftBoxItem* Param_GiftBoxItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "SetGiftBoxItem");

	Params::FortItemReceivedWidgetBase_SetGiftBoxItem Parms{};

	Parms.Param_GiftBoxItem = Param_GiftBoxItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemReceivedWidgetBase.ShowGiftBox
// (Event, Protected, BlueprintEvent)

void UFortItemReceivedWidgetBase::ShowGiftBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemReceivedWidgetBase", "ShowGiftBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeAdTile.OnCMSDataUpdated
// (Event, Public, BlueprintEvent)

void UFortCreativeAdTile::OnCMSDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeAdTile", "OnCMSDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeAdTile.PopulateAdTile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCreativeAdData                  Entry                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCreativeAdTile::PopulateAdTile(const struct FCreativeAdData& Entry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeAdTile", "PopulateAdTile");

	Params::FortCreativeAdTile_PopulateAdTile Parms{};

	Parms.Entry = std::move(Entry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeInfoIndicatorWidget.SetKeyBindWidgetBoundAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortKeybindWidget*               FortKeybindWidget                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingInteraction                InteractionType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeInfoIndicatorWidget::SetKeyBindWidgetBoundAction(class UFortKeybindWidget* FortKeybindWidget, const class FName ActionName, const EFortBuildingInteraction InteractionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeInfoIndicatorWidget", "SetKeyBindWidgetBoundAction");

	Params::FortCreativeInfoIndicatorWidget_SetKeyBindWidgetBoundAction Parms{};

	Parms.FortKeybindWidget = FortKeybindWidget;
	Parms.ActionName = ActionName;
	Parms.InteractionType = InteractionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.ClearCachedEula
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::ClearCachedEula()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ClearCachedEula");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.HandleBenchmarkComplete
// (Event, Protected, BlueprintEvent)

void UFortOptionsMenu::HandleBenchmarkComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "HandleBenchmarkComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortOptionsMenu.HandleSettingsErrorMessageClosed
// (Event, Protected, BlueprintEvent)

void UFortOptionsMenu::HandleSettingsErrorMessageClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "HandleSettingsErrorMessageClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortOptionsMenu.HandleSettingsSaveComplete
// (Event, Protected, BlueprintEvent)

void UFortOptionsMenu::HandleSettingsSaveComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "HandleSettingsSaveComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortOptionsMenu.NeedsLanguageChangeConfirmation
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::NeedsLanguageChangeConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "NeedsLanguageChangeConfirmation");

	Params::FortOptionsMenu_NeedsLanguageChangeConfirmation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.NeedsVideoChangeConfirmation
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::NeedsVideoChangeConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "NeedsVideoChangeConfirmation");

	Params::FortOptionsMenu_NeedsVideoChangeConfirmation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.OnApply
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::OnApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "OnApply");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.OnReset
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "OnReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.OnResetToDefaults
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   PresetToSet                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOptionsMenu::OnResetToDefaults(int32 PresetToSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "OnResetToDefaults");

	Params::FortOptionsMenu_OnResetToDefaults Parms{};

	Parms.PresetToSet = PresetToSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.OnVideoAccept
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::OnVideoAccept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "OnVideoAccept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.OnVideoCancel
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::OnVideoCancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "OnVideoCancel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.ResetClientHUDSettings
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::ResetClientHUDSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ResetClientHUDSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.ResetGameOptionsSettings
// (Final, Native, Private, BlueprintCallable)

void UFortOptionsMenu::ResetGameOptionsSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ResetGameOptionsSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOptionsMenu.ShowAccessibilityOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowAccessibilityOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowAccessibilityOptions");

	Params::FortOptionsMenu_ShowAccessibilityOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.ShowAccountOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowAccountOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowAccountOptions");

	Params::FortOptionsMenu_ShowAccountOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.ShowBrightnessOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowBrightnessOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowBrightnessOptions");

	Params::FortOptionsMenu_ShowBrightnessOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.ShowControllerOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowControllerOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowControllerOptions");

	Params::FortOptionsMenu_ShowControllerOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.ShowInputOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowInputOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowInputOptions");

	Params::FortOptionsMenu_ShowInputOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOptionsMenu.ShowVideoOptions
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOptionsMenu::ShowVideoOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOptionsMenu", "ShowVideoOptions");

	Params::FortOptionsMenu_ShowVideoOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMultiFactorAuthWidget.HandleTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMultiFactorAuthWidget::HandleTextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMultiFactorAuthWidget", "HandleTextCommitted");

	Params::FortMultiFactorAuthWidget_HandleTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdateEntry.CanAddObjective
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItemToCheck                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestUpdateEntry::CanAddObjective(class UFortQuestItem* QuestItemToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "CanAddObjective");

	Params::FortQuestUpdateEntry_CanAddObjective Parms{};

	Parms.QuestItemToCheck = QuestItemToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestUpdateEntry.CurrentlyDisplayedObjectiveFinished
// (Final, Native, Protected)
// Parameters:
// class UFortQuestObjectiveEntry*         QuestObjective                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdateEntry::CurrentlyDisplayedObjectiveFinished(class UFortQuestObjectiveEntry* QuestObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "CurrentlyDisplayedObjectiveFinished");

	Params::FortQuestUpdateEntry_CurrentlyDisplayedObjectiveFinished Parms{};

	Parms.QuestObjective = QuestObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdateEntry.FinishQuestIntro
// (Final, Native, Public, BlueprintCallable)

void UFortQuestUpdateEntry::FinishQuestIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "FinishQuestIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdateEntry.FinishQuestOutro
// (Final, Native, Public, BlueprintCallable)

void UFortQuestUpdateEntry::FinishQuestOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "FinishQuestOutro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdateEntry.GetNumDisplayedObjectives
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortQuestUpdateEntry::GetNumDisplayedObjectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "GetNumDisplayedObjectives");

	Params::FortQuestUpdateEntry_GetNumDisplayedObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestUpdateEntry.QuestItemSet
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestItemToCheck                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdateEntry::QuestItemSet(class UFortQuestItem* QuestItemToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "QuestItemSet");

	Params::FortQuestUpdateEntry_QuestItemSet Parms{};

	Parms.QuestItemToCheck = QuestItemToCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestUpdateEntry.SetQuestItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestObjectiveInfo*          ObjectiveInfo                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsAnnouncement                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdateEntry::SetQuestItem(const class UFortQuestObjectiveInfo* ObjectiveInfo, bool IsAnnouncement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "SetQuestItem");

	Params::FortQuestUpdateEntry_SetQuestItem Parms{};

	Parms.ObjectiveInfo = ObjectiveInfo;
	Parms.IsAnnouncement = IsAnnouncement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdateEntry.SetupAsAnnouncement
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortQuestUpdateEntry::SetupAsAnnouncement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "SetupAsAnnouncement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestUpdateEntry.StartQuestIntro
// (Event, Public, BlueprintEvent)

void UFortQuestUpdateEntry::StartQuestIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "StartQuestIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestUpdateEntry.StartQuestOutro
// (Event, Public, BlueprintEvent)

void UFortQuestUpdateEntry::StartQuestOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdateEntry", "StartQuestOutro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeIslandLinkScreen.HandleIslandLinkChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::HandleIslandLinkChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "HandleIslandLinkChanged");

	Params::FortCreativeIslandLinkScreen_HandleIslandLinkChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeIslandLinkScreen.HandleIslandLinkCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitInfo                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::HandleIslandLinkCommitted(const class FText& InText, ETextCommit CommitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "HandleIslandLinkCommitted");

	Params::FortCreativeIslandLinkScreen_HandleIslandLinkCommitted Parms{};

	Parms.InText = std::move(InText);
	Parms.CommitInfo = CommitInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeIslandLinkScreen.HandleIslandSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::HandleIslandSelectionChanged(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "HandleIslandSelectionChanged");

	Params::FortCreativeIslandLinkScreen_HandleIslandSelectionChanged Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeIslandLinkScreen.OnCreativeIslandLinksPopulated
// (Event, Protected, BlueprintEvent)

void UFortCreativeIslandLinkScreen::OnCreativeIslandLinksPopulated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "OnCreativeIslandLinksPopulated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeIslandLinkScreen.OnCreativeIslandLinkValidated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortCreativeIslandLinkValidationResult ValidateResult                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::OnCreativeIslandLinkValidated(EFortCreativeIslandLinkValidationResult ValidateResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "OnCreativeIslandLinkValidated");

	Params::FortCreativeIslandLinkScreen_OnCreativeIslandLinkValidated Parms{};

	Parms.ValidateResult = ValidateResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativeIslandLinkScreen.RemoveIslandFromFavorites
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LinkCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::RemoveIslandFromFavorites(const class FString& LinkCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "RemoveIslandFromFavorites");

	Params::FortCreativeIslandLinkScreen_RemoveIslandFromFavorites Parms{};

	Parms.LinkCode = std::move(LinkCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeIslandLinkScreen.SetTargetPortal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortAthenaCreativePortal*        Portal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeIslandLinkScreen::SetTargetPortal(class AFortAthenaCreativePortal* Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeIslandLinkScreen", "SetTargetPortal");

	Params::FortCreativeIslandLinkScreen_SetTargetPortal Parms{};

	Parms.Portal = Portal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSpectatedPlayerSwitcher.OnDisplayedTargetsUpdated
// (Event, Public, BlueprintEvent)

void UFortSpectatedPlayerSwitcher::OnDisplayedTargetsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpectatedPlayerSwitcher", "OnDisplayedTargetsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSpectatedPlayerSwitcher.ShouldBeVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSpectatedPlayerSwitcher::ShouldBeVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpectatedPlayerSwitcher", "ShouldBeVisible");

	Params::FortSpectatedPlayerSwitcher_ShouldBeVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListMenu.BroadcastOnItemSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFortItemEntry                   ItemToSpawn                                            (Parm, NativeAccessSpecifierPublic)

void UFortCreativeItemListMenu::BroadcastOnItemSelected(const struct FFortItemEntry& ItemToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "BroadcastOnItemSelected");

	Params::FortCreativeItemListMenu_BroadcastOnItemSelected Parms{};

	Parms.ItemToSpawn = std::move(ItemToSpawn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeItemListMenu.LoadItems
// (Final, Native, Public, BlueprintCallable)

void UFortCreativeItemListMenu::LoadItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "LoadItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeItemListMenu.OnItemsLoaded
// (Event, Public, BlueprintEvent)

void UFortCreativeItemListMenu::OnItemsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "OnItemsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeItemListMenu.CanPlayerCreateInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCreativeItemListMenu::CanPlayerCreateInVolume(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "CanPlayerCreateInVolume");

	Params::FortCreativeItemListMenu_CanPlayerCreateInVolume Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListMenu.GetCardSizeForCategory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ItemListCategoryName                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemCardSize                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemCardSize UFortCreativeItemListMenu::GetCardSizeForCategory(const class FName& ItemListCategoryName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "GetCardSizeForCategory");

	Params::FortCreativeItemListMenu_GetCardSizeForCategory Parms{};

	Parms.ItemListCategoryName = ItemListCategoryName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListMenu.GetCollapseBorderPadFlagForCategory
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ItemListCategoryName                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCreativeItemListMenu::GetCollapseBorderPadFlagForCategory(const class FName& ItemListCategoryName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "GetCollapseBorderPadFlagForCategory");

	Params::FortCreativeItemListMenu_GetCollapseBorderPadFlagForCategory Parms{};

	Parms.ItemListCategoryName = ItemListCategoryName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListMenu.GetTabNameFromLabel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             TabLabel                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortCreativeItemListMenu::GetTabNameFromLabel(const class FText& TabLabel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListMenu", "GetTabNameFromLabel");

	Params::FortCreativeItemListMenu_GetTabNameFromLabel Parms{};

	Parms.TabLabel = std::move(TabLabel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListPanelData.GetCreativeItemListPanelData
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortCreativeItemListPanelData>PanelDataClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       InItemListSource                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataTable*                       InItemListCategorySource                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortCreativeItemListPanelData*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCreativeItemListPanelData* UFortCreativeItemListPanelData::GetCreativeItemListPanelData(class UObject* Target, TSubclassOf<class UFortCreativeItemListPanelData> PanelDataClass, class UDataTable* InItemListSource, class UDataTable* InItemListCategorySource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCreativeItemListPanelData", "GetCreativeItemListPanelData");

	Params::FortCreativeItemListPanelData_GetCreativeItemListPanelData Parms{};

	Parms.Target = Target;
	Parms.PanelDataClass = PanelDataClass;
	Parms.InItemListSource = InItemListSource;
	Parms.InItemListCategorySource = InItemListCategorySource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListPanelData.LoadItems
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeItemListPanelData::LoadItems(class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListPanelData", "LoadItems");

	Params::FortCreativeItemListPanelData_LoadItems Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeItemListPanelData.GetInteractionText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortCreativeItemListPanelData::GetInteractionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListPanelData", "GetInteractionText");

	Params::FortCreativeItemListPanelData_GetInteractionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeItemListPanelData.GetItemToSpawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              InItemDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemEntry                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortItemEntry UFortCreativeItemListPanelData::GetItemToSpawn(class UFortItemDefinition* InItemDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeItemListPanelData", "GetItemToSpawn");

	Params::FortCreativeItemListPanelData_GetItemToSpawn Parms{};

	Parms.InItemDefinition = InItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeOptions.GetVisibleOptionsForTab
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ESettingTab                             TabType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<ESettingType>                    VisibleOptions                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCreativeOptions::GetVisibleOptionsForTab(ESettingTab TabType, TArray<ESettingType>* VisibleOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCreativeOptions", "GetVisibleOptionsForTab");

	Params::FortCreativeOptions_GetVisibleOptionsForTab Parms{};

	Parms.TabType = TabType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VisibleOptions != nullptr)
		*VisibleOptions = std::move(Parms.VisibleOptions);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeOptions.IsVisibleOption
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESettingType                            SettingType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCreativeOptions::IsVisibleOption(ESettingType SettingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCreativeOptions", "IsVisibleOption");

	Params::FortCreativeOptions_IsVisibleOption Parms{};

	Parms.SettingType = SettingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemRatingIndicator.HandleViewModelChanged
// (Event, Protected, BlueprintEvent)

void UFortItemRatingIndicator::HandleViewModelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemRatingIndicator", "HandleViewModelChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemRatingIndicator.SetItemToCompareWith
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToCompareWith                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemRatingIndicator::SetItemToCompareWith(const class UFortItem* Param_ItemToCompareWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemRatingIndicator", "SetItemToCompareWith");

	Params::FortItemRatingIndicator_SetItemToCompareWith Parms{};

	Parms.Param_ItemToCompareWith = Param_ItemToCompareWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemRatingIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemRatingIndicator::SetItemToRepresent(const class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemRatingIndicator", "SetItemToRepresent");

	Params::FortItemRatingIndicator_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemRatingIndicator.SetItemViewContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortItemViewContextInterface>ItemViewContext                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortItemRatingIndicator::SetItemViewContext(TScriptInterface<class IFortItemViewContextInterface> ItemViewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemRatingIndicator", "SetItemViewContext");

	Params::FortItemRatingIndicator_SetItemViewContext Parms{};

	Parms.ItemViewContext = ItemViewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotSelectorButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortSquadSlotSelectorButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "GetPopupMenu");

	Params::FortSquadSlotSelectorButton_GetPopupMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotSelectorButton.HandlePostDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSelectorButton::HandlePostDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "HandlePostDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotSelectorButton.HandlePreDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSelectorButton::HandlePreDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "HandlePreDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotSelectorButton.OpenSquadSlot
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotSelectorButton::OpenSquadSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "OpenSquadSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotSelectorButton.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotSelectorButton::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotSelectorButton.SquadSlotWidgetUpdated
// (Native, Event, Public, BlueprintEvent)

void UFortSquadSlotSelectorButton::SquadSlotWidgetUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "SquadSlotWidgetUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotSelectorButton.ViewInAll
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotSelectorButton::ViewInAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "ViewInAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotSelectorButton.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotSelectorButton::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotSelectorButton.GetInPreviewMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotSelectorButton::GetInPreviewMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "GetInPreviewMode");

	Params::FortSquadSlotSelectorButton_GetInPreviewMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotSelectorButton.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotSelectorButton::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorButton", "IsSquadSlotLockedBP");

	Params::FortSquadSlotSelectorButton_IsSquadSlotLockedBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativeSpawnDisplay.LoadItems
// (Final, Native, Public, BlueprintCallable)

void UFortCreativeSpawnDisplay::LoadItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeSpawnDisplay", "LoadItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeSpawnDisplay.OnLoadedItems
// (Event, Public, BlueprintEvent)

void UFortCreativeSpawnDisplay::OnLoadedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeSpawnDisplay", "OnLoadedItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemPopupMenu.HandleCompareAction
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementItemPopupMenu::HandleCompareAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemPopupMenu", "HandleCompareAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementItemPopupMenu.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementItemPopupMenu::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemPopupMenu", "HandleItemChanged");

	Params::FortItemManagementItemPopupMenu_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementItemPopupMenu.MulchItem
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementItemPopupMenu::MulchItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemPopupMenu", "MulchItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementItemPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemManagementItemTileButton*ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemManagementItemTileButton* UFortItemManagementItemPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemPopupMenu", "GetHostButton");

	Params::FortItemManagementItemPopupMenu_GetHostButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMatchmakingKnobsModal.ApplyChanges
// (Native, Protected, BlueprintCallable)

void UFortMatchmakingKnobsModal::ApplyChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "ApplyChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.GetScrolledOffWhitelistedPlayers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UFortMatchmakingKnobsModal::GetScrolledOffWhitelistedPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "GetScrolledOffWhitelistedPlayers");

	Params::FortMatchmakingKnobsModal_GetScrolledOffWhitelistedPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMatchmakingKnobsModal.HandleCancelClicked
// (Native, Event, Public, BlueprintEvent)

void UFortMatchmakingKnobsModal::HandleCancelClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "HandleCancelClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.HandleNoOptionsLoaded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortMatchmakingKnobsModal::HandleNoOptionsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "HandleNoOptionsLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMatchmakingKnobsModal.InitForOptionsComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortActorOptionsComponent*       OptionsComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::InitForOptionsComponent(class UFortActorOptionsComponent* OptionsComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "InitForOptionsComponent");

	Params::FortMatchmakingKnobsModal_InitForOptionsComponent Parms{};

	Parms.OptionsComponent = OptionsComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.OnAcceptAnimationComplete
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingKnobsModal::OnAcceptAnimationComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "OnAcceptAnimationComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.OnCurrentItemSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::OnCurrentItemSelectionChanged(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "OnCurrentItemSelectionChanged");

	Params::FortMatchmakingKnobsModal_OnCurrentItemSelectionChanged Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.OnHoveredItemChanged
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::OnHoveredItemChanged(class UObject* Item, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "OnHoveredItemChanged");

	Params::FortMatchmakingKnobsModal_OnHoveredItemChanged Parms{};

	Parms.Item = Item;
	Parms.bIsHovered = bIsHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.OnSelectionUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortMatchmakingKnobsSpinnerButton*CurrentSelection                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::OnSelectionUpdated(class UFortMatchmakingKnobsSpinnerButton* CurrentSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "OnSelectionUpdated");

	Params::FortMatchmakingKnobsModal_OnSelectionUpdated Parms{};

	Parms.CurrentSelection = CurrentSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMatchmakingKnobsModal.SetInGameMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsInGame                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::SetInGameMode(bool bIsInGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "SetInGameMode");

	Params::FortMatchmakingKnobsModal_SetInGameMode Parms{};

	Parms.bIsInGame = bIsInGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.SetInScrimmage
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingKnobsModal::SetInScrimmage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "SetInScrimmage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMatchmakingKnobsModal.SetListDataSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUFortMatchmakingKnobsDataSource        ListType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingKnobsModal::SetListDataSource(EUFortMatchmakingKnobsDataSource ListType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingKnobsModal", "SetListDataSource");

	Params::FortMatchmakingKnobsModal_SetListDataSource Parms{};

	Parms.ListType = ListType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePermissionOptions.CloseDialog
// (Event, Public, BlueprintEvent)

void UFortCreativePermissionOptions::CloseDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePermissionOptions", "CloseDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePermissionOptions.ShowWhitelistLimitError
// (Event, Public, BlueprintEvent)

void UFortCreativePermissionOptions::ShowWhitelistLimitError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePermissionOptions", "ShowWhitelistLimitError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePermissionOptions.UpdatePermissions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCreativePlotPermission             Permissions                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   WhiteList                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCreativePermissionOptions::UpdatePermissions(EFortCreativePlotPermission Permissions, const TArray<class FString>& WhiteList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePermissionOptions", "UpdatePermissions");

	Params::FortCreativePermissionOptions_UpdatePermissions Parms{};

	Parms.Permissions = Permissions;
	Parms.WhiteList = std::move(WhiteList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePlayOptions.ImportPlatformFriends
// (Final, Native, Protected, BlueprintCallable)

void UFortCreativePlayOptions::ImportPlatformFriends()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePlayOptions", "ImportPlatformFriends");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePlayOptions.SetMatchmakingWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAthenaMatchmakingWidget*     InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePlayOptions::SetMatchmakingWidget(class UFortAthenaMatchmakingWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePlayOptions", "SetMatchmakingWidget");

	Params::FortCreativePlayOptions_SetMatchmakingWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePlayOptions.ShouldShowImportPlatformFriendsOption
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCreativePlayOptions::ShouldShowImportPlatformFriendsOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePlayOptions", "ShouldShowImportPlatformFriendsOption");

	Params::FortCreativePlayOptions_ShouldShowImportPlatformFriendsOption Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionActivationWidgetPanel.InfoObjectUpdated
// (Event, Protected, BlueprintEvent)

void UFortMissionActivationWidgetPanel::InfoObjectUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "InfoObjectUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMissionActivationWidgetPanel.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVoteActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetPanel::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "OnActiveVoteChangedBP");

	Params::FortMissionActivationWidgetPanel_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidgetPanel.OnMultiplayerChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetPanel::OnMultiplayerChangedBP(bool bIsMultiplayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "OnMultiplayerChangedBP");

	Params::FortMissionActivationWidgetPanel_OnMultiplayerChangedBP Parms{};

	Parms.bIsMultiplayer = bIsMultiplayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidgetPanel.OnVoteLockoutChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetPanel::OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "OnVoteLockoutChangedBP");

	Params::FortMissionActivationWidgetPanel_OnVoteLockoutChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidgetPanel.OnVoteUpdatedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetPanel::OnVoteUpdatedBP(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "OnVoteUpdatedBP");

	Params::FortMissionActivationWidgetPanel_OnVoteUpdatedBP Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidgetPanel.SetInfoObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMissionActivationInfo*       NewInfoObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidgetPanel::SetInfoObject(class UFortMissionActivationInfo* NewInfoObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidgetPanel", "SetInfoObject");

	Params::FortMissionActivationWidgetPanel_SetInfoObject Parms{};

	Parms.NewInfoObject = NewInfoObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.CheckForNewMainQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::CheckForNewMainQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "CheckForNewMainQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.HandleEventQuestMapActivate
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::HandleEventQuestMapActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "HandleEventQuestMapActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.HandleMapViewerNavigationRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewerNavigationDirection              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::HandleMapViewerNavigationRequest(EViewerNavigationDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "HandleMapViewerNavigationRequest");

	Params::FortQuestMapScreen_HandleMapViewerNavigationRequest Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.HandleQuestDetailsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestItem*                   QuestDefinition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::HandleQuestDetailsUpdated(class UFortQuestItem* QuestDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "HandleQuestDetailsUpdated");

	Params::FortQuestMapScreen_HandleQuestDetailsUpdated Parms{};

	Parms.QuestDefinition = QuestDefinition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapScreen.HandleQuestIndexSelectionModelChanged
// (Final, Native, Private)

void UFortQuestMapScreen::HandleQuestIndexSelectionModelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "HandleQuestIndexSelectionModelChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.HandleRequestCurrentQuestNavigation
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::HandleRequestCurrentQuestNavigation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "HandleRequestCurrentQuestNavigation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.InitializeQuestData
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::InitializeQuestData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "InitializeQuestData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.IsBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::IsBeyondCutoffQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "IsBeyondCutoffQuest");

	Params::FortQuestMapScreen_IsBeyondCutoffQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapScreen.IsEventFlagActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           EventFlag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::IsEventFlagActive(const class FString& EventFlag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "IsEventFlagActive");

	Params::FortQuestMapScreen_IsEventFlagActive Parms{};

	Parms.EventFlag = std::move(EventFlag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapScreen.SetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBeyondCutoff                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetBeyondCutoffQuest(bool bBeyondCutoff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "SetBeyondCutoffQuest");

	Params::FortQuestMapScreen_SetBeyondCutoffQuest Parms{};

	Parms.bBeyondCutoff = bBeyondCutoff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.SetFindCurrentActionVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// EInputActionState                       ActionVisibility                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetFindCurrentActionVisibility(EInputActionState ActionVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "SetFindCurrentActionVisibility");

	Params::FortQuestMapScreen_SetFindCurrentActionVisibility Parms{};

	Parms.ActionVisibility = ActionVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapScreen.SetIgnorePageNavigation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIgnoreNavigation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetIgnorePageNavigation(bool bIgnoreNavigation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "SetIgnorePageNavigation");

	Params::FortQuestMapScreen_SetIgnorePageNavigation Parms{};

	Parms.bIgnoreNavigation = bIgnoreNavigation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.SetQuestMapViewer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestMapViewer*              Value                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::SetQuestMapViewer(class UFortQuestMapViewer* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "SetQuestMapViewer");

	Params::FortQuestMapScreen_SetQuestMapViewer Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.ToggleQuestMapState
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapScreen::ToggleQuestMapState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "ToggleQuestMapState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapScreen.UpdateQuestMapMode
// (Event, Public, BlueprintEvent)
// Parameters:
// EQuestMapScreenMode                     QuestMapMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapScreen::UpdateQuestMapMode(EQuestMapScreenMode QuestMapMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "UpdateQuestMapMode");

	Params::FortQuestMapScreen_UpdateQuestMapMode Parms{};

	Parms.QuestMapMode = QuestMapMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapScreen.GetBeyondCutoffQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestMapScreen::GetBeyondCutoffQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapScreen", "GetBeyondCutoffQuest");

	Params::FortQuestMapScreen_GetBeyondCutoffQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortCreativePublishModal.HandleCodeConfirmation
// (Final, Native, Private)

void UFortCreativePublishModal::HandleCodeConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleCodeConfirmation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleCopyCode
// (Final, Native, Private)

void UFortCreativePublishModal::HandleCopyCode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleCopyCode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleDescriptionTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::HandleDescriptionTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleDescriptionTextChanged");

	Params::FortCreativePublishModal_HandleDescriptionTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleDescriptionTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommittMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::HandleDescriptionTextCommitted(const class FText& Text, ETextCommit CommittMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleDescriptionTextCommitted");

	Params::FortCreativePublishModal_HandleDescriptionTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommittMethod = CommittMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleNameTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::HandleNameTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleNameTextChanged");

	Params::FortCreativePublishModal_HandleNameTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleNameTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommittMethod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::HandleNameTextCommitted(const class FText& Text, ETextCommit CommittMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleNameTextCommitted");

	Params::FortCreativePublishModal_HandleNameTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommittMethod = CommittMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.HandleSubmitClicked
// (Final, Native, Private)

void UFortCreativePublishModal::HandleSubmitClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "HandleSubmitClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.OnCodeConfirmation
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnCodeConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnCodeConfirmation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnCodeCopied
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnCodeCopied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnCodeCopied");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnDescriptionTextCommitted
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnDescriptionTextCommitted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnDescriptionTextCommitted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnNameTextCommitted
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnNameTextCommitted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnNameTextCommitted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnPublishBegin
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnPublishBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnPublishBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnPublishedLinksChanged
// (Final, Native, Private)
// Parameters:
// class FString                           ErrorCode                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Mnemonic                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::OnPublishedLinksChanged(const class FString& ErrorCode, const class FString& Mnemonic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnPublishedLinksChanged");

	Params::FortCreativePublishModal_OnPublishedLinksChanged Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Mnemonic = std::move(Mnemonic);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishModal.OnPublishError
// (Event, Protected, BlueprintEvent)

void UFortCreativePublishModal::OnPublishError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnPublishError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativePublishModal.OnValidCheckComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::OnValidCheckComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "OnValidCheckComplete");

	Params::FortCreativePublishModal_OnValidCheckComplete Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativePublishModal.PublishMyCurrentCreativePlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCreativePublishOptions          MyPublishOptions                                       (Parm, NativeAccessSpecifierPublic)

void UFortCreativePublishModal::PublishMyCurrentCreativePlot(const struct FCreativePublishOptions& MyPublishOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishModal", "PublishMyCurrentCreativePlot");

	Params::FortCreativePublishModal_PublishMyCurrentCreativePlot Parms{};

	Parms.MyPublishOptions = std::move(MyPublishOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.BackupMyIsland
// (Final, Native, Public, BlueprintCallable)

void UFortCreativePublishOptions::BackupMyIsland()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "BackupMyIsland");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.CheckpointRestoreStateChanged
// (Final, Native, Public)
// Parameters:
// EBackupSaveState                        SaveState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::CheckpointRestoreStateChanged(EBackupSaveState SaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "CheckpointRestoreStateChanged");

	Params::FortCreativePublishOptions_CheckpointRestoreStateChanged Parms{};

	Parms.SaveState = SaveState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.CheckpointSaveStateChanged
// (Final, Native, Public)
// Parameters:
// EBackupSaveState                        SaveState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::CheckpointSaveStateChanged(EBackupSaveState SaveState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "CheckpointSaveStateChanged");

	Params::FortCreativePublishOptions_CheckpointSaveStateChanged Parms{};

	Parms.SaveState = SaveState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.OnBackupMyIsland
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::OnBackupMyIsland(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "OnBackupMyIsland");

	Params::FortCreativePublishOptions_OnBackupMyIsland Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativePublishOptions.OnRestoreMyIslandFromBackup
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::OnRestoreMyIslandFromBackup(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "OnRestoreMyIslandFromBackup");

	Params::FortCreativePublishOptions_OnRestoreMyIslandFromBackup Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativePublishOptions.OnRestoreStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::OnRestoreStateChanged(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "OnRestoreStateChanged");

	Params::FortCreativePublishOptions_OnRestoreStateChanged Parms{};

	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativePublishOptions.OnSaveStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::OnSaveStateChanged(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "OnSaveStateChanged");

	Params::FortCreativePublishOptions_OnSaveStateChanged Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativePublishOptions.PublishMyCurrentCreativePlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FCreativePublishOptions          MyPublishOptions                                       (Parm, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::PublishMyCurrentCreativePlot(const struct FCreativePublishOptions& MyPublishOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "PublishMyCurrentCreativePlot");

	Params::FortCreativePublishOptions_PublishMyCurrentCreativePlot Parms{};

	Parms.MyPublishOptions = std::move(MyPublishOptions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.ResetMyCurrentCreativePlot
// (Final, Native, Public, BlueprintCallable)

void UFortCreativePublishOptions::ResetMyCurrentCreativePlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "ResetMyCurrentCreativePlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.RestoreMyIslandFromBackup
// (Final, Native, Public, BlueprintCallable)

void UFortCreativePublishOptions::RestoreMyIslandFromBackup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "RestoreMyIslandFromBackup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.UpdatePermissions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCreativePlotPermission             Permissions                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::UpdatePermissions(EFortCreativePlotPermission Permissions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "UpdatePermissions");

	Params::FortCreativePublishOptions_UpdatePermissions Parms{};

	Parms.Permissions = Permissions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativePublishOptions.UpdateTimeSinceLastBackup
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FDateTime                        LastBackup                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativePublishOptions::UpdateTimeSinceLastBackup(const struct FDateTime& LastBackup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativePublishOptions", "UpdateTimeSinceLastBackup");

	Params::FortCreativePublishOptions_UpdateTimeSinceLastBackup Parms{};

	Parms.LastBackup = std::move(LastBackup);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeServerOptionTile.SetBPData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortCreativeServerInfo*          ServerInfo                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeServerOptionTile::SetBPData(const class UFortCreativeServerInfo* ServerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeServerOptionTile", "SetBPData");

	Params::FortCreativeServerOptionTile_SetBPData Parms{};

	Parms.ServerInfo = ServerInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortCreativeServersView.NavigateServerLeft
// (Final, Native, Protected, BlueprintCallable)

void UFortCreativeServersView::NavigateServerLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeServersView", "NavigateServerLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeServersView.NavigateServerRight
// (Final, Native, Protected, BlueprintCallable)

void UFortCreativeServersView::NavigateServerRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeServersView", "NavigateServerRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeServersView.OnCreativeServerListRefreshed
// (Event, Public, BlueprintEvent)

void UFortCreativeServersView::OnCreativeServerListRefreshed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeServersView", "OnCreativeServerListRefreshed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortCreativeServersView.RefreshServerList
// (Final, Native, Protected, BlueprintCallable)

void UFortCreativeServersView::RefreshServerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeServersView", "RefreshServerList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortCreativeSettingsFlow.HasActiveModalWidget
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    OutWidgetActive                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCreativeSettingsFlow::HasActiveModalWidget(bool* OutWidgetActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeSettingsFlow", "HasActiveModalWidget");

	Params::FortCreativeSettingsFlow_HasActiveModalWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidgetActive != nullptr)
		*OutWidgetActive = Parms.OutWidgetActive;
}


// Function FortniteUI.FortCreativeSettingsFlow.OnClose
// (Final, Native, Public, BlueprintCallable)

void UFortCreativeSettingsFlow::OnClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCreativeSettingsFlow", "OnClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDailyRewards.SetupDailyRewards
// (Event, Public, BlueprintEvent)

void UFortDailyRewards::SetupDailyRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDailyRewards", "SetupDailyRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDailyRewards.TryGetDailyRewardsData
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDailyRewardsData            OutDailyRewardsData                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ItemCardsPerSchedule                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinEpicRewards                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDailyRewards::TryGetDailyRewardsData(struct FFortDailyRewardsData* OutDailyRewardsData, int32 ItemCardsPerSchedule, int32 MinEpicRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDailyRewards", "TryGetDailyRewardsData");

	Params::FortDailyRewards_TryGetDailyRewardsData Parms{};

	Parms.ItemCardsPerSchedule = ItemCardsPerSchedule;
	Parms.MinEpicRewards = MinEpicRewards;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDailyRewardsData != nullptr)
		*OutDailyRewardsData = std::move(Parms.OutDailyRewardsData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemDetailsActivatablePanel.HandleConsumeItemProgressChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel::HandleConsumeItemProgressChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsActivatablePanel", "HandleConsumeItemProgressChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsActivatablePanel.HandleDifferentItemToCompareSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel::HandleDifferentItemToCompareSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsActivatablePanel", "HandleDifferentItemToCompareSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsActivatablePanel.HandleDifferentItemToDetailSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsActivatablePanel::HandleDifferentItemToDetailSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsActivatablePanel", "HandleDifferentItemToDetailSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteUI.FortTimerTimespanDataSource.FortTimespanDataSourceOnChangeInternalDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTimerTimespanDataSource::FortTimespanDataSourceOnChangeInternalDelegate__DelegateSignature(class UObject* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "FortTimespanDataSourceOnChangeInternalDelegate__DelegateSignature");

	Params::FortTimerTimespanDataSource_FortTimespanDataSourceOnChangeInternalDelegate__DelegateSignature Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTimerTimespanDataSource.SetTimespanSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(struct FTimespan* Result)>Value                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortTimerTimespanDataSource::SetTimespanSource(const TDelegate<void(struct FTimespan* Result)>& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "SetTimespanSource");

	Params::FortTimerTimespanDataSource_SetTimespanSource Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortTimerTimespanDataSource.TimespanSourceDelegate__DelegateSignature
// (Public, Delegate, HasOutParams, HasDefaults)
// Parameters:
// struct FTimespan                        Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTimerTimespanDataSource::TimespanSourceDelegate__DelegateSignature(struct FTimespan* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "TimespanSourceDelegate__DelegateSignature");

	Params::FortTimerTimespanDataSource_TimespanSourceDelegate__DelegateSignature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteUI.FortTimerTimespanDataSource.StartTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTickImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTimerTimespanDataSource::StartTimer(float Delay, bool bTickImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "StartTimer");

	Params::FortTimerTimespanDataSource_StartTimer Parms{};

	Parms.Delay = Delay;
	Parms.bTickImmediately = bTickImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTimerTimespanDataSource.StopTimer
// (Final, Native, Public, BlueprintCallable)

void UFortTimerTimespanDataSource::StopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "StopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTimerTimespanDataSource.TickManually
// (Final, Native, Public, BlueprintCallable)

void UFortTimerTimespanDataSource::TickManually()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimerTimespanDataSource", "TickManually");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         AmmoItemDef                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortDefenderConfigPanel::GetAmmoCountFromDefender(const class UFortWorldItemDefinition* AmmoItemDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetAmmoCountFromDefender");

	Params::FortDefenderConfigPanel_GetAmmoCountFromDefender Parms{};

	Parms.AmmoItemDef = AmmoItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         AmmoItemDef                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortDefenderConfigPanel::GetAmmoCountFromPlayer(const class UFortWorldItemDefinition* AmmoItemDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetAmmoCountFromPlayer");

	Params::FortDefenderConfigPanel_GetAmmoCountFromPlayer Parms{};

	Parms.AmmoItemDef = AmmoItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItem* UFortDefenderConfigPanel::GetCompatibleAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetCompatibleAmmo");

	Params::FortDefenderConfigPanel_GetCompatibleAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmoDef
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortDefenderConfigPanel::GetCompatibleAmmoDef() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetCompatibleAmmoDef");

	Params::FortDefenderConfigPanel_GetCompatibleAmmoDef Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.GetDefenderPawnWeaponItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAIPawn*                      DefenderPawn                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItem* UFortDefenderConfigPanel::GetDefenderPawnWeaponItem(const class AFortAIPawn* DefenderPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetDefenderPawnWeaponItem");

	Params::FortDefenderConfigPanel_GetDefenderPawnWeaponItem Parms{};

	Parms.DefenderPawn = DefenderPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.GetSourceSchematic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ItemDefUsedForCrafting                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSchematicItemDefinition*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSchematicItemDefinition* UFortDefenderConfigPanel::GetSourceSchematic(const class UFortWorldItemDefinition* ItemDefUsedForCrafting) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "GetSourceSchematic");

	Params::FortDefenderConfigPanel_GetSourceSchematic Parms{};

	Parms.ItemDefUsedForCrafting = ItemDefUsedForCrafting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.HasAnyDefenders
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderConfigPanel::HasAnyDefenders() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "HasAnyDefenders");

	Params::FortDefenderConfigPanel_HasAnyDefenders Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.HasWeaponForSelectedDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderConfigPanel::HasWeaponForSelectedDefender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "HasWeaponForSelectedDefender");

	Params::FortDefenderConfigPanel_HasWeaponForSelectedDefender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.IsWeaponSelectionValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderConfigPanel::IsWeaponSelectionValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "IsWeaponSelectionValid");

	Params::FortDefenderConfigPanel_IsWeaponSelectionValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.SpawnDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderConfigPanel::SpawnDefender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "SpawnDefender");

	Params::FortDefenderConfigPanel_SpawnDefender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderConfigPanel.UnsummonDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderConfigPanel::UnsummonDefender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderConfigPanel", "UnsummonDefender");

	Params::FortDefenderConfigPanel_UnsummonDefender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderItemTileButton.HandleEquipSlotChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   EquipSlot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDefenderItemTileButton::HandleEquipSlotChanged(int32 EquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderItemTileButton", "HandleEquipSlotChanged");

	Params::FortDefenderItemTileButton_HandleEquipSlotChanged Parms{};

	Parms.EquipSlot = EquipSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemTileView.CenterSelectedItemTileWidget
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::CenterSelectedItemTileWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "CenterSelectedItemTileWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.ClearCustomItemList
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::ClearCustomItemList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "ClearCustomItemList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.HideNullItemTile
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::HideNullItemTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "HideNullItemTile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortItemTileView.OnInventoryUpdated__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortItemTileView::OnInventoryUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "OnInventoryUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemTileView.RefreshFilterAndSort
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::RefreshFilterAndSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "RefreshFilterAndSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.RefreshSort
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::RefreshSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "RefreshSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.SetCustomItemList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortItem*>                ItemList                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortItemTileView::SetCustomItemList(const TArray<class UFortItem*>& ItemList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "SetCustomItemList");

	Params::FortItemTileView_SetCustomItemList Parms{};

	Parms.ItemList = std::move(ItemList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.SetFilter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemFilterDefinition        Param_Filter                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortItemTileView::SetFilter(const struct FFortItemFilterDefinition& Param_Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "SetFilter");

	Params::FortItemTileView_SetFilter Parms{};

	Parms.Param_Filter = std::move(Param_Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.SetFilterAndSorter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemFilterDefinition        Param_Filter                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortItemSorterDefinition        Param_Sorter                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortItemTileView::SetFilterAndSorter(const struct FFortItemFilterDefinition& Param_Filter, const struct FFortItemSorterDefinition& Param_Sorter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "SetFilterAndSorter");

	Params::FortItemTileView_SetFilterAndSorter Parms{};

	Parms.Param_Filter = std::move(Param_Filter);
	Parms.Param_Sorter = std::move(Param_Sorter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.SetItemViewContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortItemViewContextInterface>Param_ItemViewContext                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortItemTileView::SetItemViewContext(TScriptInterface<class IFortItemViewContextInterface> Param_ItemViewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "SetItemViewContext");

	Params::FortItemTileView_SetItemViewContext Parms{};

	Parms.Param_ItemViewContext = Param_ItemViewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.SetSorter
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemSorterDefinition        Param_Sorter                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortItemTileView::SetSorter(const struct FFortItemSorterDefinition& Param_Sorter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "SetSorter");

	Params::FortItemTileView_SetSorter Parms{};

	Parms.Param_Sorter = std::move(Param_Sorter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.ShowNullItemTile
// (Final, Native, Public, BlueprintCallable)

void UFortItemTileView::ShowNullItemTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "ShowNullItemTile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemTileView.ContainsItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemTileView::ContainsItem(const class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTileView", "ContainsItem");

	Params::FortItemTileView_ContainsItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderSlotItemPicker.NextSortType
// (Final, Native, Protected, BlueprintCallable)

void UFortDefenderSlotItemPicker::NextSortType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSlotItemPicker", "NextSortType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDefenderSlotItemPicker.OnCurrentSortTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EInventoryContentSortType               SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDefenderSlotItemPicker::OnCurrentSortTypeChanged(EInventoryContentSortType SortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSlotItemPicker", "OnCurrentSortTypeChanged");

	Params::FortDefenderSlotItemPicker_OnCurrentSortTypeChanged Parms{};

	Parms.SortType = SortType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortDefenderSlotItemPicker.PopulateDefenderSlotItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortDefenderItem*                DefenderItem                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDefenderSlotItemPicker::PopulateDefenderSlotItems(const class UFortDefenderItem* DefenderItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSlotItemPicker", "PopulateDefenderSlotItems");

	Params::FortDefenderSlotItemPicker_PopulateDefenderSlotItems Parms{};

	Parms.DefenderItem = DefenderItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDefenderSlotItemPicker.SetSortType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EInventoryContentSortType               SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDefenderSlotItemPicker::SetSortType(EInventoryContentSortType SortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSlotItemPicker", "SetSortType");

	Params::FortDefenderSlotItemPicker_SetSortType Parms{};

	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabListWidgetBase.GetPreregisteredTabInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             TabNameID                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTabListRegistrationInfo     OutTabInfo                                             (Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTabListWidgetBase::GetPreregisteredTabInfo(const class FName TabNameID, struct FFortTabListRegistrationInfo* OutTabInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "GetPreregisteredTabInfo");

	Params::FortTabListWidgetBase_GetPreregisteredTabInfo Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTabInfo != nullptr)
		*OutTabInfo = std::move(Parms.OutTabInfo);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTabListWidgetBase.GetVisibleTabCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortTabListWidgetBase::GetVisibleTabCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "GetVisibleTabCount");

	Params::FortTabListWidgetBase_GetVisibleTabCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteUI.FortTabListWidgetBase.OnTabContentCreated__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonUserWidget*                TabWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTabListWidgetBase::OnTabContentCreated__DelegateSignature(class FName TabId, class UCommonUserWidget* TabWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "OnTabContentCreated__DelegateSignature");

	Params::FortTabListWidgetBase_OnTabContentCreated__DelegateSignature Parms{};

	Parms.TabId = TabId;
	Parms.TabWidget = TabWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTabListWidgetBase.RegisterAllPreregisteredTabInfos
// (Final, Native, Public, BlueprintCallable)

void UFortTabListWidgetBase::RegisterAllPreregisteredTabInfos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "RegisterAllPreregisteredTabInfos");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabListWidgetBase.RegisterFortTab
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UCommonButton>        TabButtonType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTabButtonLabelInfo          LabelInfo                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                          ContentWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTabListWidgetBase::RegisterFortTab(class FName TabNameID, TSubclassOf<class UCommonButton> TabButtonType, const struct FFortTabButtonLabelInfo& LabelInfo, class UWidget* ContentWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "RegisterFortTab");

	Params::FortTabListWidgetBase_RegisterFortTab Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButtonType = TabButtonType;
	Parms.LabelInfo = std::move(LabelInfo);
	Parms.ContentWidget = ContentWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTabListWidgetBase.SetNextTabInputActionData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              NextData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortTabListWidgetBase::SetNextTabInputActionData(const struct FDataTableRowHandle& NextData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "SetNextTabInputActionData");

	Params::FortTabListWidgetBase_SetNextTabInputActionData Parms{};

	Parms.NextData = std::move(NextData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabListWidgetBase.SetPreviousTabInputActionData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              PreviousData                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortTabListWidgetBase::SetPreviousTabInputActionData(const struct FDataTableRowHandle& PreviousData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "SetPreviousTabInputActionData");

	Params::FortTabListWidgetBase_SetPreviousTabInputActionData Parms{};

	Parms.PreviousData = std::move(PreviousData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabListWidgetBase.SetTabHiddenState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHidden                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTabListWidgetBase::SetTabHiddenState(class FName TabNameID, bool bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "SetTabHiddenState");

	Params::FortTabListWidgetBase_SetTabHiddenState Parms{};

	Parms.TabNameID = TabNameID;
	Parms.bHidden = bHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabListWidgetBase.IsFirstTabActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTabListWidgetBase::IsFirstTabActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "IsFirstTabActive");

	Params::FortTabListWidgetBase_IsFirstTabActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTabListWidgetBase.IsLastTabActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTabListWidgetBase::IsLastTabActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabListWidgetBase", "IsLastTabActive");

	Params::FortTabListWidgetBase_IsLastTabActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSelectorButton.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSelectorButton::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSelectorButton", "HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSelectorButton.HandleSquadChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSelectorButton::HandleSquadChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSelectorButton", "HandleSquadChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSelectorButton.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSelectorButton::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSelectorButton", "SetIdOfSquadToManageBP");

	Params::FortSquadSelectorButton_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSelectorButton.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadSelectorButton::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSelectorButton", "GetIdOfSquadToManageBP");

	Params::FortSquadSelectorButton_GetIdOfSquadToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSelectorButton.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSelectorButton::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSelectorButton", "TryGetStaticSquadDataBP");

	Params::FortSquadSelectorButton_TryGetStaticSquadDataBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderSquadSelectorButton.TryGetPowerLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   OutPowerLevel                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderSquadSelectorButton::TryGetPowerLevel(int32* OutPowerLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSquadSelectorButton", "TryGetPowerLevel");

	Params::FortDefenderSquadSelectorButton_TryGetPowerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPowerLevel != nullptr)
		*OutPowerLevel = Parms.OutPowerLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDefenderSquadSelectorButton.TryGetTheaterUniqueId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           OutTheaterUniqueId                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutIsUnlocked                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDefenderSquadSelectorButton::TryGetTheaterUniqueId(class FString* OutTheaterUniqueId, bool* OutIsUnlocked) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderSquadSelectorButton", "TryGetTheaterUniqueId");

	Params::FortDefenderSquadSelectorButton_TryGetTheaterUniqueId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTheaterUniqueId != nullptr)
		*OutTheaterUniqueId = std::move(Parms.OutTheaterUniqueId);

	if (OutIsUnlocked != nullptr)
		*OutIsUnlocked = Parms.OutIsUnlocked;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSocialInteractionMenu.OnEnableBackButtonDisplay
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnableBackButtonDisplay                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialInteractionMenu::OnEnableBackButtonDisplay(bool bEnableBackButtonDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialInteractionMenu", "OnEnableBackButtonDisplay");

	Params::FortSocialInteractionMenu_OnEnableBackButtonDisplay Parms{};

	Parms.bEnableBackButtonDisplay = bEnableBackButtonDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSocialInteractionMenu.OnUserPresenceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOnlineStatus                           OnlineStatus                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialInteractionMenu::OnUserPresenceChanged(EOnlineStatus OnlineStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialInteractionMenu", "OnUserPresenceChanged");

	Params::FortSocialInteractionMenu_OnUserPresenceChanged Parms{};

	Parms.OnlineStatus = OnlineStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.AutoEquip
// (Final, Native, Public, BlueprintCallable)

void UFortDirectAcquisitionOfferDetailsWidgetBase::AutoEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "AutoEquip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.CanAutoEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDirectAcquisitionOfferDetailsWidgetBase::CanAutoEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "CanAutoEquip");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_CanAutoEquip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// (Final, Native, Protected)
// Parameters:
// struct FFortPublicAccountInfo           NewInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::HandleCurrentlyViewedAccountInfoChanged(const struct FFortPublicAccountInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "HandleCurrentlyViewedAccountInfoChanged");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.OnEnterViewModeActionCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    PassThrough                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::OnEnterViewModeActionCommitted(bool* PassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "OnEnterViewModeActionCommitted");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_OnEnterViewModeActionCommitted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PassThrough != nullptr)
		*PassThrough = Parms.PassThrough;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.OnOfferSet
// (Event, Public, BlueprintEvent)

void UFortDirectAcquisitionOfferDetailsWidgetBase::OnOfferSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "OnOfferSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.OnUpdateStatus
// (Event, Public, BlueprintEvent)

void UFortDirectAcquisitionOfferDetailsWidgetBase::OnUpdateStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "OnUpdateStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.PurchaseAmountLeft
// (Event, Public, BlueprintEvent)

void UFortDirectAcquisitionOfferDetailsWidgetBase::PurchaseAmountLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "PurchaseAmountLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.PurchaseAmountRight
// (Event, Public, BlueprintEvent)

void UFortDirectAcquisitionOfferDetailsWidgetBase::PurchaseAmountRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "PurchaseAmountRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.RefreshOfferInfo
// (Final, Native, Public, BlueprintCallable)

void UFortDirectAcquisitionOfferDetailsWidgetBase::RefreshOfferInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "RefreshOfferInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SetIsInItemViewMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::SetIsInItemViewMode(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "SetIsInItemViewMode");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_SetIsInItemViewMode Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SetPagedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortStoreFrontOfferInfo*> InPagedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::SetPagedItems(const TArray<class UFortStoreFrontOfferInfo*>& InPagedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "SetPagedItems");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_SetPagedItems Parms{};

	Parms.InPagedItems = std::move(InPagedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SetShouldAllowItemViewModeAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::SetShouldAllowItemViewModeAction(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "SetShouldAllowItemViewModeAction");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_SetShouldAllowItemViewModeAction Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SetupOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortStoreFrontOfferInfo*         InOfferData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::SetupOffer(class UFortStoreFrontOfferInfo* InOfferData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "SetupOffer");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer Parms{};

	Parms.InOfferData = InOfferData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.UpdateItemViewModeBP
// (Event, Protected, BlueprintEvent)

void UFortDirectAcquisitionOfferDetailsWidgetBase::UpdateItemViewModeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "UpdateItemViewModeBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.GetOfferInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreFrontOfferInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreFrontOfferInfo* UFortDirectAcquisitionOfferDetailsWidgetBase::GetOfferInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "GetOfferInfo");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SendShopInteractionAnalytic
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           Interaction                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionOfferDetailsWidgetBase::SendShopInteractionAnalytic(const class FString& Interaction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "SendShopInteractionAnalytic");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_SendShopInteractionAnalytic Parms{};

	Parms.Interaction = std::move(Interaction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.ShouldHavePurchaseConfirmation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDirectAcquisitionOfferDetailsWidgetBase::ShouldHavePurchaseConfirmation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionOfferDetailsWidgetBase", "ShouldHavePurchaseConfirmation");

	Params::FortDirectAcquisitionOfferDetailsWidgetBase_ShouldHavePurchaseConfirmation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMtxStoreRootBase.ClearOfferWidgets
// (Event, Public, BlueprintEvent)

void UFortMtxStoreRootBase::ClearOfferWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "ClearOfferWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMtxStoreRootBase.GenerateOfferWidget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortStoreFrontOfferInfo*         OfferData                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMtxStoreRootBase::GenerateOfferWidget(class UFortStoreFrontOfferInfo* OfferData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "GenerateOfferWidget");

	Params::FortMtxStoreRootBase_GenerateOfferWidget Parms{};

	Parms.OfferData = OfferData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMtxStoreRootBase.NoOffersAvailable
// (Event, Public, BlueprintEvent)

void UFortMtxStoreRootBase::NoOffersAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "NoOffersAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMtxStoreRootBase.OnOffersGenerated
// (Event, Public, BlueprintEvent)

void UFortMtxStoreRootBase::OnOffersGenerated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "OnOffersGenerated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMtxStoreRootBase.OnPurchasingDisabled
// (Event, Public, BlueprintEvent)

void UFortMtxStoreRootBase::OnPurchasingDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "OnPurchasingDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMtxStoreRootBase.OnStartReadingOffers
// (Event, Public, BlueprintEvent)

void UFortMtxStoreRootBase::OnStartReadingOffers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "OnStartReadingOffers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMtxStoreRootBase.OnUpdateOtherPlatformMTXMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    HasOtherPlatformCurrency                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CurrencyMessageLocText                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMtxStoreRootBase::OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, const class FText& CurrencyMessageLocText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "OnUpdateOtherPlatformMTXMessage");

	Params::FortMtxStoreRootBase_OnUpdateOtherPlatformMTXMessage Parms{};

	Parms.HasOtherPlatformCurrency = HasOtherPlatformCurrency;
	Parms.CurrencyMessageLocText = std::move(CurrencyMessageLocText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMtxStoreRootBase.PushStoreSelection
// (Final, Native, Public)

void UFortMtxStoreRootBase::PushStoreSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "PushStoreSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMtxStoreRootBase.SetStorefrontNames
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   InStorefrontNames                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMtxStoreRootBase::SetStorefrontNames(const TArray<class FString>& InStorefrontNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "SetStorefrontNames");

	Params::FortMtxStoreRootBase_SetStorefrontNames Parms{};

	Parms.InStorefrontNames = std::move(InStorefrontNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMtxStoreRootBase.AreOffersLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMtxStoreRootBase::AreOffersLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "AreOffersLoaded");

	Params::FortMtxStoreRootBase_AreOffersLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMtxStoreRootBase.GetMtxBreakdown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMtxBreakdown                    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMtxBreakdown UFortMtxStoreRootBase::GetMtxBreakdown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMtxStoreRootBase", "GetMtxBreakdown");

	Params::FortMtxStoreRootBase_GetMtxBreakdown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.OnSubGameImageLoadedFromCMS
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Image                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSubGameSelectBase::OnSubGameImageLoadedFromCMS(const EFortSubgameSelectOption SubGameOption, class UTexture2D* Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "OnSubGameImageLoadedFromCMS");

	Params::FortSubGameSelectBase_OnSubGameImageLoadedFromCMS Parms{};

	Parms.SubGameOption = SubGameOption;
	Parms.Image = Image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSubGameSelectBase.ShowRedeemCodeScreen
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// ESubGame                                SubGame                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       CompletionDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortSubGameSelectBase::ShowRedeemCodeScreen(const ESubGame SubGame, const TDelegate<void()>& CompletionDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "ShowRedeemCodeScreen");

	Params::FortSubGameSelectBase_ShowRedeemCodeScreen Parms{};

	Parms.SubGame = SubGame;
	Parms.CompletionDelegate = CompletionDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSubGameSelectBase.CheckRewardRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSubGameSelectBase::CheckRewardRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "CheckRewardRate");

	Params::FortSubGameSelectBase_CheckRewardRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.GetFullDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             FullDescription                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSubGameSelectBase::GetFullDescription(EFortSubgameSelectOption SubGameOption, class FText* FullDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "GetFullDescription");

	Params::FortSubGameSelectBase_GetFullDescription Parms{};

	Parms.SubGameOption = SubGameOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FullDescription != nullptr)
		*FullDescription = std::move(Parms.FullDescription);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.GetIsOnSale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSubGameSelectBase::GetIsOnSale(EFortSubgameSelectOption SubGameOption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "GetIsOnSale");

	Params::FortSubGameSelectBase_GetIsOnSale Parms{};

	Parms.SubGameOption = SubGameOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.GetShortDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ShortDescription                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSubGameSelectBase::GetShortDescription(EFortSubgameSelectOption SubGameOption, class FText* ShortDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "GetShortDescription");

	Params::FortSubGameSelectBase_GetShortDescription Parms{};

	Parms.SubGameOption = SubGameOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ShortDescription != nullptr)
		*ShortDescription = std::move(Parms.ShortDescription);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.GetSubGameBySubGameSelectOption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESubGame                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESubGame UFortSubGameSelectBase::GetSubGameBySubGameSelectOption(EFortSubgameSelectOption SubGameOption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "GetSubGameBySubGameSelectOption");

	Params::FortSubGameSelectBase_GetSubGameBySubGameSelectOption Parms{};

	Parms.SubGameOption = SubGameOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSubGameSelectBase.GetUpsellStorefrontNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutStorefrontNames                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortSubGameSelectBase::GetUpsellStorefrontNames(const ESubGame SubGame, TArray<class FString>* OutStorefrontNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "GetUpsellStorefrontNames");

	Params::FortSubGameSelectBase_GetUpsellStorefrontNames Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStorefrontNames != nullptr)
		*OutStorefrontNames = std::move(Parms.OutStorefrontNames);
}


// Function FortniteUI.FortSubGameSelectBase.IsSubGameOptionVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSubgameSelectOption                SubGameOption                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSubGameSelectBase::IsSubGameOptionVisible(EFortSubgameSelectOption SubGameOption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSubGameSelectBase", "IsSubGameOptionVisible");

	Params::FortSubGameSelectBase_IsSubGameOptionVisible Parms{};

	Parms.SubGameOption = SubGameOption;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionWidgetBase.OnAffiliateUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AffiliateName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDirectAcquisitionWidgetBase::OnAffiliateUpdated(const class FString& AffiliateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionWidgetBase", "OnAffiliateUpdated");

	Params::FortDirectAcquisitionWidgetBase_OnAffiliateUpdated Parms{};

	Parms.AffiliateName = std::move(AffiliateName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetDailyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetDailyStoreEndDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionWidgetBase", "GetDailyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetSeasonStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetSeasonStoreEndDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionWidgetBase", "GetSeasonStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetStoreCurrencies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAccountItemDefinition*> UFortDirectAcquisitionWidgetBase::GetStoreCurrencies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionWidgetBase", "GetStoreCurrencies");

	Params::FortDirectAcquisitionWidgetBase_GetStoreCurrencies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetWeeklyStoreEndDate
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDirectAcquisitionWidgetBase::GetWeeklyStoreEndDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDirectAcquisitionWidgetBase", "GetWeeklyStoreEndDate");

	Params::FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDisplayNameWidget.HandleTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDisplayNameWidget::HandleTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDisplayNameWidget", "HandleTextChanged");

	Params::FortDisplayNameWidget_HandleTextChanged Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.ClearRegisteredButtons
// (Native, Public, BlueprintCallable)

void UFortDropdownMenu::ClearRegisteredButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "ClearRegisteredButtons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.DeselectAll
// (Final, Native, Public, BlueprintCallable)

void UFortDropdownMenu::DeselectAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "DeselectAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.InternalOnButtonClicked
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    AssociatedButton                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDropdownMenu::InternalOnButtonClicked(class UCommonButton* AssociatedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "InternalOnButtonClicked");

	Params::FortDropdownMenu_InternalOnButtonClicked Parms{};

	Parms.AssociatedButton = AssociatedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.InternalOnSelectionChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    AssociatedButton                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDropdownMenu::InternalOnSelectionChanged(class UCommonButton* AssociatedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "InternalOnSelectionChanged");

	Params::FortDropdownMenu_InternalOnSelectionChanged Parms{};

	Parms.AssociatedButton = AssociatedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.RegisterButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonButton*                    Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDropdownMenu::RegisterButton(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "RegisterButton");

	Params::FortDropdownMenu_RegisterButton Parms{};

	Parms.Button = Button;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortDropdownMenu.GetSelectedButton
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCommonButton*                    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonButton* UFortDropdownMenu::GetSelectedButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "GetSelectedButton");

	Params::FortDropdownMenu_GetSelectedButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDropdownMenu.GetSelectedButtonIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortDropdownMenu::GetSelectedButtonIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownMenu", "GetSelectedButtonIndex");

	Params::FortDropdownMenu_GetSelectedButtonIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDropdownDelegateRegistrar.GetOrCreateDropdownMenu
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortDropdownDelegateRegistrar::GetOrCreateDropdownMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownDelegateRegistrar", "GetOrCreateDropdownMenu");

	Params::FortDropdownDelegateRegistrar_GetOrCreateDropdownMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortDropdownDelegateRegistrar.OnOpenStatusChanged
// (Final, Native, Private)
// Parameters:
// bool                                    Open                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDropdownDelegateRegistrar::OnOpenStatusChanged(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDropdownDelegateRegistrar", "OnOpenStatusChanged");

	Params::FortDropdownDelegateRegistrar_OnOpenStatusChanged Parms{};

	Parms.Open = Open;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemBaseWidget.HandleItemCountChanged
// (Final, Native, Private)
// Parameters:
// class UFortItemDefinition*              Definition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Delta                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemBaseWidget::HandleItemCountChanged(class UFortItemDefinition* Definition, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "HandleItemCountChanged");

	Params::FortItemBaseWidget_HandleItemCountChanged Parms{};

	Parms.Definition = Definition;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemBaseWidget.OnItemCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemBaseWidget::OnItemCountChanged(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "OnItemCountChanged");

	Params::FortItemBaseWidget_OnItemCountChanged Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemBaseWidget.OnItemDefinitionChanged
// (Event, Protected, BlueprintEvent)

void UFortItemBaseWidget::OnItemDefinitionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "OnItemDefinitionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemBaseWidget.SetItemDefinitionToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              InItemDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemBaseWidget::SetItemDefinitionToRepresent(class UFortItemDefinition* InItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "SetItemDefinitionToRepresent");

	Params::FortItemBaseWidget_SetItemDefinitionToRepresent Parms{};

	Parms.InItemDefinition = InItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemBaseWidget.SetItemQuantityPairToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FFortItemQuantityPair            InItemQuantityPair                                     (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemBaseWidget::SetItemQuantityPairToRepresent(const struct FFortItemQuantityPair& InItemQuantityPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "SetItemQuantityPairToRepresent");

	Params::FortItemBaseWidget_SetItemQuantityPairToRepresent Parms{};

	Parms.InItemQuantityPair = std::move(InItemQuantityPair);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemBaseWidget.GetItemDefinition
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UFortItemBaseWidget::GetItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "GetItemDefinition");

	Params::FortItemBaseWidget_GetItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemBaseWidget.GetQuantity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItemBaseWidget::GetQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemBaseWidget", "GetQuantity");

	Params::FortItemBaseWidget_GetQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortErrorWindow.DismissErrors
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FFortErrorInfo>           ErrorInfos                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortErrorWindow::DismissErrors(const TArray<struct FFortErrorInfo>& ErrorInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortErrorWindow", "DismissErrors");

	Params::FortErrorWindow_DismissErrors Parms{};

	Parms.ErrorInfos = std::move(ErrorInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortErrorWindow.GetErrorEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonUserWidget*                ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCommonUserWidget* UFortErrorWindow::GetErrorEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortErrorWindow", "GetErrorEntry");

	Params::FortErrorWindow_GetErrorEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortErrorWindow.PutErrorEntries
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UCommonUserWidget*>        ErrorEntries                                           (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortErrorWindow::PutErrorEntries(TArray<class UCommonUserWidget*>& ErrorEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortErrorWindow", "PutErrorEntries");

	Params::FortErrorWindow_PutErrorEntries Parms{};

	Parms.ErrorEntries = std::move(ErrorEntries);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	ErrorEntries = std::move(Parms.ErrorEntries);
}


// Function FortniteUI.FortEventLeaderboardEntry.OnTeammateDisplayNameAdded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           TeammateDisplayName                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEventLeaderboardEntry::OnTeammateDisplayNameAdded(const class FString& TeammateDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardEntry", "OnTeammateDisplayNameAdded");

	Params::FortEventLeaderboardEntry_OnTeammateDisplayNameAdded Parms{};

	Parms.TeammateDisplayName = std::move(TeammateDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortEventLeaderboardScreen.HandleLeaderboardEntrySelectionChanged
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEventLeaderboardScreen::HandleLeaderboardEntrySelectionChanged(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardScreen", "HandleLeaderboardEntrySelectionChanged");

	Params::FortEventLeaderboardScreen_HandleLeaderboardEntrySelectionChanged Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortEventLeaderboardScreen.OnLeaderboardPageRequestComplete
// (Event, Protected, BlueprintEvent)

void UFortEventLeaderboardScreen::OnLeaderboardPageRequestComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardScreen", "OnLeaderboardPageRequestComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortEventLeaderboardScreen.OnLeaderboardPageRequested
// (Event, Protected, BlueprintEvent)

void UFortEventLeaderboardScreen::OnLeaderboardPageRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardScreen", "OnLeaderboardPageRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortEventLeaderboardScreen.OnLeaderboardRequestUserInfoComplete
// (Event, Protected, BlueprintEvent)

void UFortEventLeaderboardScreen::OnLeaderboardRequestUserInfoComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardScreen", "OnLeaderboardRequestUserInfoComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortEventLeaderboardScreen.RequestLeaderboardPage
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           EventWindowId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PageNumber                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEventLeaderboardScreen::RequestLeaderboardPage(const class FString& EventWindowId, int32 PageNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventLeaderboardScreen", "RequestLeaderboardPage");

	Params::FortEventLeaderboardScreen_RequestLeaderboardPage Parms{};

	Parms.EventWindowId = std::move(EventWindowId);
	Parms.PageNumber = PageNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSimpleItemConditionIconIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToRepresent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSimpleItemConditionIconIndicator::SetItemToRepresent(class UFortItem* ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSimpleItemConditionIconIndicator", "SetItemToRepresent");

	Params::FortSimpleItemConditionIconIndicator_SetItemToRepresent Parms{};

	Parms.ItemToRepresent = ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSimpleItemConditionIconIndicator.ShouldCollapseWhenConditionIsFalse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSimpleItemConditionIconIndicator::ShouldCollapseWhenConditionIsFalse(bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSimpleItemConditionIconIndicator", "ShouldCollapseWhenConditionIsFalse");

	Params::FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSimpleItemConditionIconIndicator.GetItemToRepresent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSimpleItemConditionIconIndicator::GetItemToRepresent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSimpleItemConditionIconIndicator", "GetItemToRepresent");

	Params::FortSimpleItemConditionIconIndicator_GetItemToRepresent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.ClearTemporaryExpeditionSquadState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreviewOnly                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::ClearTemporaryExpeditionSquadState(bool bPreviewOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "ClearTemporaryExpeditionSquadState");

	Params::FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState Parms{};

	Parms.bPreviewOnly = bPreviewOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.HandleDifferentSquadSlotSelected
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::HandleDifferentSquadSlotSelected(const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "HandleDifferentSquadSlotSelected");

	Params::FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.HandleStartExpeditionCompleted
// (Final, Native, Private)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::HandleStartExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "HandleStartExpeditionCompleted");

	Params::FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSucceeded = bSucceeded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.IsExpeditionValidToStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionBuildSquadWidget::IsExpeditionValidToStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "IsExpeditionValidToStart");

	Params::FortExpeditionBuildSquadWidget_IsExpeditionValidToStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.OnRefreshBuildSquadWidget
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionBuildSquadWidget::OnRefreshBuildSquadWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "OnRefreshBuildSquadWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.OnRequestClosePicker
// (Event, Public, BlueprintEvent)

void UFortExpeditionBuildSquadWidget::OnRequestClosePicker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "OnRequestClosePicker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.OnStartExpeditionCompleted
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortExpeditionBuildSquadWidget::OnStartExpeditionCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "OnStartExpeditionCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.SetCurrentSquadId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::SetCurrentSquadId(class FName SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "SetCurrentSquadId");

	Params::FortExpeditionBuildSquadWidget_SetCurrentSquadId Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionBuildSquadWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "SetData");

	Params::FortExpeditionBuildSquadWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.StartExpedition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionBuildSquadWidget::StartExpedition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "StartExpedition");

	Params::FortExpeditionBuildSquadWidget_StartExpedition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionBuildSquadWidget.IsSquadSlotLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionBuildSquadWidget::IsSquadSlotLocked(int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionBuildSquadWidget", "IsSquadSlotLocked");

	Params::FortExpeditionBuildSquadWidget_IsSquadSlotLocked Parms{};

	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionDetailsWidget.AbandonExpedition
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionDetailsWidget::AbandonExpedition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionDetailsWidget", "AbandonExpedition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionDetailsWidget.HandleAbandonExpeditionCompleted
// (Final, Native, Private)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::HandleAbandonExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionDetailsWidget", "HandleAbandonExpeditionCompleted");

	Params::FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionDetailsWidget.OnAbandonExpeditionCompleted
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortExpeditionDetailsWidget::OnAbandonExpeditionCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionDetailsWidget", "OnAbandonExpeditionCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionDetailsWidget.SetCurrentSquadId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::SetCurrentSquadId(class FName SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionDetailsWidget", "SetCurrentSquadId");

	Params::FortExpeditionDetailsWidget_SetCurrentSquadId Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionDetailsWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionDetailsWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionDetailsWidget", "SetData");

	Params::FortExpeditionDetailsWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionExpiresWidget.OnExpeditionExpirationUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionExpiresWidget::OnExpeditionExpirationUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionExpiresWidget", "OnExpeditionExpirationUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionExpiresWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionExpiresWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionExpiresWidget", "SetData");

	Params::FortExpeditionExpiresWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSwipePanel.SwipeDown
// (Final, Native, Private)

void UFortSwipePanel::SwipeDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwipePanel", "SwipeDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSwipePanel.SwipeLeft
// (Final, Native, Private)

void UFortSwipePanel::SwipeLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwipePanel", "SwipeLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSwipePanel.SwipeRight
// (Final, Native, Private)

void UFortSwipePanel::SwipeRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwipePanel", "SwipeRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSwipePanel.SwipeUp
// (Final, Native, Private)

void UFortSwipePanel::SwipeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwipePanel", "SwipeUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSwipePanel.GetSwipeInfo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        OutSwipePercentage                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSwipePanel::GetSwipeInfo(int32* OutIndex, struct FVector2D* OutSwipePercentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSwipePanel", "GetSwipeInfo");

	Params::FortSwipePanel_GetSwipeInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIndex != nullptr)
		*OutIndex = Parms.OutIndex;

	if (OutSwipePercentage != nullptr)
		*OutSwipePercentage = std::move(Parms.OutSwipePercentage);
}


// Function FortniteUI.FortExpeditionListItemWidget.OnItemChanged
// (Event, Protected, BlueprintEvent)

void UFortExpeditionListItemWidget::OnItemChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionListItemWidget", "OnItemChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHomeCMSScreenBase.OnTilesLoaded
// (Event, Protected, BlueprintEvent)

void UFortHomeCMSScreenBase::OnTilesLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeCMSScreenBase", "OnTilesLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHomeCMSScreenBase.AreTilesLoaded
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomeCMSScreenBase::AreTilesLoaded() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeCMSScreenBase", "AreTilesLoaded");

	Params::FortHomeCMSScreenBase_AreTilesLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionListViewWidget.SetExpeditionListSortType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortExpeditionListSort                 InSortType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionListViewWidget::SetExpeditionListSortType(EFortExpeditionListSort InSortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionListViewWidget", "SetExpeditionListSortType");

	Params::FortExpeditionListViewWidget_SetExpeditionListSortType Parms{};

	Parms.InSortType = InSortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionListViewWidget.GetExpeditionListSortName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortExpeditionListViewWidget::GetExpeditionListSortName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionListViewWidget", "GetExpeditionListSortName");

	Params::FortExpeditionListViewWidget_GetExpeditionListSortName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionOverviewWidget.HandleExpeditionTabButtonCreated
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButton*                    TabButton                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::HandleExpeditionTabButtonCreated(class FName TabNameID, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionOverviewWidget", "HandleExpeditionTabButtonCreated");

	Params::FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionOverviewWidget.HandleExpeditionTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::HandleExpeditionTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionOverviewWidget", "HandleExpeditionTabSelected");

	Params::FortExpeditionOverviewWidget_HandleExpeditionTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionOverviewWidget.OnExpeditionOverviewRefresh
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionOverviewWidget::OnExpeditionOverviewRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionOverviewWidget", "OnExpeditionOverviewRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionOverviewWidget.OnExpeditionTabSelected
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionOverviewWidget::OnExpeditionTabSelected(const class FName& TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionOverviewWidget", "OnExpeditionTabSelected");

	Params::FortExpeditionOverviewWidget_OnExpeditionTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionOverviewWidget.UpdateExpeditionTabs
// (Final, Native, Protected, BlueprintCallable)

void UFortExpeditionOverviewWidget::UpdateExpeditionTabs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionOverviewWidget", "UpdateExpeditionTabs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateTrigger.EvalBP
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateTrigger::EvalBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateTrigger", "EvalBP");

	Params::FortUIStateTrigger_EvalBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateTrigger.IsLoggedIn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIStateTrigger::IsLoggedIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateTrigger", "IsLoggedIn");

	Params::FortUIStateTrigger_IsLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionPickVehicleWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionPickVehicleWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionPickVehicleWidget", "SetData");

	Params::FortExpeditionPickVehicleWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionReturnsWidget.OnExpeditionInProgressUpdated
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionReturnsWidget::OnExpeditionInProgressUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionReturnsWidget", "OnExpeditionInProgressUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionReturnsWidget.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              InItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionReturnsWidget::SetData(class UFortExpeditionItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionReturnsWidget", "SetData");

	Params::FortExpeditionReturnsWidget_SetData Parms{};

	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionRewardsWidget.HandleCollectionExpeditionCompleted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bMcpSuccess                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpeditionSuccess                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortExpeditionRewardsWidget::HandleCollectionExpeditionCompleted(bool bMcpSuccess, const class UFortExpeditionItem* Expedition, bool bExpeditionSuccess, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionRewardsWidget", "HandleCollectionExpeditionCompleted");

	Params::FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted Parms{};

	Parms.bMcpSuccess = bMcpSuccess;
	Parms.Expedition = Expedition;
	Parms.bExpeditionSuccess = bExpeditionSuccess;
	Parms.Rewards = std::move(Rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionRewardsWidget.ProcessNextReward
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionRewardsWidget::ProcessNextReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionRewardsWidget", "ProcessNextReward");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionRewardsWidget.RefreshRewardsUI
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bExpeditionSucceeded                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortExpeditionRewardsWidget::RefreshRewardsUI(const class UFortExpeditionItem* Expedition, bool bExpeditionSucceeded, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionRewardsWidget", "RefreshRewardsUI");

	Params::FortExpeditionRewardsWidget_RefreshRewardsUI Parms{};

	Parms.Expedition = Expedition;
	Parms.bExpeditionSucceeded = bExpeditionSucceeded;
	Parms.Rewards = std::move(Rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionSummaryWidget.BindInventoryDelegates
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionSummaryWidget::BindInventoryDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionSummaryWidget", "BindInventoryDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionSummaryWidget.OnRefreshSummaryWidget
// (Native, Event, Protected, BlueprintEvent)

void UFortExpeditionSummaryWidget::OnRefreshSummaryWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionSummaryWidget", "OnRefreshSummaryWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionSummaryWidget.UnbindInventoryDelegates
// (Final, Native, Public, BlueprintCallable)

void UFortExpeditionSummaryWidget::UnbindInventoryDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionSummaryWidget", "UnbindInventoryDelegates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortExpeditionUtilities.AreAnyExpeditionsComplete
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::AreAnyExpeditionsComplete(const class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "AreAnyExpeditionsComplete");

	Params::FortExpeditionUtilities_AreAnyExpeditionsComplete Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.AreExpeditionsUnlocked
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::AreExpeditionsUnlocked(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "AreExpeditionsUnlocked");

	Params::FortExpeditionUtilities_AreExpeditionsUnlocked Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.CalculateExpeditionPercentageChanceForSuccess
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalPower                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::CalculateExpeditionPercentageChanceForSuccess(const class UFortExpeditionItem* Expedition, const float TotalPower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "CalculateExpeditionPercentageChanceForSuccess");

	Params::FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess Parms{};

	Parms.Expedition = Expedition;
	Parms.TotalPower = TotalPower;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.CalculateGlobalAndItemRatingModValuesBP
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   GlobalPowerMod                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           SlottedItemMods                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::CalculateGlobalAndItemRatingModValuesBP(const class UFortExpeditionItem* Expedition, const TArray<class UFortItem*>& SlottedItems, float* GlobalPowerMod, TArray<float>* SlottedItemMods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "CalculateGlobalAndItemRatingModValuesBP");

	Params::FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP Parms{};

	Parms.Expedition = Expedition;
	Parms.SlottedItems = std::move(SlottedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GlobalPowerMod != nullptr)
		*GlobalPowerMod = Parms.GlobalPowerMod;

	if (SlottedItemMods != nullptr)
		*SlottedItemMods = std::move(Parms.SlottedItemMods);
}


// Function FortniteUI.FortExpeditionUtilities.CalculateTotalPower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::CalculateTotalPower(class AFortPlayerController* FortPC, const class UFortExpeditionItem* Expedition, const class FName& SquadId, const TArray<class UFortItem*>& SlottedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "CalculateTotalPower");

	Params::FortExpeditionUtilities_CalculateTotalPower Parms{};

	Parms.FortPC = FortPC;
	Parms.Expedition = Expedition;
	Parms.SquadId = SquadId;
	Parms.SlottedItems = std::move(SlottedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.GetAllExpeditionSquadIds
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FName>                     OutExpeditionSquadIds                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetAllExpeditionSquadIds(TArray<class FName>* OutExpeditionSquadIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetAllExpeditionSquadIds");

	Params::FortExpeditionUtilities_GetAllExpeditionSquadIds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutExpeditionSquadIds != nullptr)
		*OutExpeditionSquadIds = std::move(Parms.OutExpeditionSquadIds);
}


// Function FortniteUI.FortExpeditionUtilities.GetExpeditionSquadPower
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionUtilities::GetExpeditionSquadPower(class AFortPlayerController* FortPC, const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetExpeditionSquadPower");

	Params::FortExpeditionUtilities_GetExpeditionSquadPower Parms{};

	Parms.FortPC = FortPC;
	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.GetExpeditionSquadsThatMatchRequirements
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            RequirementTags                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     OutExpeditionSquadIds                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::GetExpeditionSquadsThatMatchRequirements(const struct FGameplayTagContainer& RequirementTags, class AFortPlayerController* FortPC, TArray<class FName>* OutExpeditionSquadIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetExpeditionSquadsThatMatchRequirements");

	Params::FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements Parms{};

	Parms.RequirementTags = std::move(RequirementTags);
	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutExpeditionSquadIds != nullptr)
		*OutExpeditionSquadIds = std::move(Parms.OutExpeditionSquadIds);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.GetMatchedCriteriaTags
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTag>             OutMatchedCriteria                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetMatchedCriteriaTags(class UFortExpeditionItem* Expedition, const TArray<class UFortItem*>& SlottedItems, TArray<struct FGameplayTag>* OutMatchedCriteria)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetMatchedCriteriaTags");

	Params::FortExpeditionUtilities_GetMatchedCriteriaTags Parms{};

	Parms.Expedition = Expedition;
	Parms.SlottedItems = std::move(SlottedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMatchedCriteria != nullptr)
		*OutMatchedCriteria = std::move(Parms.OutMatchedCriteria);
}


// Function FortniteUI.FortExpeditionUtilities.GetTotalExpeditionVehiclesAvailable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutLandVehicles                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutLandVehiclesAvailable                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeaVehicles                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSeaVehiclesAvailable                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAirVehicles                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutAirVehiclesAvailable                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortExpeditionUtilities::GetTotalExpeditionVehiclesAvailable(const class UWidget* Widget, class AFortPlayerController* FortPC, int32* OutLandVehicles, int32* OutLandVehiclesAvailable, int32* OutSeaVehicles, int32* OutSeaVehiclesAvailable, int32* OutAirVehicles, int32* OutAirVehiclesAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetTotalExpeditionVehiclesAvailable");

	Params::FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable Parms{};

	Parms.Widget = Widget;
	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLandVehicles != nullptr)
		*OutLandVehicles = Parms.OutLandVehicles;

	if (OutLandVehiclesAvailable != nullptr)
		*OutLandVehiclesAvailable = Parms.OutLandVehiclesAvailable;

	if (OutSeaVehicles != nullptr)
		*OutSeaVehicles = Parms.OutSeaVehicles;

	if (OutSeaVehiclesAvailable != nullptr)
		*OutSeaVehiclesAvailable = Parms.OutSeaVehiclesAvailable;

	if (OutAirVehicles != nullptr)
		*OutAirVehicles = Parms.OutAirVehicles;

	if (OutAirVehiclesAvailable != nullptr)
		*OutAirVehiclesAvailable = Parms.OutAirVehiclesAvailable;
}


// Function FortniteUI.FortExpeditionUtilities.GetVehicleTagFromSquadId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     OutFoundVehicleTag                                     (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::GetVehicleTagFromSquadId(const class FName& SquadId, struct FGameplayTag* OutFoundVehicleTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetVehicleTagFromSquadId");

	Params::FortExpeditionUtilities_GetVehicleTagFromSquadId Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFoundVehicleTag != nullptr)
		*OutFoundVehicleTag = std::move(Parms.OutFoundVehicleTag);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.GetVehicleTagRequiredForExpedition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UFortExpeditionUtilities::GetVehicleTagRequiredForExpedition(const class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "GetVehicleTagRequiredForExpedition");

	Params::FortExpeditionUtilities_GetVehicleTagRequiredForExpedition Parms{};

	Parms.Expedition = Expedition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.IsSquadOnExpedition
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionUtilities::IsSquadOnExpedition(const class UWidget* Widget, const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "IsSquadOnExpedition");

	Params::FortExpeditionUtilities_IsSquadOnExpedition Parms{};

	Parms.Widget = Widget;
	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortExpeditionUtilities.TotalUnseenExpeditionsForTab
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TabNameID                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortExpeditionUtilities::TotalUnseenExpeditionsForTab(const class UWidget* Widget, const class FName& TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortExpeditionUtilities", "TotalUnseenExpeditionsForTab");

	Params::FortExpeditionUtilities_TotalUnseenExpeditionsForTab Parms{};

	Parms.Widget = Widget;
	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestScreen.ProcessPendingSeenQuestItems
// (Final, Native, Private, BlueprintCallable)

void UFortQuestScreen::ProcessPendingSeenQuestItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestScreen", "ProcessPendingSeenQuestItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFeatureUnlockWidget.RefreshDataBP
// (Event, Protected, BlueprintEvent)

void UFortFeatureUnlockWidget::RefreshDataBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "RefreshDataBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortFeatureUnlockWidget.SetData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           HomebaseNodeTemplateId                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFeatureUnlockWidget::SetData(const class FString& HomebaseNodeTemplateId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "SetData");

	Params::FortFeatureUnlockWidget_SetData Parms{};

	Parms.HomebaseNodeTemplateId = std::move(HomebaseNodeTemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFeatureUnlockWidget.UpdateAsset
// (Final, Native, Public, BlueprintCallable)

void UFortFeatureUnlockWidget::UpdateAsset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "UpdateAsset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFeatureUnlockWidget.GetDescription
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFeatureUnlockWidget::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "GetDescription");

	Params::FortFeatureUnlockWidget_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFeatureUnlockWidget.GetLargeIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortFeatureUnlockWidget::GetLargeIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "GetLargeIcon");

	Params::FortFeatureUnlockWidget_GetLargeIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFeatureUnlockWidget.GetSmallIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortFeatureUnlockWidget::GetSmallIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "GetSmallIcon");

	Params::FortFeatureUnlockWidget_GetSmallIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFeatureUnlockWidget.GetTitle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFeatureUnlockWidget::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "GetTitle");

	Params::FortFeatureUnlockWidget_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFeatureUnlockWidget.GetVideo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSource* UFortFeatureUnlockWidget::GetVideo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeatureUnlockWidget", "GetVideo");

	Params::FortFeatureUnlockWidget_GetVideo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMobileShareButton.OnOSImageEnumSet
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortFortMobileShareButtonOS            OSType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMobileShareButton::OnOSImageEnumSet(EFortFortMobileShareButtonOS OSType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileShareButton", "OnOSImageEnumSet");

	Params::FortMobileShareButton_OnOSImageEnumSet Parms{};

	Parms.OSType = OSType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMobileShareButton.SetShareParams
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Description                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMobileShareButton::SetShareParams(const class FString& URL, const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMobileShareButton", "SetShareParams");

	Params::FortMobileShareButton_SetShareParams Parms{};

	Parms.URL = std::move(URL);
	Parms.Description = std::move(Description);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFriendCodeListBase.CloseAndPopDialog
// (Final, Native, Public, BlueprintCallable)

void UFortFriendCodeListBase::CloseAndPopDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendCodeListBase", "CloseAndPopDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFriendCodeListBase.DescAndURL
// (Final, Native, Public, BlueprintCallable)

void UFortFriendCodeListBase::DescAndURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendCodeListBase", "DescAndURL");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFriendCodeListBase.JustDesc
// (Final, Native, Public, BlueprintCallable)

void UFortFriendCodeListBase::JustDesc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendCodeListBase", "JustDesc");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFriendLinkPanel.OnCopiedToClipboard
// (Event, Protected, BlueprintEvent)

void UFortFriendLinkPanel::OnCopiedToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendLinkPanel", "OnCopiedToClipboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortFriendLinkPanel.OnShareButtonTypeSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EShareButtonType                        Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFriendLinkPanel::OnShareButtonTypeSet(EShareButtonType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendLinkPanel", "OnShareButtonTypeSet");

	Params::FortFriendLinkPanel_OnShareButtonTypeSet Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortFrontEndContext.BindToFeatureStateAndInitialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontEndFeature                    Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EFortFrontEndFeature ChangedFeature, EFortFrontEndFeatureState NewState, EFortFrontEndFeatureStateReason Reason)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortFrontEndContext::BindToFeatureStateAndInitialize(EFortFrontEndFeature Feature, TDelegate<void(EFortFrontEndFeature ChangedFeature, EFortFrontEndFeatureState NewState, EFortFrontEndFeatureStateReason Reason)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "BindToFeatureStateAndInitialize");

	Params::FortFrontEndContext_BindToFeatureStateAndInitialize Parms{};

	Parms.Feature = Feature;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.BroadcastMainTabSelected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::BroadcastMainTabSelected(class FName TabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "BroadcastMainTabSelected");

	Params::FortFrontEndContext_BroadcastMainTabSelected Parms{};

	Parms.TabName = TabName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.CanFindTileForQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::CanFindTileForQuest(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "CanFindTileForQuest");

	Params::FortFrontEndContext_CanFindTileForQuest Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.ClearLocalPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    StopUsingLocalPreview                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ClearLocalPreview(bool StopUsingLocalPreview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ClearLocalPreview");

	Params::FortFrontEndContext_ClearLocalPreview Parms{};

	Parms.StopUsingLocalPreview = StopUsingLocalPreview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ClearSelectedTheater
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::ClearSelectedTheater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ClearSelectedTheater");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.DisplayAthenaCosmetic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticItemDefinition*    CosmeticItemDef                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VariantPreviewIdx                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::DisplayAthenaCosmetic(const class UAthenaCosmeticItemDefinition* CosmeticItemDef, int32 VariantPreviewIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "DisplayAthenaCosmetic");

	Params::FortFrontEndContext_DisplayAthenaCosmetic Parms{};

	Parms.CosmeticItemDef = CosmeticItemDef;
	Parms.VariantPreviewIdx = VariantPreviewIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ForceSetFeatureState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortFrontEndFeature                    Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFrontEndFeatureState               State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFrontEndFeatureStateReason         Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ForceSetFeatureState(EFortFrontEndFeature Feature, EFortFrontEndFeatureState State, EFortFrontEndFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ForceSetFeatureState");

	Params::FortFrontEndContext_ForceSetFeatureState Parms{};

	Parms.Feature = Feature;
	Parms.State = State;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.GetCurrentLockerSubslotIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetCurrentLockerSubslotIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetCurrentLockerSubslotIndex");

	Params::FortFrontEndContext_GetCurrentLockerSubslotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetHeroPlayerPawnByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartyMemberIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UFortFrontEndContext::GetHeroPlayerPawnByIndex(int32 PartyMemberIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetHeroPlayerPawnByIndex");

	Params::FortFrontEndContext_GetHeroPlayerPawnByIndex Parms{};

	Parms.PartyMemberIndex = PartyMemberIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetHeroPlayerPawnForCurrentDisplayedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UFortFrontEndContext::GetHeroPlayerPawnForCurrentDisplayedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetHeroPlayerPawnForCurrentDisplayedItem");

	Params::FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetMeshForCurrentDisplayedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMeshComponent* UFortFrontEndContext::GetMeshForCurrentDisplayedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetMeshForCurrentDisplayedItem");

	Params::FortFrontEndContext_GetMeshForCurrentDisplayedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetPrefabActorForCurrentDisplayedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UFortFrontEndContext::GetPrefabActorForCurrentDisplayedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetPrefabActorForCurrentDisplayedItem");

	Params::FortFrontEndContext_GetPrefabActorForCurrentDisplayedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetSeasonTabVariantPreviewInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUnlockableVariantPreviewInfo    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FUnlockableVariantPreviewInfo UFortFrontEndContext::GetSeasonTabVariantPreviewInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetSeasonTabVariantPreviewInfo");

	Params::FortFrontEndContext_GetSeasonTabVariantPreviewInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetSelectableGadgets
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortWorldItem*>           SelectableGadgets                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UFortWorldItem*>           LastSelectedGadgets                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortFrontEndContext::GetSelectableGadgets(TArray<class UFortWorldItem*>* SelectableGadgets, TArray<class UFortWorldItem*>* LastSelectedGadgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetSelectableGadgets");

	Params::FortFrontEndContext_GetSelectableGadgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SelectableGadgets != nullptr)
		*SelectableGadgets = std::move(Parms.SelectableGadgets);

	if (LastSelectedGadgets != nullptr)
		*LastSelectedGadgets = std::move(Parms.LastSelectedGadgets);
}


// Function FortniteUI.FortFrontEndContext.GetVariantDataForMemberIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   MemberIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDisplayManagerVariantData       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDisplayManagerVariantData UFortFrontEndContext::GetVariantDataForMemberIndex(int32 MemberIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetVariantDataForMemberIndex");

	Params::FortFrontEndContext_GetVariantDataForMemberIndex Parms{};

	Parms.MemberIndex = MemberIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.HandleDynamicSocialImportClosed
// (Final, Native, Private)

void UFortFrontEndContext::HandleDynamicSocialImportClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "HandleDynamicSocialImportClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.IsActiveTileMissionValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::IsActiveTileMissionValid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "IsActiveTileMissionValid");

	Params::FortFrontEndContext_IsActiveTileMissionValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.OnPlayerProfileInitialized
// (Final, Native, Private)

void UFortFrontEndContext::OnPlayerProfileInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "OnPlayerProfileInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.PlayEvolutionEffect
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::PlayEvolutionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "PlayEvolutionEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.PlayLevelUpEffect
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::PlayLevelUpEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "PlayLevelUpEffect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.PreviewCatalogOfferItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCatalogOffer                    CatalogOffer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortFrontEndContext::PreviewCatalogOfferItems(const struct FCatalogOffer& CatalogOffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "PreviewCatalogOfferItems");

	Params::FortFrontEndContext_PreviewCatalogOfferItems Parms{};

	Parms.CatalogOffer = std::move(CatalogOffer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.PushContentWidget_Adv
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::PushContentWidget_Adv(class UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "PushContentWidget_Adv");

	Params::FortFrontEndContext_PushContentWidget_Adv Parms{};

	Parms.Widget = Widget;
	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.RunBenchmarkAndApplyBestSettings
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::RunBenchmarkAndApplyBestSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "RunBenchmarkAndApplyBestSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SelectDefaultTheater
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::SelectDefaultTheater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SelectDefaultTheater");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SelectDefaultTheaterTile
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::SelectDefaultTheaterTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SelectDefaultTheaterTile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SelectGadgetForSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              GadgetDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SelectGadgetForSlot(int32 Slot, class UFortItemDefinition* GadgetDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SelectGadgetForSlot");

	Params::FortFrontEndContext_SelectGadgetForSlot Parms{};

	Parms.Slot = Slot;
	Parms.GadgetDefinition = GadgetDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SelectTileForQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCriticalMissionDifficultyOverrideMin                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutCriticalMissionDifficultyOverrideMax                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::SelectTileForQuest(class UFortQuestItem* QuestItem, float* OutCriticalMissionDifficultyOverrideMin, float* OutCriticalMissionDifficultyOverrideMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SelectTileForQuest");

	Params::FortFrontEndContext_SelectTileForQuest Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCriticalMissionDifficultyOverrideMin != nullptr)
		*OutCriticalMissionDifficultyOverrideMin = Parms.OutCriticalMissionDifficultyOverrideMin;

	if (OutCriticalMissionDifficultyOverrideMax != nullptr)
		*OutCriticalMissionDifficultyOverrideMax = Parms.OutCriticalMissionDifficultyOverrideMax;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.SendFrontendEnteredEvent
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::SendFrontendEnteredEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SendFrontendEnteredEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SendPlayQuestAnalytic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SendPlayQuestAnalytic(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SendPlayQuestAnalytic");

	Params::FortFrontEndContext_SendPlayQuestAnalytic Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetCurrentLockerSubslotIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetCurrentLockerSubslotIndex(int32 NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetCurrentLockerSubslotIndex");

	Params::FortFrontEndContext_SetCurrentLockerSubslotIndex Parms{};

	Parms.NewIndex = NewIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetDefaultLocalVariantPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticItemDefinition*    CosmeticItem                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetDefaultLocalVariantPreview(const class UAthenaCosmeticItemDefinition* CosmeticItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetDefaultLocalVariantPreview");

	Params::FortFrontEndContext_SetDefaultLocalVariantPreview Parms{};

	Parms.CosmeticItem = CosmeticItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetFrontEndCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFrontEndCamera                         NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetFrontEndCamera(EFrontEndCamera NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetFrontEndCamera");

	Params::FortFrontEndContext_SetFrontEndCamera Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetFrontEndVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHideHeader                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideFooter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideChatWidget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetFrontEndVisibility");

	Params::FortFrontEndContext_SetFrontEndVisibility Parms{};

	Parms.bHideHeader = bHideHeader;
	Parms.bHideFooter = bHideFooter;
	Parms.bHideChatWidget = bHideChatWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetHeroChoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   PartyMemberIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHero*                        Hero                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDisplayManagerVariantData       VariantData                                            (Parm, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetHeroChoice(int32 PartyMemberIndex, class UFortHero* Hero, const struct FDisplayManagerVariantData& VariantData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetHeroChoice");

	Params::FortFrontEndContext_SetHeroChoice Parms{};

	Parms.PartyMemberIndex = PartyMemberIndex;
	Parms.Hero = Hero;
	Parms.VariantData = std::move(VariantData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetLocalVariantPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticItemDefinition*    CosmeticItem                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     VariantChannelTag                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     VariantTag                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetLocalVariantPreview(const class UAthenaCosmeticItemDefinition* CosmeticItem, const struct FGameplayTag& VariantChannelTag, const struct FGameplayTag& VariantTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetLocalVariantPreview");

	Params::FortFrontEndContext_SetLocalVariantPreview Parms{};

	Parms.CosmeticItem = CosmeticItem;
	Parms.VariantChannelTag = std::move(VariantChannelTag);
	Parms.VariantTag = std::move(VariantTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetPersonalHeroChoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortHero*                        Hero                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDisplayManagerVariantData       VariantData                                            (Parm, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetPersonalHeroChoice(class UFortHero* Hero, const struct FDisplayManagerVariantData& VariantData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetPersonalHeroChoice");

	Params::FortFrontEndContext_SetPersonalHeroChoice Parms{};

	Parms.Hero = Hero;
	Parms.VariantData = std::move(VariantData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetSeasonTabVariantPreviewInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUnlockableVariantPreviewInfo    Info                                                   (Parm, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetSeasonTabVariantPreviewInfo(const struct FUnlockableVariantPreviewInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetSeasonTabVariantPreviewInfo");

	Params::FortFrontEndContext_SetSeasonTabVariantPreviewInfo Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetSeenLoginMessage
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::SetSeenLoginMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetSeenLoginMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.SetSelectedTheater
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::SetSelectedTheater(const class FString& TheaterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SetSelectedTheater");

	Params::FortFrontEndContext_SetSelectedTheater Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ShowSocialImport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortSocialImportPanel>PanelClass                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSocialImportPanel*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSocialImportPanel* UFortFrontEndContext::ShowSocialImport(TSubclassOf<class UFortSocialImportPanel> PanelClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ShowSocialImport");

	Params::FortFrontEndContext_ShowSocialImport Parms{};

	Parms.PanelClass = PanelClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.SkipInitialBenchmark
// (Final, Native, Public, BlueprintCallable)

void UFortFrontEndContext::SkipInitialBenchmark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "SkipInitialBenchmark");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ViewVaultItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreCurrentlyEquppedFavorites                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ViewVaultItem(class UFortItem* ItemToView, bool bIgnoreCurrentlyEquppedFavorites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ViewVaultItem");

	Params::FortFrontEndContext_ViewVaultItem Parms{};

	Parms.ItemToView = ItemToView;
	Parms.bIgnoreCurrentlyEquppedFavorites = bIgnoreCurrentlyEquppedFavorites;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ViewVaultItemFromDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemToViewDefinition                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreCurrentlyEquppedFavorites                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ViewVaultItemFromDefinition(const class UFortItemDefinition* ItemToViewDefinition, bool bIgnoreCurrentlyEquppedFavorites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ViewVaultItemFromDefinition");

	Params::FortFrontEndContext_ViewVaultItemFromDefinition Parms{};

	Parms.ItemToViewDefinition = ItemToViewDefinition;
	Parms.bIgnoreCurrentlyEquppedFavorites = bIgnoreCurrentlyEquppedFavorites;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ViewVaultItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortItem*>                ItemsToView                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIgnoreCurrentlyEquppedFavorites                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ViewVaultItems(const TArray<class UFortItem*>& ItemsToView, bool bIgnoreCurrentlyEquppedFavorites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ViewVaultItems");

	Params::FortFrontEndContext_ViewVaultItems Parms{};

	Parms.ItemsToView = std::move(ItemsToView);
	Parms.bIgnoreCurrentlyEquppedFavorites = bIgnoreCurrentlyEquppedFavorites;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.ViewVaultItemsFromOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCatalogOffer                    CatalogOffer                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIgnoreCurrentlyEquppedFavorites                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::ViewVaultItemsFromOffer(const struct FCatalogOffer& CatalogOffer, bool bIgnoreCurrentlyEquppedFavorites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ViewVaultItemsFromOffer");

	Params::FortFrontEndContext_ViewVaultItemsFromOffer Parms{};

	Parms.CatalogOffer = std::move(CatalogOffer);
	Parms.bIgnoreCurrentlyEquppedFavorites = bIgnoreCurrentlyEquppedFavorites;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.AreProfilesAvailableToWIFE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::AreProfilesAvailableToWIFE() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "AreProfilesAvailableToWIFE");

	Params::FortFrontEndContext_AreProfilesAvailableToWIFE Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.CanCompleteQuestInActiveTileMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::CanCompleteQuestInActiveTileMission(class UFortQuestItem* QuestItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "CanCompleteQuestInActiveTileMission");

	Params::FortFrontEndContext_CanCompleteQuestInActiveTileMission Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.CanCompleteQuestInFocusedOrActiveTileMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::CanCompleteQuestInFocusedOrActiveTileMission(class UFortQuestItem* QuestItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "CanCompleteQuestInFocusedOrActiveTileMission");

	Params::FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.CanShowLockerSlotType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAthenaCustomizationCategory            SlotType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::CanShowLockerSlotType(EAthenaCustomizationCategory SlotType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "CanShowLockerSlotType");

	Params::FortFrontEndContext_CanShowLockerSlotType Parms{};

	Parms.SlotType = SlotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAccountLevelUpRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    Rewards                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   AccountLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::GetAccountLevelUpRewards(TArray<struct FFortItemQuantityPair>* Rewards, int32 AccountLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAccountLevelUpRewards");

	Params::FortFrontEndContext_GetAccountLevelUpRewards Parms{};

	Parms.AccountLevel = AccountLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function FortniteUI.FortFrontEndContext.GetActiveTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTheaterMapTile*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTheaterMapTile* UFortFrontEndContext::GetActiveTile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetActiveTile");

	Params::FortFrontEndContext_GetActiveTile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetActiveTileMissionDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortMissionDetails              MissionDetails                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetActiveTileMissionDetails(struct FFortMissionDetails* MissionDetails) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetActiveTileMissionDetails");

	Params::FortFrontEndContext_GetActiveTileMissionDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MissionDetails != nullptr)
		*MissionDetails = std::move(Parms.MissionDetails);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAllTheaterData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortTheaterMapData>      OutAllTheaterData                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetAllTheaterData(TArray<struct FFortTheaterMapData>* OutAllTheaterData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAllTheaterData");

	Params::FortFrontEndContext_GetAllTheaterData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAllTheaterData != nullptr)
		*OutAllTheaterData = std::move(Parms.OutAllTheaterData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAttributeDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortAttributeInfo               InAttribute                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InRequiredTags                                         (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetAttributeDescription(const struct FFortAttributeInfo& InAttribute, const struct FGameplayTagContainer& InRequiredTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAttributeDescription");

	Params::FortFrontEndContext_GetAttributeDescription Parms{};

	Parms.InAttribute = std::move(InAttribute);
	Parms.InRequiredTags = std::move(InRequiredTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAttributeDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortAttributeInfo               InAttribute                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InRequiredTags                                         (Parm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetAttributeDisplayName(const struct FFortAttributeInfo& InAttribute, const struct FGameplayTagContainer& InRequiredTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAttributeDisplayName");

	Params::FortFrontEndContext_GetAttributeDisplayName Parms{};

	Parms.InAttribute = std::move(InAttribute);
	Parms.InRequiredTags = std::move(InRequiredTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAttributeIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortAttributeInfo               InAttribute                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InRequiredTags                                         (Parm, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMultiSizeBrush UFortFrontEndContext::GetAttributeIcon(const struct FFortAttributeInfo& InAttribute, const struct FGameplayTagContainer& InRequiredTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAttributeIcon");

	Params::FortFrontEndContext_GetAttributeIcon Parms{};

	Parms.InAttribute = std::move(InAttribute);
	Parms.InRequiredTags = std::move(InRequiredTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetAvailableDifficulties
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeMissionAlertTiles                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameDifficultyInfo>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameDifficultyInfo> UFortFrontEndContext::GetAvailableDifficulties(bool bIncludeMissionAlertTiles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetAvailableDifficulties");

	Params::FortFrontEndContext_GetAvailableDifficulties Parms{};

	Parms.bIncludeMissionAlertTiles = bIncludeMissionAlertTiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetCurrentTheaterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetCurrentTheaterName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetCurrentTheaterName");

	Params::FortFrontEndContext_GetCurrentTheaterName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetDefenderSquadIDByTheaterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortFrontEndContext::GetDefenderSquadIDByTheaterID(const class FString& TheaterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetDefenderSquadIDByTheaterID");

	Params::FortFrontEndContext_GetDefenderSquadIDByTheaterID Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetDesiredPlayButtonCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFrontEndCamera                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFrontEndCamera UFortFrontEndContext::GetDesiredPlayButtonCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetDesiredPlayButtonCamera");

	Params::FortFrontEndContext_GetDesiredPlayButtonCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFabricatorDisintegrationSecondsRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetFabricatorDisintegrationSecondsRemaining(int32 TheaterSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFabricatorDisintegrationSecondsRemaining");

	Params::FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining Parms{};

	Parms.TheaterSlot = TheaterSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFabricatorIncomingGooAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetFabricatorIncomingGooAmount(int32 TheaterSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFabricatorIncomingGooAmount");

	Params::FortFrontEndContext_GetFabricatorIncomingGooAmount Parms{};

	Parms.TheaterSlot = TheaterSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFabricatorStoredGooAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetFabricatorStoredGooAmount(int32 TheaterSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFabricatorStoredGooAmount");

	Params::FortFrontEndContext_GetFabricatorStoredGooAmount Parms{};

	Parms.TheaterSlot = TheaterSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFeatureState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortFrontEndFeature                    Feature                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFrontEndFeatureState               OutFeatureState                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFrontEndFeatureStateReason         OutReason                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::GetFeatureState(const EFortFrontEndFeature Feature, EFortFrontEndFeatureState* OutFeatureState, EFortFrontEndFeatureStateReason* OutReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFeatureState");

	Params::FortFrontEndContext_GetFeatureState Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFeatureState != nullptr)
		*OutFeatureState = Parms.OutFeatureState;

	if (OutReason != nullptr)
		*OutReason = Parms.OutReason;
}


// Function FortniteUI.FortFrontEndContext.GetFeatureStateReasonText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortFrontEndFeatureStateReason         Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetFeatureStateReasonText(const EFortFrontEndFeatureStateReason Reason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFeatureStateReasonText");

	Params::FortFrontEndContext_GetFeatureStateReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFocusedOrActiveTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTheaterMapTile*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTheaterMapTile* UFortFrontEndContext::GetFocusedOrActiveTile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFocusedOrActiveTile");

	Params::FortFrontEndContext_GetFocusedOrActiveTile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFocusedOrActiveTileMissionDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortMissionDetails              MissionDetails                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetFocusedOrActiveTileMissionDetails(struct FFortMissionDetails* MissionDetails) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFocusedOrActiveTileMissionDetails");

	Params::FortFrontEndContext_GetFocusedOrActiveTileMissionDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MissionDetails != nullptr)
		*MissionDetails = std::move(Parms.MissionDetails);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFocusedTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTheaterMapTile*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTheaterMapTile* UFortFrontEndContext::GetFocusedTile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFocusedTile");

	Params::FortFrontEndContext_GetFocusedTile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetFrontEndCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFrontEndCamera                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFrontEndCamera UFortFrontEndContext::GetFrontEndCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetFrontEndCamera");

	Params::FortFrontEndContext_GetFrontEndCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetHarvestingToolForLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InHarvestingOptimizerLevel                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortFrontEndContext::GetHarvestingToolForLevel(int32 TheaterSlot, int32 InHarvestingOptimizerLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetHarvestingToolForLevel");

	Params::FortFrontEndContext_GetHarvestingToolForLevel Parms{};

	Parms.TheaterSlot = TheaterSlot;
	Parms.InHarvestingOptimizerLevel = InHarvestingOptimizerLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetItemFromItemQuantityPair
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemQuantityPair            InPair                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UFortFrontEndContext::GetItemFromItemQuantityPair(const struct FFortItemQuantityPair& InPair) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetItemFromItemQuantityPair");

	Params::FortFrontEndContext_GetItemFromItemQuantityPair Parms{};

	Parms.InPair = std::move(InPair);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetLobbyBackgroundLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortFrontEndContext::GetLobbyBackgroundLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetLobbyBackgroundLevelName");

	Params::FortFrontEndContext_GetLobbyBackgroundLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetMaxAvailableDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIncludeMissionAlertTiles                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameDifficultyInfo              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameDifficultyInfo UFortFrontEndContext::GetMaxAvailableDifficulty(bool bIncludeMissionAlertTiles) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetMaxAvailableDifficulty");

	Params::FortFrontEndContext_GetMaxAvailableDifficulty Parms{};

	Parms.bIncludeMissionAlertTiles = bIncludeMissionAlertTiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetMCPRegion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetMCPRegion() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetMCPRegion");

	Params::FortFrontEndContext_GetMCPRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetMCPRegionText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetMCPRegionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetMCPRegionText");

	Params::FortFrontEndContext_GetMCPRegionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByItemDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostCoreItemDef                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCoreLevel                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetOutpostCoreLevelByItemDefinition(class UFortOutpostItemDefinition* OutpostCoreItemDef, int32* OutCoreLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetOutpostCoreLevelByItemDefinition");

	Params::FortFrontEndContext_GetOutpostCoreLevelByItemDefinition Parms{};

	Parms.OutpostCoreItemDef = OutpostCoreItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCoreLevel != nullptr)
		*OutCoreLevel = Parms.OutCoreLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByTheaterId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutCoreLevel                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetOutpostCoreLevelByTheaterId(const class FString& TheaterId, int32* OutCoreLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetOutpostCoreLevelByTheaterId");

	Params::FortFrontEndContext_GetOutpostCoreLevelByTheaterId Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCoreLevel != nullptr)
		*OutCoreLevel = Parms.OutCoreLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetOutpostStructureMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortOutpostItemDefinition*       OutpostStructure                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetOutpostStructureMaxLevel(int32 TheaterSlot, class UFortOutpostItemDefinition* OutpostStructure) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetOutpostStructureMaxLevel");

	Params::FortFrontEndContext_GetOutpostStructureMaxLevel Parms{};

	Parms.TheaterSlot = TheaterSlot;
	Parms.OutpostStructure = OutpostStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetOutpostStructureUpgradeCost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TheaterSlot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UpgradeLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortOutpostItemDefinition*       OutpostStructure                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutAccountItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortFrontEndContext::GetOutpostStructureUpgradeCost(int32 TheaterSlot, int32 UpgradeLevel, class UFortOutpostItemDefinition* OutpostStructure, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetOutpostStructureUpgradeCost");

	Params::FortFrontEndContext_GetOutpostStructureUpgradeCost Parms{};

	Parms.TheaterSlot = TheaterSlot;
	Parms.UpgradeLevel = UpgradeLevel;
	Parms.OutpostStructure = OutpostStructure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);

	if (OutAccountItems != nullptr)
		*OutAccountItems = std::move(Parms.OutAccountItems);
}


// Function FortniteUI.FortFrontEndContext.GetPostMaxAccountLevelUpRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    Rewards                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   RewardOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::GetPostMaxAccountLevelUpRewards(TArray<struct FFortItemQuantityPair>* Rewards, int32 RewardOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetPostMaxAccountLevelUpRewards");

	Params::FortFrontEndContext_GetPostMaxAccountLevelUpRewards Parms{};

	Parms.RewardOffset = RewardOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function FortniteUI.FortFrontEndContext.GetRequirementText
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortRequirementsInfo            InRequirements                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetRequirementText(const struct FFortRequirementsInfo& InRequirements) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetRequirementText");

	Params::FortFrontEndContext_GetRequirementText Parms{};

	Parms.InRequirements = std::move(InRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetReturnToFrontendBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortReturnToFrontendBehavior           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortReturnToFrontendBehavior UFortFrontEndContext::GetReturnToFrontendBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetReturnToFrontendBehavior");

	Params::FortFrontEndContext_GetReturnToFrontendBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortTheaterMapData              OutTheaterData                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetSelectedTheaterData(struct FFortTheaterMapData* OutTheaterData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetSelectedTheaterData");

	Params::FortFrontEndContext_GetSelectedTheaterData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTheaterData != nullptr)
		*OutTheaterData = std::move(Parms.OutTheaterData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortFrontEndContext::GetSelectedTheaterId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetSelectedTheaterId");

	Params::FortFrontEndContext_GetSelectedTheaterId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetTheaterData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTheaterMapData              OutTheaterData                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetTheaterData(const class FString& TheaterId, struct FFortTheaterMapData* OutTheaterData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetTheaterData");

	Params::FortFrontEndContext_GetTheaterData Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTheaterData != nullptr)
		*OutTheaterData = std::move(Parms.OutTheaterData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetTheaterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontEndContext::GetTheaterName(const class FString& TheaterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetTheaterName");

	Params::FortFrontEndContext_GetTheaterName Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetTheaterRegionCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFrontEndContext::GetTheaterRegionCount(const class FString& TheaterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetTheaterRegionCount");

	Params::FortFrontEndContext_GetTheaterRegionCount Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetTheaterType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTheaterType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTheaterType UFortFrontEndContext::GetTheaterType(const class FString& TheaterId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetTheaterType");

	Params::FortFrontEndContext_GetTheaterType Parms{};

	Parms.TheaterId = std::move(TheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetTileMissionDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTheaterMapTile*              Tile                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMissionDetails              MissionDetails                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::GetTileMissionDetails(const class AFortTheaterMapTile* Tile, struct FFortMissionDetails* MissionDetails) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetTileMissionDetails");

	Params::FortFrontEndContext_GetTileMissionDetails Parms{};

	Parms.Tile = Tile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MissionDetails != nullptr)
		*MissionDetails = std::move(Parms.MissionDetails);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetUITestingClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UFortFrontEndContext::GetUITestingClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetUITestingClass");

	Params::FortFrontEndContext_GetUITestingClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.GetUnlockedGadgetDefinitions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortGadgetItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortGadgetItemDefinition*> UFortFrontEndContext::GetUnlockedGadgetDefinitions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "GetUnlockedGadgetDefinitions");

	Params::FortFrontEndContext_GetUnlockedGadgetDefinitions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.HideAthenaStoreNewItemBang
// (Final, Native, Public, BlueprintCallable, Const)

void UFortFrontEndContext::HideAthenaStoreNewItemBang() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "HideAthenaStoreNewItemBang");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.Is4PlayerTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTheaterMapTile*              Tile                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::Is4PlayerTile(const class AFortTheaterMapTile* Tile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "Is4PlayerTile");

	Params::FortFrontEndContext_Is4PlayerTile Parms{};

	Parms.Tile = Tile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.ShouldRunInitialBenchmark
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::ShouldRunInitialBenchmark() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ShouldRunInitialBenchmark");

	Params::FortFrontEndContext_ShouldRunInitialBenchmark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.ShouldShowLoginMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::ShouldShowLoginMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ShouldShowLoginMessage");

	Params::FortFrontEndContext_ShouldShowLoginMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.ShouldShowSocialImport
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::ShouldShowSocialImport() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ShouldShowSocialImport");

	Params::FortFrontEndContext_ShouldShowSocialImport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.ShowAthenaStoreNewItemBang
// (Final, Native, Public, BlueprintCallable, Const)

void UFortFrontEndContext::ShowAthenaStoreNewItemBang() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "ShowAthenaStoreNewItemBang");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontEndContext.TryGetAttributeInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               GameplayAttribute                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAttributeInfo               OutAttribute                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortFrontEndContext::TryGetAttributeInfo(const struct FGameplayAttribute& GameplayAttribute, struct FFortAttributeInfo* OutAttribute) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "TryGetAttributeInfo");

	Params::FortFrontEndContext_TryGetAttributeInfo Parms{};

	Parms.GameplayAttribute = std::move(GameplayAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttribute != nullptr)
		*OutAttribute = std::move(Parms.OutAttribute);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontEndContext.UpdateNewAccountItemBangCounts
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortInventoryContext*            InventoryContext                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFrontEndContext::UpdateNewAccountItemBangCounts(class UFortInventoryContext* InventoryContext) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndContext", "UpdateNewAccountItemBangCounts");

	Params::FortFrontEndContext_UpdateNewAccountItemBangCounts Parms{};

	Parms.InventoryContext = InventoryContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTravelLogMap.InitializeFromTravelRecord
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAthenaTravelRecord              Record                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTravelLogMap::InitializeFromTravelRecord(const struct FAthenaTravelRecord& Record)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTravelLogMap", "InitializeFromTravelRecord");

	Params::FortTravelLogMap_InitializeFromTravelRecord Parms{};

	Parms.Record = std::move(Record);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontendLevelScriptActor.GetFrontendLevelScript
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortFrontendLevelScriptActor*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortFrontendLevelScriptActor* AFortFrontendLevelScriptActor::GetFrontendLevelScript(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFrontendLevelScriptActor", "GetFrontendLevelScript");

	Params::FortFrontendLevelScriptActor_GetFrontendLevelScript Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontendLevelScriptActor.GetCommanderPreviewPedestalActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class AFortItemPreviewPedestal>ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class AFortItemPreviewPedestal> AFortFrontendLevelScriptActor::GetCommanderPreviewPedestalActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontendLevelScriptActor", "GetCommanderPreviewPedestalActor");

	Params::FortFrontendLevelScriptActor_GetCommanderPreviewPedestalActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFrontendLevelScriptActor.GetHeroLoadoutPreviewPedestalActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class AFortItemPreviewPedestal>ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class AFortItemPreviewPedestal> AFortFrontendLevelScriptActor::GetHeroLoadoutPreviewPedestalActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontendLevelScriptActor", "GetHeroLoadoutPreviewPedestalActor");

	Params::FortFrontendLevelScriptActor_GetHeroLoadoutPreviewPedestalActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.GetDisplayTextForPlayerReportingCategoryBP
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   CategoryIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGameFeedbackBase::GetDisplayTextForPlayerReportingCategoryBP(int32 CategoryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGameFeedbackBase", "GetDisplayTextForPlayerReportingCategoryBP");

	Params::FortGameFeedbackBase_GetDisplayTextForPlayerReportingCategoryBP Parms{};

	Parms.CategoryIndex = CategoryIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.GetPlayerReportingCategoryLabels
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortGameFeedbackBase::GetPlayerReportingCategoryLabels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGameFeedbackBase", "GetPlayerReportingCategoryLabels");

	Params::FortGameFeedbackBase_GetPlayerReportingCategoryLabels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.AddButtonWithFeedbackType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UCommonButton*                    Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIGameFeedbackType                 UIFeedbackType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::AddButtonWithFeedbackType(class UCommonButton* Button, EFortUIGameFeedbackType UIFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "AddButtonWithFeedbackType");

	Params::FortGameFeedbackBase_AddButtonWithFeedbackType Parms{};

	Parms.Button = Button;
	Parms.UIFeedbackType = UIFeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.CancelFeedback
// (Final, Native, Protected, BlueprintCallable)

void UFortGameFeedbackBase::CancelFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "CancelFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.GetButtonVisibilityByUIFeedbackType
// (Final, Native, Protected)
// Parameters:
// EFortUIGameFeedbackType                 UIFeedbackType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESlateVisibility UFortGameFeedbackBase::GetButtonVisibilityByUIFeedbackType(EFortUIGameFeedbackType UIFeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "GetButtonVisibilityByUIFeedbackType");

	Params::FortGameFeedbackBase_GetButtonVisibilityByUIFeedbackType Parms{};

	Parms.UIFeedbackType = UIFeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.InitiateDebugInfoForFeedback
// (Final, Native, Public, BlueprintCallable)

void UFortGameFeedbackBase::InitiateDebugInfoForFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "InitiateDebugInfoForFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.OnFeedbackTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortUIGameFeedbackType                 FeedBackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnFeedbackTypeChanged(EFortUIGameFeedbackType FeedBackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnFeedbackTypeChanged");

	Params::FortGameFeedbackBase_OnFeedbackTypeChanged Parms{};

	Parms.FeedBackType = FeedBackType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGameFeedbackBase.OnFeedbackTypeSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnFeedbackTypeSelected(class UCommonButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnFeedbackTypeSelected");

	Params::FortGameFeedbackBase_OnFeedbackTypeSelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.OnInitiateDebugInfoForFeedbackComplete
// (Event, Protected, BlueprintEvent)

void UFortGameFeedbackBase::OnInitiateDebugInfoForFeedbackComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnInitiateDebugInfoForFeedbackComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGameFeedbackBase.OnPlayerNameSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnPlayerNameSelected(class UCommonButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnPlayerNameSelected");

	Params::FortGameFeedbackBase_OnPlayerNameSelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.OnPlayerNameSelectedEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Param_Name                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnPlayerNameSelectedEvent(const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnPlayerNameSelectedEvent");

	Params::FortGameFeedbackBase_OnPlayerNameSelectedEvent Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGameFeedbackBase.OnPlayerReportingCategorySelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnPlayerReportingCategorySelected(class UCommonButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnPlayerReportingCategorySelected");

	Params::FortGameFeedbackBase_OnPlayerReportingCategorySelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.OnReportingCategoryChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CategoryIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameFeedbackBase::OnReportingCategoryChanged(int32 CategoryIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "OnReportingCategoryChanged");

	Params::FortGameFeedbackBase_OnReportingCategoryChanged Parms{};

	Parms.CategoryIndex = CategoryIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGameFeedbackBase.SelectKiller
// (Final, Native, Protected, BlueprintCallable)

void UFortGameFeedbackBase::SelectKiller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "SelectKiller");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.SelectSpectateTarget
// (Final, Native, Protected, BlueprintCallable)

void UFortGameFeedbackBase::SelectSpectateTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "SelectSpectateTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.SubmitFeedback
// (Final, Native, Protected, BlueprintCallable)

void UFortGameFeedbackBase::SubmitFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "SubmitFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameFeedbackBase.GetPlayerNameInfoContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPlayerNameInfoContainer   ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FPlayerNameInfoContainer UFortGameFeedbackBase::GetPlayerNameInfoContainer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "GetPlayerNameInfoContainer");

	Params::FortGameFeedbackBase_GetPlayerNameInfoContainer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.HasKiller
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameFeedbackBase::HasKiller() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "HasKiller");

	Params::FortGameFeedbackBase_HasKiller Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.HasSelectedCategory
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameFeedbackBase::HasSelectedCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "HasSelectedCategory");

	Params::FortGameFeedbackBase_HasSelectedCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.HasSelectedPlayer
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameFeedbackBase::HasSelectedPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "HasSelectedPlayer");

	Params::FortGameFeedbackBase_HasSelectedPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameFeedbackBase.HasSpectateTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameFeedbackBase::HasSpectateTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameFeedbackBase", "HasSpectateTarget");

	Params::FortGameFeedbackBase_HasSpectateTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameOptions.ConstructHUDTagList
// (Final, Native, Private, BlueprintCallable)

void UFortGameOptions::ConstructHUDTagList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "ConstructHUDTagList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameOptions.HandleGamePadToggleMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortGameOptions::HandleGamePadToggleMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "HandleGamePadToggleMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGameOptions.SetControllerPlatform
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FString                           InControllerPlatform                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameOptions::SetControllerPlatform(const class FString& InControllerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "SetControllerPlatform");

	Params::FortGameOptions_SetControllerPlatform Parms{};

	Parms.InControllerPlatform = std::move(InControllerPlatform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGameOptions.UpdatePossibleLanguages
// (Event, Public, BlueprintEvent)

void UFortGameOptions::UpdatePossibleLanguages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "UpdatePossibleLanguages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGameOptions.GetControllerPlatform
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGameOptions::GetControllerPlatform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "GetControllerPlatform");

	Params::FortGameOptions_GetControllerPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameOptions.GetHUDSettings
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     HUDMapping                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameOptions::GetHUDSettings(const struct FGameplayTag& HUDMapping) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "GetHUDSettings");

	Params::FortGameOptions_GetHUDSettings Parms{};

	Parms.HUDMapping = std::move(HUDMapping);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGameOptions.UpdateHUDSettings
// (Final, Native, Private, BlueprintCallable, Const)
// Parameters:
// struct FGameplayTag                     HUDMapping                                             (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewVisibility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameOptions::UpdateHUDSettings(const struct FGameplayTag& HUDMapping, bool NewVisibility) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameOptions", "UpdateHUDSettings");

	Params::FortGameOptions_UpdateHUDSettings Parms{};

	Parms.HUDMapping = std::move(HUDMapping);
	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementModeDetailsPanel.HandleDifferentItemManagementModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemManagementModeDetailsPanel::HandleDifferentItemManagementModeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementModeDetailsPanel", "HandleDifferentItemManagementModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementModeDetailsPanel.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementModeDetailsPanel::HandleHostSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementModeDetailsPanel", "HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementModeDetailsPanel.GetItemManagementMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemManagementMode                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemManagementMode UFortItemManagementModeDetailsPanel::GetItemManagementMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementModeDetailsPanel", "GetItemManagementMode");

	Params::FortItemManagementModeDetailsPanel_GetItemManagementMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInputOptions.ChangeBinding
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bIsPrimarySlot                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             NewKey                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInputOptions::ChangeBinding(bool bIsPrimarySlot, int32 Input, const struct FKey& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "ChangeBinding");

	Params::FortInputOptions_ChangeBinding Parms{};

	Parms.bIsPrimarySlot = bIsPrimarySlot;
	Parms.Input = Input;
	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInputOptions.ConstructKeyBindList
// (Native, Protected, BlueprintCallable)

void UFortInputOptions::ConstructKeyBindList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "ConstructKeyBindList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInputOptions.GetListWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortInputOptions::GetListWidget(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "GetListWidget");

	Params::FortInputOptions_GetListWidget Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInputOptions.HandleUsingGamepadChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        NewInputType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInputOptions::HandleUsingGamepadChanged(ECommonInputType NewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "HandleUsingGamepadChanged");

	Params::FortInputOptions_HandleUsingGamepadChanged Parms{};

	Parms.NewInputType = NewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortInputOptions.GetActionBeingUnbound
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bIsPrimarySlot                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Input                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             NewKey                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortActionBeingUnbound          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortActionBeingUnbound UFortInputOptions::GetActionBeingUnbound(bool bIsPrimarySlot, int32 Input, const struct FKey& NewKey) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "GetActionBeingUnbound");

	Params::FortInputOptions_GetActionBeingUnbound Parms{};

	Parms.bIsPrimarySlot = bIsPrimarySlot;
	Parms.Input = Input;
	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInputOptions.GetActionItemsInGroup
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInputActionGroup                   InputActionGroup                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortOptionsMenuInputData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortOptionsMenuInputData*> UFortInputOptions::GetActionItemsInGroup(const EFortInputActionGroup InputActionGroup) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "GetActionItemsInGroup");

	Params::FortInputOptions_GetActionItemsInGroup Parms{};

	Parms.InputActionGroup = InputActionGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInputOptions.GetBindedKeyNameBP
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   KeyBind                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPrimary                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInputOptions::GetBindedKeyNameBP(int32 KeyBind, bool IsPrimary) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "GetBindedKeyNameBP");

	Params::FortInputOptions_GetBindedKeyNameBP Parms{};

	Parms.KeyBind = KeyBind;
	Parms.IsPrimary = IsPrimary;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortInputOptions.GetInputDataIndexForActionName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ActionName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortInputOptions::GetInputDataIndexForActionName(const class FName ActionName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInputOptions", "GetInputDataIndexForActionName");

	Params::FortInputOptions_GetInputDataIndexForActionName Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGamepadInputOptions.AreAllImportantActionsBound
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FText>                     OutUnboundScreenLabels                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bRichText                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGamepadInputOptions::AreAllImportantActionsBound(TArray<class FText>* OutUnboundScreenLabels, const bool bRichText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "AreAllImportantActionsBound");

	Params::FortGamepadInputOptions_AreAllImportantActionsBound Parms{};

	Parms.bRichText = bRichText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUnboundScreenLabels != nullptr)
		*OutUnboundScreenLabels = std::move(Parms.OutUnboundScreenLabels);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGamepadInputOptions.DisableAnalogCursor
// (Final, Native, Public, BlueprintCallable)

void UFortGamepadInputOptions::DisableAnalogCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "DisableAnalogCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGamepadInputOptions.EnableAnalogCursor
// (Final, Native, Public, BlueprintCallable)

void UFortGamepadInputOptions::EnableAnalogCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "EnableAnalogCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGamepadInputOptions.HandleGamePadToggleMode
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortGamepadInputOptions::HandleGamePadToggleMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "HandleGamePadToggleMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGamepadInputOptions.ResetCustomGamepadToDefault
// (Final, Native, Public, BlueprintCallable)

void UFortGamepadInputOptions::ResetCustomGamepadToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "ResetCustomGamepadToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGamepadInputOptions.SetControllerPlatform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InControllerPlatform                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGamepadInputOptions::SetControllerPlatform(const class FString& InControllerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "SetControllerPlatform");

	Params::FortGamepadInputOptions_SetControllerPlatform Parms{};

	Parms.InControllerPlatform = std::move(InControllerPlatform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGamepadInputOptions.GetControllerPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGamepadInputOptions::GetControllerPlatform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "GetControllerPlatform");

	Params::FortGamepadInputOptions_GetControllerPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGamepadInputOptions.HasCustomGamepadBindingChanges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGamepadInputOptions::HasCustomGamepadBindingChanges() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "HasCustomGamepadBindingChanges");

	Params::FortGamepadInputOptions_HasCustomGamepadBindingChanges Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGamepadInputOptions.IsCustomGamepadConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ConfigName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGamepadInputOptions::IsCustomGamepadConfig(const class FString& ConfigName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGamepadInputOptions", "IsCustomGamepadConfig");

	Params::FortGamepadInputOptions_IsCustomGamepadConfig Parms{};

	Parms.ConfigName = std::move(ConfigName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGiftBoxButton.PlayGiftSelectedAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftBoxButton::PlayGiftSelectedAnimation(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftBoxButton", "PlayGiftSelectedAnimation");

	Params::FortGiftBoxButton_PlayGiftSelectedAnimation Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUINotificationQueue.GetNextNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUINotification*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUINotification* UFortUINotificationQueue::GetNextNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "GetNextNotification");

	Params::FortUINotificationQueue_GetNextNotification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUINotificationQueue.QueueNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUINotification*              Notification                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowImmediately                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINotificationQueue::QueueNotification(class UFortUINotification* Notification, bool bShowImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "QueueNotification");

	Params::FortUINotificationQueue_QueueNotification Parms{};

	Parms.Notification = Notification;
	Parms.bShowImmediately = bShowImmediately;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINotificationQueue.RegisterToReceiveNotifications
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       NotificationDelegate                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortUINotificationQueue::RegisterToReceiveNotifications(const TDelegate<void()>& NotificationDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "RegisterToReceiveNotifications");

	Params::FortUINotificationQueue_RegisterToReceiveNotifications Parms{};

	Parms.NotificationDelegate = NotificationDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINotificationQueue.RemoveNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUINotification*              InNotificationDescription                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUINotificationQueue::RemoveNotification(const class UFortUINotification* InNotificationDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "RemoveNotification");

	Params::FortUINotificationQueue_RemoveNotification Parms{};

	Parms.InNotificationDescription = InNotificationDescription;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINotificationQueue.UnregisterToReceiveNotifications
// (Final, Native, Public, BlueprintCallable)

void UFortUINotificationQueue::UnregisterToReceiveNotifications()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "UnregisterToReceiveNotifications");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUINotificationQueue.CanNotificationBeQueued
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortNotificationPriority               Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINotificationQueue::CanNotificationBeQueued(EFortNotificationPriority Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotificationQueue", "CanNotificationBeQueued");

	Params::FortUINotificationQueue_CanNotificationBeQueued Parms{};

	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGiftingScreen.AllowGiftWrapSelection
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsAllowed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingScreen::AllowGiftWrapSelection(bool bIsAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "AllowGiftWrapSelection");

	Params::FortGiftingScreen_AllowGiftWrapSelection Parms{};

	Parms.bIsAllowed = bIsAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGiftingScreen.DynamicHandleGiftSent
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   IneligibleAccounts                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ErrorCodes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGiftingScreen::DynamicHandleGiftSent(bool bSuccess, const TArray<class FString>& IneligibleAccounts, const TArray<class FString>& ErrorCodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "DynamicHandleGiftSent");

	Params::FortGiftingScreen_DynamicHandleGiftSent Parms{};

	Parms.bSuccess = bSuccess;
	Parms.IneligibleAccounts = std::move(IneligibleAccounts);
	Parms.ErrorCodes = std::move(ErrorCodes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingScreen.FocusEditableTextMessage
// (Final, Native, Protected, BlueprintCallable)

void UFortGiftingScreen::FocusEditableTextMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "FocusEditableTextMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingScreen.FocusFriendsList
// (Final, Native, Protected, BlueprintCallable)

void UFortGiftingScreen::FocusFriendsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "FocusFriendsList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingScreen.HandleMessageChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGiftingScreen::HandleMessageChanged(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "HandleMessageChanged");

	Params::FortGiftingScreen_HandleMessageChanged Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingScreen.OnBeginGiftingSubmission
// (Event, Protected, BlueprintEvent)

void UFortGiftingScreen::OnBeginGiftingSubmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnBeginGiftingSubmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGiftingScreen.OnEndGiftingSubmission
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingScreen::OnEndGiftingSubmission(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnEndGiftingSubmission");

	Params::FortGiftingScreen_OnEndGiftingSubmission Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGiftingScreen.OnGiftingTimerEnded
// (Final, Native, Protected, BlueprintCallable)

void UFortGiftingScreen::OnGiftingTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnGiftingTimerEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingScreen.OnMoveToFriendSelectStep
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortGiftingScreen::OnMoveToFriendSelectStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnMoveToFriendSelectStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGiftingScreen.OnMoveToGiftWrapStep
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bGiftingToSelf                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingScreen::OnMoveToGiftWrapStep(bool bGiftingToSelf)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnMoveToGiftWrapStep");

	Params::FortGiftingScreen_OnMoveToGiftWrapStep Parms{};

	Parms.bGiftingToSelf = bGiftingToSelf;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGiftingScreen.OnOfferSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortStoreFrontOfferInfo*         NewOfferInfo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingScreen::OnOfferSet(class UFortStoreFrontOfferInfo* NewOfferInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "OnOfferSet");

	Params::FortGiftingScreen_OnOfferSet Parms{};

	Parms.NewOfferInfo = NewOfferInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGiftingScreen.SetOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortStoreFrontOfferInfo*         NewOfferInfo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingScreen::SetOffer(class UFortStoreFrontOfferInfo* NewOfferInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingScreen", "SetOffer");

	Params::FortGiftingScreen_SetOffer Parms{};

	Parms.NewOfferInfo = NewOfferInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGiftingUserItem.SetSelectionState
// (Event, Public, BlueprintEvent)
// Parameters:
// ESelectionState                         NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAnimateOnSelect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGiftingUserItem::SetSelectionState(ESelectionState NewState, bool bAnimateOnSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingUserItem", "SetSelectionState");

	Params::FortGiftingUserItem_SetSelectionState Parms{};

	Parms.NewState = NewState;
	Parms.bAnimateOnSelect = bAnimateOnSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGiftingUserItem.UpdateMessageText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             NewMessage                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGiftingUserItem::UpdateMessageText(const class FText& NewMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGiftingUserItem", "UpdateMessageText");

	Params::FortGiftingUserItem_UpdateMessageText Parms{};

	Parms.NewMessage = std::move(NewMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapViewer.DisposeQuestMap
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer::DisposeQuestMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "DisposeQuestMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.HandleLayoutOutroAnimationFinished
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer::HandleLayoutOutroAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "HandleLayoutOutroAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.HandleQuestIndexSelectionModelIndexChanged
// (Final, Native, Private)

void UFortQuestMapViewer::HandleQuestIndexSelectionModelIndexChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "HandleQuestIndexSelectionModelIndexChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.HandleQuestMapDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapViewer::HandleQuestMapDataChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "HandleQuestMapDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestMapViewer.NavigateToCurrentQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestMapViewer::NavigateToCurrentQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "NavigateToCurrentQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.NavigateToPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EViewerNavigationDirection              Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapViewer::NavigateToPage(EViewerNavigationDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "NavigateToPage");

	Params::FortQuestMapViewer_NavigateToPage Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.PlayLayoutFadeInAnimation
// (Event, Public, BlueprintEvent)

void UFortQuestMapViewer::PlayLayoutFadeInAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "PlayLayoutFadeInAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestMapViewer.PlayLayoutOutroAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// EViewerNavigationDirection              TravelDirection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapViewer::PlayLayoutOutroAnimation(EViewerNavigationDirection TravelDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "PlayLayoutOutroAnimation");

	Params::FortQuestMapViewer_PlayLayoutOutroAnimation Parms{};

	Parms.TravelDirection = TravelDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapViewer.SetQuestMapNodeLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestMapNodeLayout*          Value                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapViewer::SetQuestMapNodeLayout(class UFortQuestMapNodeLayout* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "SetQuestMapNodeLayout");

	Params::FortQuestMapViewer_SetQuestMapNodeLayout Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestMapViewer.GetQuestMapCosmeticData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortQuestMapPageCosmetics       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortQuestMapPageCosmetics UFortQuestMapViewer::GetQuestMapCosmeticData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "GetQuestMapCosmeticData");

	Params::FortQuestMapViewer_GetQuestMapCosmeticData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapViewer.GetQuestMapData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortQuestMapPage                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortQuestMapPage UFortQuestMapViewer::GetQuestMapData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapViewer", "GetQuestMapData");

	Params::FortQuestMapViewer_GetQuestMapData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalActionDetailsDataSource.AddOnChangeDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UObject* Source)>  InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortGlobalActionDetailsDataSource::AddOnChangeDelegate(const TDelegate<void(class UObject* Source)>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalActionDetailsDataSource", "AddOnChangeDelegate");

	Params::FortGlobalActionDetailsDataSource_AddOnChangeDelegate Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalActionDetailsDataSource.RemoveOnChangeDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UObject* Source)>  InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortGlobalActionDetailsDataSource::RemoveOnChangeDelegate(const TDelegate<void(class UObject* Source)>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalActionDetailsDataSource", "RemoveOnChangeDelegate");

	Params::FortGlobalActionDetailsDataSource_RemoveOnChangeDelegate Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalActionDetailsDataSource.GetValue
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FFortGlobalActionDetails         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortGlobalActionDetails IFortGlobalActionDetailsDataSource::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalActionDetailsDataSource", "GetValue");

	Params::FortGlobalActionDetailsDataSource_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSocialPanelView_FriendLinkButton.OnCopiedToClipboard
// (Event, Protected, BlueprintEvent)

void UFortSocialPanelView_FriendLinkButton::OnCopiedToClipboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_FriendLinkButton", "OnCopiedToClipboard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialPanelView_FriendLinkButton.OnShareButtonTypeSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFriendLinkShareButtonType              Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialPanelView_FriendLinkButton::OnShareButtonTypeSet(EFriendLinkShareButtonType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_FriendLinkButton", "OnShareButtonTypeSet");

	Params::FortSocialPanelView_FriendLinkButton_OnShareButtonTypeSet Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGlobalUIContext.CancelDrawAttention
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          BaseWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::CancelDrawAttention(class UWidget* BaseWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobalUIContext", "CancelDrawAttention");

	Params::FortGlobalUIContext_CancelDrawAttention Parms{};

	Parms.BaseWidget = BaseWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.CheckFlag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           FlagName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFlagStatus                             OutStatus                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::CheckFlag(const class FString& FlagName, EFlagStatus* OutStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobalUIContext", "CheckFlag");

	Params::FortGlobalUIContext_CheckFlag Parms{};

	Parms.FlagName = std::move(FlagName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStatus != nullptr)
		*OutStatus = Parms.OutStatus;
}


// Function FortniteUI.FortGlobalUIContext.DrawAttention
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          BaseWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::DrawAttention(class UWidget* BaseWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobalUIContext", "DrawAttention");

	Params::FortGlobalUIContext_DrawAttention Parms{};

	Parms.BaseWidget = BaseWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.AutoSelectSubGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::AutoSelectSubGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "AutoSelectSubGame");

	Params::FortGlobalUIContext_AutoSelectSubGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.BindToFeatureStateAndInitialize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::BindToFeatureStateAndInitialize(EFortUIFeature Feature, TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "BindToFeatureStateAndInitialize");

	Params::FortGlobalUIContext_BindToFeatureStateAndInitialize Parms{};

	Parms.Feature = Feature;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.BroadcastItemReceivedNotificationShown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsActive                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::BroadcastItemReceivedNotificationShown(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "BroadcastItemReceivedNotificationShown");

	Params::FortGlobalUIContext_BroadcastItemReceivedNotificationShown Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.CanMatchmake
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DenialReason                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::CanMatchmake(ESubGame SubGame, class FText* DenialReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "CanMatchmake");

	Params::FortGlobalUIContext_CanMatchmake Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DenialReason != nullptr)
		*DenialReason = std::move(Parms.DenialReason);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.ClearForceSetFeatureState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ClearForceSetFeatureState(EFortUIFeature Feature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ClearForceSetFeatureState");

	Params::FortGlobalUIContext_ClearForceSetFeatureState Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ClearLastMissionReports
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::ClearLastMissionReports()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ClearLastMissionReports");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ClearRatingWidgetInfo
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::ClearRatingWidgetInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ClearRatingWidgetInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ClearSelectionGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SelectionGroup                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ClearSelectionGroup(class FName SelectionGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ClearSelectionGroup");

	Params::FortGlobalUIContext_ClearSelectionGroup Parms{};

	Parms.SelectionGroup = SelectionGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.CloseExternalNotificationWindowIfOpen
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::CloseExternalNotificationWindowIfOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "CloseExternalNotificationWindowIfOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.CopyToClipboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ClipboardText                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::CopyToClipboard(const class FString& ClipboardText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "CopyToClipboard");

	Params::FortGlobalUIContext_CopyToClipboard Parms{};

	Parms.ClipboardText = std::move(ClipboardText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.DisplayStateContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::DisplayStateContent(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "DisplayStateContent");

	Params::FortGlobalUIContext_DisplayStateContent Parms{};

	Parms.bDisplay = bDisplay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.EnterVehicleDriver
// (Final, Native, Public)

void UFortGlobalUIContext::EnterVehicleDriver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "EnterVehicleDriver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.EnterVehiclePassenger
// (Final, Native, Public)

void UFortGlobalUIContext::EnterVehiclePassenger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "EnterVehiclePassenger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ExitVehicle
// (Final, Native, Public)

void UFortGlobalUIContext::ExitVehicle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ExitVehicle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ForceSetFeatureState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     ForcedState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ForceSetFeatureState(EFortUIFeature Feature, EFortUIFeatureState ForcedState, EFortUIFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ForceSetFeatureState");

	Params::FortGlobalUIContext_ForceSetFeatureState Parms{};

	Parms.Feature = Feature;
	Parms.ForcedState = ForcedState;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.GetConningDifficultyXpModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TotalSkillPoints                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ContentDifficulty                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGlobalUIContext::GetConningDifficultyXpModifier(int32 TotalSkillPoints, int32 ContentDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetConningDifficultyXpModifier");

	Params::FortGlobalUIContext_GetConningDifficultyXpModifier Parms{};

	Parms.TotalSkillPoints = TotalSkillPoints;
	Parms.ContentDifficulty = ContentDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetConningXpModifierMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TotalSkillPoints                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ContentDifficulty                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetConningXpModifierMessage(int32 TotalSkillPoints, int32 ContentDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetConningXpModifierMessage");

	Params::FortGlobalUIContext_GetConningXpModifierMessage Parms{};

	Parms.TotalSkillPoints = TotalSkillPoints;
	Parms.ContentDifficulty = ContentDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetFeatureState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortUIFeature                          Feature                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     OutFeatureState                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               OutReason                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetFeatureState(const EFortUIFeature Feature, EFortUIFeatureState* OutFeatureState, EFortUIFeatureStateReason* OutReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetFeatureState");

	Params::FortGlobalUIContext_GetFeatureState Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFeatureState != nullptr)
		*OutFeatureState = Parms.OutFeatureState;

	if (OutReason != nullptr)
		*OutReason = Parms.OutReason;
}


// Function FortniteUI.FortGlobalUIContext.GetLastMissionRewardReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUIRewardReport*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIRewardReport* UFortGlobalUIContext::GetLastMissionRewardReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetLastMissionRewardReport");

	Params::FortGlobalUIContext_GetLastMissionRewardReport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetMessageManager
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             ManagerName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCreatedNew                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUIMessageManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIMessageManager* UFortGlobalUIContext::GetMessageManager(class FName ManagerName, bool* bCreatedNew)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetMessageManager");

	Params::FortGlobalUIContext_GetMessageManager Parms{};

	Parms.ManagerName = ManagerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bCreatedNew != nullptr)
		*bCreatedNew = Parms.bCreatedNew;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetScoreReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUIScoreReport*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIScoreReport* UFortGlobalUIContext::GetScoreReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetScoreReport");

	Params::FortGlobalUIContext_GetScoreReport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetTopLevelHelpItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortHelpItem*>            ActiveHelpEntries                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetTopLevelHelpItems(TArray<class UFortHelpItem*>* ActiveHelpEntries)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetTopLevelHelpItems");

	Params::FortGlobalUIContext_GetTopLevelHelpItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActiveHelpEntries != nullptr)
		*ActiveHelpEntries = std::move(Parms.ActiveHelpEntries);
}


// Function FortniteUI.FortGlobalUIContext.GetWatermark
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetWatermark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetWatermark");

	Params::FortGlobalUIContext_GetWatermark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.HideBang
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBangType                           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::HideBang(EFortBangType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "HideBang");

	Params::FortGlobalUIContext_HideBang Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.InputActionHoldStarted
// (Final, Native, Public)
// Parameters:
// class FName                             InputActionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HoldDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::InputActionHoldStarted(class FName InputActionName, float HoldDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "InputActionHoldStarted");

	Params::FortGlobalUIContext_InputActionHoldStarted Parms{};

	Parms.InputActionName = InputActionName;
	Parms.HoldDuration = HoldDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.InputActionHoldStopped
// (Final, Native, Public)
// Parameters:
// class FName                             InputActionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompletedSuccessfully                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::InputActionHoldStopped(class FName InputActionName, bool bCompletedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "InputActionHoldStopped");

	Params::FortGlobalUIContext_InputActionHoldStopped Parms{};

	Parms.InputActionName = InputActionName;
	Parms.bCompletedSuccessfully = bCompletedSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.IsAllContentInstalled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsAllContentInstalled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsAllContentInstalled");

	Params::FortGlobalUIContext_IsAllContentInstalled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsBluGloEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsBluGloEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsBluGloEnabled");

	Params::FortGlobalUIContext_IsBluGloEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsDesktopPlatform
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsDesktopPlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsDesktopPlatform");

	Params::FortGlobalUIContext_IsDesktopPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsHUDVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsHUDVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsHUDVisible");

	Params::FortGlobalUIContext_IsHUDVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.Logout
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::Logout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "Logout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortGlobalUIContext.OnLoadingScreenVisibilityChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsVisible                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::OnLoadingScreenVisibilityChangedDelegate__DelegateSignature(bool IsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "OnLoadingScreenVisibilityChangedDelegate__DelegateSignature");

	Params::FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature Parms{};

	Parms.IsVisible = IsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortGlobalUIContext.OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bConnected                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature(bool bConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature");

	Params::FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature Parms{};

	Parms.bConnected = bConnected;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteUI.FortGlobalUIContext.OnQueryFortBackendVersionDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FFortBackendVersion              FortBackendVersion                                     (Parm, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::OnQueryFortBackendVersionDelegate__DelegateSignature(const struct FFortBackendVersion& FortBackendVersion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "OnQueryFortBackendVersionDelegate__DelegateSignature");

	Params::FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature Parms{};

	Parms.FortBackendVersion = std::move(FortBackendVersion);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGlobalUIContext.ProcessConfirmationResult
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortDialogResult                       InResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InResultName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogDescription_NUI       ConfirmationDescription                                (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bWaitingForLatentAction                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleWaitingDialogHandle                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ProcessConfirmationResult(EFortDialogResult InResult, class FName InResultName, const struct FFortDialogDescription_NUI& ConfirmationDescription, bool bWaitingForLatentAction, struct FFortDialogExternalLatentActionHandle* WaitingDialogHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ProcessConfirmationResult");

	Params::FortGlobalUIContext_ProcessConfirmationResult Parms{};

	Parms.InResult = InResult;
	Parms.InResultName = InResultName;
	Parms.ConfirmationDescription = std::move(ConfirmationDescription);
	Parms.bWaitingForLatentAction = bWaitingForLatentAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WaitingDialogHandle != nullptr)
		*WaitingDialogHandle = std::move(Parms.WaitingDialogHandle);
}


// Function FortniteUI.FortGlobalUIContext.QueryGameBackendVersion
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::QueryGameBackendVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "QueryGameBackendVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.QuitGame
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::QuitGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "QuitGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.RegisterInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      UserWidget                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              InputActionRow                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void(bool* bPassThrough)>     CommitedEvent                                          (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   InFilterPriority                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::RegisterInputAction(const class UUserWidget* UserWidget, const struct FDataTableRowHandle& InputActionRow, TDelegate<void(bool* bPassThrough)> CommitedEvent, int32 InFilterPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "RegisterInputAction");

	Params::FortGlobalUIContext_RegisterInputAction Parms{};

	Parms.UserWidget = UserWidget;
	Parms.InputActionRow = std::move(InputActionRow);
	Parms.CommitedEvent = CommitedEvent;
	Parms.InFilterPriority = InFilterPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.RegisterScriptedAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AFortScriptedAction>  ScriptedAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::RegisterScriptedAction(TSubclassOf<class AFortScriptedAction> ScriptedAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "RegisterScriptedAction");

	Params::FortGlobalUIContext_RegisterScriptedAction Parms{};

	Parms.ScriptedAction = ScriptedAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.RegisterScriptedActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class AFortScriptedAction>>ScriptedActions                                        (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::RegisterScriptedActions(const TArray<TSubclassOf<class AFortScriptedAction>>& ScriptedActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "RegisterScriptedActions");

	Params::FortGlobalUIContext_RegisterScriptedActions Parms{};

	Parms.ScriptedActions = std::move(ScriptedActions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ReturnToSubGameSelect
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::ReturnToSubGameSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ReturnToSubGameSelect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.RunLauncherWithOptions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Options                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::RunLauncherWithOptions(const class FString& Options)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "RunLauncherWithOptions");

	Params::FortGlobalUIContext_RunLauncherWithOptions Parms{};

	Parms.Options = std::move(Options);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SendExperienceRatingAnalytic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           RatingType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FeedbackSentBy                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             RatingQuestion                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   StarCount                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GameSessionId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Comment                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SendExperienceRatingAnalytic(const class FString& RatingType, const class FString& FeedbackSentBy, const class FText& RatingQuestion, const int32& StarCount, const class FString& GameSessionId, const class FString& Comment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SendExperienceRatingAnalytic");

	Params::FortGlobalUIContext_SendExperienceRatingAnalytic Parms{};

	Parms.RatingType = std::move(RatingType);
	Parms.FeedbackSentBy = std::move(FeedbackSentBy);
	Parms.RatingQuestion = std::move(RatingQuestion);
	Parms.StarCount = StarCount;
	Parms.GameSessionId = std::move(GameSessionId);
	Parms.Comment = std::move(Comment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SendLeaveZoneAnalytic
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::SendLeaveZoneAnalytic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SendLeaveZoneAnalytic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SendUINavigationAnalytic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Destination                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUserInitiated                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SendUINavigationAnalytic(const class FString& Destination, bool bUserInitiated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SendUINavigationAnalytic");

	Params::FortGlobalUIContext_SendUINavigationAnalytic Parms{};

	Parms.Destination = std::move(Destination);
	Parms.bUserInitiated = bUserInitiated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetBangFromCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBangType                           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetBangFromCount(EFortBangType Type, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetBangFromCount");

	Params::FortGlobalUIContext_SetBangFromCount Parms{};

	Parms.Type = Type;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetContextHelpItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortHelpItem*                    ContextSpecificHelpItem                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetContextHelpItem(class UFortHelpItem* ContextSpecificHelpItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetContextHelpItem");

	Params::FortGlobalUIContext_SetContextHelpItem Parms{};

	Parms.ContextSpecificHelpItem = ContextSpecificHelpItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetCreativeMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    IsCreativeMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetCreativeMode(bool IsCreativeMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetCreativeMode");

	Params::FortGlobalUIContext_SetCreativeMode Parms{};

	Parms.IsCreativeMode = IsCreativeMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetCurrentCustomInputTemplatePresetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InputPresetName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetCurrentCustomInputTemplatePresetName(const class FString& InputPresetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetCurrentCustomInputTemplatePresetName");

	Params::FortGlobalUIContext_SetCurrentCustomInputTemplatePresetName Parms{};

	Parms.InputPresetName = std::move(InputPresetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetCurrentInputPresetName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           InputPresetName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetCurrentInputPresetName(const class FString& InputPresetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetCurrentInputPresetName");

	Params::FortGlobalUIContext_SetCurrentInputPresetName Parms{};

	Parms.InputPresetName = std::move(InputPresetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetHidePerkRecombobulatorHelp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHideHelp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetHidePerkRecombobulatorHelp(bool bInHideHelp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetHidePerkRecombobulatorHelp");

	Params::FortGlobalUIContext_SetHidePerkRecombobulatorHelp Parms{};

	Parms.bInHideHelp = bInHideHelp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetHideStwItemRefundHelp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInHideHelp                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetHideStwItemRefundHelp(bool bInHideHelp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetHideStwItemRefundHelp");

	Params::FortGlobalUIContext_SetHideStwItemRefundHelp Parms{};

	Parms.bInHideHelp = bInHideHelp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetInputMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortInputMode                          InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetInputMode(EFortInputMode InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetInputMode");

	Params::FortGlobalUIContext_SetInputMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetRatingWidgetFeedbackTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Title                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetRatingWidgetFeedbackTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetRatingWidgetFeedbackTitle");

	Params::FortGlobalUIContext_SetRatingWidgetFeedbackTitle Parms{};

	Parms.Title = std::move(Title);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.SetSubGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::SetSubGame(ESubGame SubGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "SetSubGame");

	Params::FortGlobalUIContext_SetSubGame Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ShowAthenaMatchReadyExternalNotificationWindow
// (Final, Native, Public, BlueprintCallable)

void UFortGlobalUIContext::ShowAthenaMatchReadyExternalNotificationWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShowAthenaMatchReadyExternalNotificationWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ShowBang
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBangType                           Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ShowBang(EFortBangType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShowBang");

	Params::FortGlobalUIContext_ShowBang Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ShowConsoleAccountPicker
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   ControllerIndex                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(int32 ControllerIndex, bool bUserSwitched)>CompletionDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::ShowConsoleAccountPicker(const int32 ControllerIndex, const TDelegate<void(int32 ControllerIndex, bool bUserSwitched)>& CompletionDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShowConsoleAccountPicker");

	Params::FortGlobalUIContext_ShowConsoleAccountPicker Parms{};

	Parms.ControllerIndex = ControllerIndex;
	Parms.CompletionDelegate = CompletionDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ShowWebURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUrlType                            URLType                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::ShowWebURL(const class FString& URL, const EFortUrlType URLType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShowWebURL");

	Params::FortGlobalUIContext_ShowWebURL Parms{};

	Parms.URL = std::move(URL);
	Parms.URLType = URLType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.UnbindToFeatureState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)>Delegate                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::UnbindToFeatureState(EFortUIFeature Feature, TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)> Delegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "UnbindToFeatureState");

	Params::FortGlobalUIContext_UnbindToFeatureState Parms{};

	Parms.Feature = Feature;
	Parms.Delegate = Delegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.UnregisterInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      UserWidget                                             (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              InputActionRow                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::UnregisterInputAction(const class UUserWidget* UserWidget, const struct FDataTableRowHandle& InputActionRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "UnregisterInputAction");

	Params::FortGlobalUIContext_UnregisterInputAction Parms{};

	Parms.UserWidget = UserWidget;
	Parms.InputActionRow = std::move(InputActionRow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.UnregisterScriptedAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AFortScriptedAction>  ScriptedAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::UnregisterScriptedAction(TSubclassOf<class AFortScriptedAction> ScriptedAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "UnregisterScriptedAction");

	Params::FortGlobalUIContext_UnregisterScriptedAction Parms{};

	Parms.ScriptedAction = ScriptedAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.UnregisterScriptedActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<TSubclassOf<class AFortScriptedAction>>ScriptedActions                                        (Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::UnregisterScriptedActions(const TArray<TSubclassOf<class AFortScriptedAction>>& ScriptedActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "UnregisterScriptedActions");

	Params::FortGlobalUIContext_UnregisterScriptedActions Parms{};

	Parms.ScriptedActions = std::move(ScriptedActions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.AllowLogout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::AllowLogout() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "AllowLogout");

	Params::FortGlobalUIContext_AllowLogout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.AllowQuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::AllowQuit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "AllowQuit");

	Params::FortGlobalUIContext_AllowQuit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.CanPlay
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DenialReason                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::CanPlay(ESubGame SubGame, class FText* DenialReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "CanPlay");

	Params::FortGlobalUIContext_CanPlay Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DenialReason != nullptr)
		*DenialReason = std::move(Parms.DenialReason);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.ClearLastGameSummaryInfo
// (Final, Native, Public, BlueprintCallable, Const)

void UFortGlobalUIContext::ClearLastGameSummaryInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ClearLastGameSummaryInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGlobalUIContext.ContentInstallationProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGlobalUIContext::ContentInstallationProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ContentInstallationProgress");

	Params::FortGlobalUIContext_ContentInstallationProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAbility1ActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetAbility1ActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAbility1ActionName");

	Params::FortGlobalUIContext_GetAbility1ActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAbility2ActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetAbility2ActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAbility2ActionName");

	Params::FortGlobalUIContext_GetAbility2ActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAbility3ActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetAbility3ActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAbility3ActionName");

	Params::FortGlobalUIContext_GetAbility3ActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAccessReason
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESubGameAccessReason                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESubGameAccessReason UFortGlobalUIContext::GetAccessReason(const ESubGame SubGame) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAccessReason");

	Params::FortGlobalUIContext_GetAccessReason Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAccountGameplayRestrictionText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetAccountGameplayRestrictionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAccountGameplayRestrictionText");

	Params::FortGlobalUIContext_GetAccountGameplayRestrictionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetActionDetails
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortGlobalAction                       Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGlobalActionDetailsFunctionContextContext                                                (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortGlobalActionDetails         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortGlobalActionDetails UFortGlobalUIContext::GetActionDetails(EFortGlobalAction Action, const struct FFortGlobalActionDetailsFunctionContext& Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetActionDetails");

	Params::FortGlobalUIContext_GetActionDetails Parms{};

	Parms.Action = Action;
	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetActionForKey
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PresetName                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             Key                                                    (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInputActionGroup                   InputActionGroup                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUsingGamepad                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetActionForKey(const class FName PresetName, const struct FKey& Key, const EFortInputActionGroup InputActionGroup, const bool bIsUsingGamepad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetActionForKey");

	Params::FortGlobalUIContext_GetActionForKey Parms{};

	Parms.PresetName = PresetName;
	Parms.Key = std::move(Key);
	Parms.InputActionGroup = InputActionGroup;
	Parms.bIsUsingGamepad = bIsUsingGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetAllPlayerInputPresetNames
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   InputPresetNames                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FText>                     InputPresetFriendlyNames                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetAllPlayerInputPresetNames(TArray<class FString>* InputPresetNames, TArray<class FText>* InputPresetFriendlyNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAllPlayerInputPresetNames");

	Params::FortGlobalUIContext_GetAllPlayerInputPresetNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputPresetNames != nullptr)
		*InputPresetNames = std::move(Parms.InputPresetNames);

	if (InputPresetFriendlyNames != nullptr)
		*InputPresetFriendlyNames = std::move(Parms.InputPresetFriendlyNames);
}


// Function FortniteUI.FortGlobalUIContext.GetAllPlayerInputPresetNamesForSubGame
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   InputPresetNames                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FText>                     InputPresetFriendlyNames                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetAllPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<class FString>* InputPresetNames, TArray<class FText>* InputPresetFriendlyNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetAllPlayerInputPresetNamesForSubGame");

	Params::FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputPresetNames != nullptr)
		*InputPresetNames = std::move(Parms.InputPresetNames);

	if (InputPresetFriendlyNames != nullptr)
		*InputPresetFriendlyNames = std::move(Parms.InputPresetFriendlyNames);
}


// Function FortniteUI.FortGlobalUIContext.GetBackendName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UFortGlobalUIContext::GetBackendName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBackendName");

	Params::FortGlobalUIContext_GetBackendName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneBoostName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneBoostName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneBoostName");

	Params::FortGlobalUIContext_GetBiplaneBoostName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneFreelookName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneFreelookName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneFreelookName");

	Params::FortGlobalUIContext_GetBiplaneFreelookName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneRollInvertName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneRollInvertName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneRollInvertName");

	Params::FortGlobalUIContext_GetBiplaneRollInvertName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneRollLeftName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneRollLeftName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneRollLeftName");

	Params::FortGlobalUIContext_GetBiplaneRollLeftName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneRollRightName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneRollRightName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneRollRightName");

	Params::FortGlobalUIContext_GetBiplaneRollRightName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneShootName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneShootName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneShootName");

	Params::FortGlobalUIContext_GetBiplaneShootName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneStartEngineName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneStartEngineName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneStartEngineName");

	Params::FortGlobalUIContext_GetBiplaneStartEngineName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneStopEngineName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneStopEngineName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneStopEngineName");

	Params::FortGlobalUIContext_GetBiplaneStopEngineName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBiplaneTaxiBackwardsName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBiplaneTaxiBackwardsName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBiplaneTaxiBackwardsName");

	Params::FortGlobalUIContext_GetBiplaneTaxiBackwardsName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBrushForKey
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Brush                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetBrushForKey(const struct FKey& Key, struct FSlateBrush* Brush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBrushForKey");

	Params::FortGlobalUIContext_GetBrushForKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBrushForKeyWithCustomInput
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKey                             Key                                                    (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Brush                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// ECommonInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECommonGamepadType                      GamepadType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetBrushForKeyWithCustomInput(const struct FKey& Key, struct FSlateBrush* Brush, ECommonInputType InputType, ECommonGamepadType GamepadType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBrushForKeyWithCustomInput");

	Params::FortGlobalUIContext_GetBrushForKeyWithCustomInput Parms{};

	Parms.Key = std::move(Key);
	Parms.InputType = InputType;
	Parms.GamepadType = GamepadType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetBuildConfirmActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetBuildConfirmActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetBuildConfirmActionName");

	Params::FortGlobalUIContext_GetBuildConfirmActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetChangeMaterialActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetChangeMaterialActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetChangeMaterialActionName");

	Params::FortGlobalUIContext_GetChangeMaterialActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCollectionBookManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCollectionBookManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCollectionBookManager* UFortGlobalUIContext::GetCollectionBookManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCollectionBookManager");

	Params::FortGlobalUIContext_GetCollectionBookManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeFlyDownActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeFlyDownActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeFlyDownActionName");

	Params::FortGlobalUIContext_GetCreativeFlyDownActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeFlyUpActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeFlyUpActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeFlyUpActionName");

	Params::FortGlobalUIContext_GetCreativeFlyUpActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetCreativeMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMode");

	Params::FortGlobalUIContext_GetCreativeMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeModeLimitedAccessEndTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortGlobalUIContext::GetCreativeModeLimitedAccessEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeModeLimitedAccessEndTime");

	Params::FortGlobalUIContext_GetCreativeModeLimitedAccessEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridChangePrecisionLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridChangePrecisionLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridChangePrecisionLevelName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridChangePrecisionLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridDuplicateName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridDuplicateName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridDuplicateName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridDuplicateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridExitName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridExitName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridExitName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridExitName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridLetGoName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridLetGoName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridLetGoName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridLetGoName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridMirrorName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridMirrorName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridMirrorName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridMirrorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridRotateClockwiseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridRotateClockwiseName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridRotateClockwiseName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridRotateClockwiseName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName");

	Params::FortGlobalUIContext_GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyChangePrecisionLevelName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyChangePrecisionLevelName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyChangePrecisionLevelName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyChangePrecisionLevelName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyDropToFloorName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyDropToFloorName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyDropToFloorName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyDropToFloorName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyDuplicateName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyDuplicateName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyDuplicateName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyDuplicateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyExitName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyExitName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyExitName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyExitName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyLetGoName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyLetGoName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyLetGoName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyLetGoName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyPullName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyPullName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyPullName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyPullName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyPushName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyPushName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyPushName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyPushName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyRotateClockwiseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyRotateClockwiseName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyRotateClockwiseName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyRotateClockwiseName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyRotateCounterclockwiseName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelyRotateCounterclockwiseName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelyRotateCounterclockwiseName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelyRotateCounterclockwiseName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelySwitchAxisName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveObjectsFreelySwitchAxisName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveObjectsFreelySwitchAxisName");

	Params::FortGlobalUIContext_GetCreativeMoveObjectsFreelySwitchAxisName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedCopyGrabOrDuplicateName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveToolEquippedCopyGrabOrDuplicateName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveToolEquippedCopyGrabOrDuplicateName");

	Params::FortGlobalUIContext_GetCreativeMoveToolEquippedCopyGrabOrDuplicateName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedDeleteName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveToolEquippedDeleteName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveToolEquippedDeleteName");

	Params::FortGlobalUIContext_GetCreativeMoveToolEquippedDeleteName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedGrabOrLetGoName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCreativeMoveToolEquippedGrabOrLetGoName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCreativeMoveToolEquippedGrabOrLetGoName");

	Params::FortGlobalUIContext_GetCreativeMoveToolEquippedGrabOrLetGoName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCrouchActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetCrouchActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCrouchActionName");

	Params::FortGlobalUIContext_GetCrouchActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCurrentCustomInputTemplatePresetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetCurrentCustomInputTemplatePresetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCurrentCustomInputTemplatePresetName");

	Params::FortGlobalUIContext_GetCurrentCustomInputTemplatePresetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCurrentInputPresetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetCurrentInputPresetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCurrentInputPresetName");

	Params::FortGlobalUIContext_GetCurrentInputPresetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetCustomGamepadInputPresetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetCustomGamepadInputPresetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetCustomGamepadInputPresetName");

	Params::FortGlobalUIContext_GetCustomGamepadInputPresetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetFeatureStateReasonText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortUIFeatureStateReason               Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetFeatureStateReasonText(const EFortUIFeatureStateReason Reason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetFeatureStateReasonText");

	Params::FortGlobalUIContext_GetFeatureStateReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetFeedbackTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetFeedbackTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetFeedbackTitle");

	Params::FortGlobalUIContext_GetFeedbackTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetFireActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetFireActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetFireActionName");

	Params::FortGlobalUIContext_GetFireActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetGadget1ActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetGadget1ActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetGadget1ActionName");

	Params::FortGlobalUIContext_GetGadget1ActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetGadget2ActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetGadget2ActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetGadget2ActionName");

	Params::FortGlobalUIContext_GetGadget2ActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetGolfCartEBrakeActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetGolfCartEBrakeActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetGolfCartEBrakeActionName");

	Params::FortGlobalUIContext_GetGolfCartEBrakeActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetGolfCartForwardActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetGolfCartForwardActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetGolfCartForwardActionName");

	Params::FortGlobalUIContext_GetGolfCartForwardActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetGolfCartReverseActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetGolfCartReverseActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetGolfCartReverseActionName");

	Params::FortGlobalUIContext_GetGolfCartReverseActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetHidePerkRecombobulatorHelp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetHidePerkRecombobulatorHelp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetHidePerkRecombobulatorHelp");

	Params::FortGlobalUIContext_GetHidePerkRecombobulatorHelp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetHideStwItemRefundHelp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetHideStwItemRefundHelp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetHideStwItemRefundHelp");

	Params::FortGlobalUIContext_GetHideStwItemRefundHelp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetInputDetailsForAction
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortInputActionDetails          InputActionDetails                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::GetInputDetailsForAction(class FName Action, struct FFortInputActionDetails* InputActionDetails) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetInputDetailsForAction");

	Params::FortGlobalUIContext_GetInputDetailsForAction Parms{};

	Parms.Action = Action;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputActionDetails != nullptr)
		*InputActionDetails = std::move(Parms.InputActionDetails);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetInputPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInputPriority                          Priority                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortGlobalUIContext::GetInputPriority(EInputPriority Priority) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetInputPriority");

	Params::FortGlobalUIContext_GetInputPriority Parms{};

	Parms.Priority = Priority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetJackalBoostActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetJackalBoostActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetJackalBoostActionName");

	Params::FortGlobalUIContext_GetJackalBoostActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetJumpActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetJumpActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetJumpActionName");

	Params::FortGlobalUIContext_GetJumpActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetKBMPlayerInputPresetDescriptionForSubGame
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentPreset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             InputPresetDescription                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             InputPresetSubDescription                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetKBMPlayerInputPresetDescriptionForSubGame(ESubGame SubGame, int32 CurrentPreset, class FText* InputPresetDescription, class FText* InputPresetSubDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKBMPlayerInputPresetDescriptionForSubGame");

	Params::FortGlobalUIContext_GetKBMPlayerInputPresetDescriptionForSubGame Parms{};

	Parms.SubGame = SubGame;
	Parms.CurrentPreset = CurrentPreset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputPresetDescription != nullptr)
		*InputPresetDescription = std::move(Parms.InputPresetDescription);

	if (InputPresetSubDescription != nullptr)
		*InputPresetSubDescription = std::move(Parms.InputPresetSubDescription);
}


// Function FortniteUI.FortGlobalUIContext.GetKBMPlayerInputPresetNamesForSubGame
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   InputPresetNames                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FText>                     InputPresetFriendlyNames                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetKBMPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<class FString>* InputPresetNames, TArray<class FText>* InputPresetFriendlyNames) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKBMPlayerInputPresetNamesForSubGame");

	Params::FortGlobalUIContext_GetKBMPlayerInputPresetNamesForSubGame Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InputPresetNames != nullptr)
		*InputPresetNames = std::move(Parms.InputPresetNames);

	if (InputPresetFriendlyNames != nullptr)
		*InputPresetFriendlyNames = std::move(Parms.InputPresetFriendlyNames);
}


// Function FortniteUI.FortGlobalUIContext.GetKeyForAction
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceGamepadKey                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PresetNameOverride                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UFortGlobalUIContext::GetKeyForAction(class FName Action, const bool bForceGamepadKey, class FName PresetNameOverride) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKeyForAction");

	Params::FortGlobalUIContext_GetKeyForAction Parms{};

	Parms.Action = Action;
	Parms.bForceGamepadKey = bForceGamepadKey;
	Parms.PresetNameOverride = PresetNameOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetKeyForAxis
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Scale                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUsingGamepad                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UFortGlobalUIContext::GetKeyForAxis(class FName Axis, const float Scale, const bool bIsUsingGamepad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKeyForAxis");

	Params::FortGlobalUIContext_GetKeyForAxis Parms{};

	Parms.Axis = Axis;
	Parms.Scale = Scale;
	Parms.bIsUsingGamepad = bIsUsingGamepad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetKeyTextForAction
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ButtonActionType                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    bUseAbbreviatedText                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetKeyTextForAction(class FName Action, class FText* ButtonActionType, bool bUseAbbreviatedText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKeyTextForAction");

	Params::FortGlobalUIContext_GetKeyTextForAction Parms{};

	Parms.Action = Action;
	Parms.bUseAbbreviatedText = bUseAbbreviatedText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ButtonActionType != nullptr)
		*ButtonActionType = std::move(Parms.ButtonActionType);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetKeyTextForAxis
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             Axis                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AxisScale                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsUsingGamepad                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAbbreviatedText                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetKeyTextForAxis(class FName Axis, const float AxisScale, bool bIsUsingGamepad, bool bUseAbbreviatedText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetKeyTextForAxis");

	Params::FortGlobalUIContext_GetKeyTextForAxis Parms{};

	Parms.Axis = Axis;
	Parms.AxisScale = AxisScale;
	Parms.bIsUsingGamepad = bIsUsingGamepad;
	Parms.bUseAbbreviatedText = bUseAbbreviatedText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetLastGameSummaryInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameSummaryInfo                 ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameSummaryInfo UFortGlobalUIContext::GetLastGameSummaryInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetLastGameSummaryInfo");

	Params::FortGlobalUIContext_GetLastGameSummaryInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetLastMissionInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortLastMissionInfo             LastMissionInfo                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::GetLastMissionInfo(struct FFortLastMissionInfo* LastMissionInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetLastMissionInfo");

	Params::FortGlobalUIContext_GetLastMissionInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LastMissionInfo != nullptr)
		*LastMissionInfo = std::move(Parms.LastMissionInfo);
}


// Function FortniteUI.FortGlobalUIContext.GetPerformBuildingEditInteractionActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetPerformBuildingEditInteractionActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetPerformBuildingEditInteractionActionName");

	Params::FortGlobalUIContext_GetPerformBuildingEditInteractionActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetPerformBuildingImprovementInteractionActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetPerformBuildingImprovementInteractionActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetPerformBuildingImprovementInteractionActionName");

	Params::FortGlobalUIContext_GetPerformBuildingImprovementInteractionActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetPickerCancelActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPickerMode                         PickerMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetPickerCancelActionName(EFortPickerMode PickerMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetPickerCancelActionName");

	Params::FortGlobalUIContext_GetPickerCancelActionName Parms{};

	Parms.PickerMode = PickerMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetPickerConfirmActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPickerMode                         PickerMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetPickerConfirmActionName(EFortPickerMode PickerMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetPickerConfirmActionName");

	Params::FortGlobalUIContext_GetPickerConfirmActionName Parms{};

	Parms.PickerMode = PickerMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetPlatformDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortGlobalUIContext::GetPlatformDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetPlatformDisplayName");

	Params::FortGlobalUIContext_GetPlatformDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetQuadCrasherBoostActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetQuadCrasherBoostActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetQuadCrasherBoostActionName");

	Params::FortGlobalUIContext_GetQuadCrasherBoostActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetQuestManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestManager*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestManager* UFortGlobalUIContext::GetQuestManager(ESubGame SubGame) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetQuestManager");

	Params::FortGlobalUIContext_GetQuestManager Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetRotatePrimitiveClockwiseActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetRotatePrimitiveClockwiseActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetRotatePrimitiveClockwiseActionName");

	Params::FortGlobalUIContext_GetRotatePrimitiveClockwiseActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetSeasonalEventManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSeasonalEventManager*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSeasonalEventManager* UFortGlobalUIContext::GetSeasonalEventManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetSeasonalEventManager");

	Params::FortGlobalUIContext_GetSeasonalEventManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetSessionConnectString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetSessionConnectString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetSessionConnectString");

	Params::FortGlobalUIContext_GetSessionConnectString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetSessionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobalUIContext::GetSessionId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetSessionId");

	Params::FortGlobalUIContext_GetSessionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetShoppingCartCoastActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetShoppingCartCoastActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetShoppingCartCoastActionName");

	Params::FortGlobalUIContext_GetShoppingCartCoastActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetSubGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESubGame UFortGlobalUIContext::GetSubGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetSubGame");

	Params::FortGlobalUIContext_GetSubGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetSwitchQuickBarActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetSwitchQuickBarActionName(ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetSwitchQuickBarActionName");

	Params::FortGlobalUIContext_GetSwitchQuickBarActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetToggleFullscreenMapActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetToggleFullscreenMapActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetToggleFullscreenMapActionName");

	Params::FortGlobalUIContext_GetToggleFullscreenMapActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetToggleInventoryActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetToggleInventoryActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetToggleInventoryActionName");

	Params::FortGlobalUIContext_GetToggleInventoryActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetTrapConfirmActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetTrapConfirmActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetTrapConfirmActionName");

	Params::FortGlobalUIContext_GetTrapConfirmActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetTrapHotbarActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetTrapHotbarActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetTrapHotbarActionName");

	Params::FortGlobalUIContext_GetTrapHotbarActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetTrapPickerActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetTrapPickerActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetTrapPickerActionName");

	Params::FortGlobalUIContext_GetTrapPickerActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetUseActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetUseActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetUseActionName");

	Params::FortGlobalUIContext_GetUseActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetVehicleChangeSeatActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetVehicleChangeSeatActionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetVehicleChangeSeatActionName");

	Params::FortGlobalUIContext_GetVehicleChangeSeatActionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetVehicleExitActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetVehicleExitActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetVehicleExitActionName");

	Params::FortGlobalUIContext_GetVehicleExitActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.GetVehicleJumpActionName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECommonInputType                        OverrideInputType                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortGlobalUIContext::GetVehicleJumpActionName(const ECommonInputType OverrideInputType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "GetVehicleJumpActionName");

	Params::FortGlobalUIContext_GetVehicleJumpActionName Parms{};

	Parms.OverrideInputType = OverrideInputType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.HasAccesstoMultipleSubGames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::HasAccesstoMultipleSubGames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "HasAccesstoMultipleSubGames");

	Params::FortGlobalUIContext_HasAccesstoMultipleSubGames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.HasCompletedOnboardingObjective
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              Objective                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::HasCompletedOnboardingObjective(const struct FDataTableRowHandle& Objective) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "HasCompletedOnboardingObjective");

	Params::FortGlobalUIContext_HasCompletedOnboardingObjective Parms{};

	Parms.Objective = std::move(Objective);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsBattleRoyaleMatchmakingEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsBattleRoyaleMatchmakingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsBattleRoyaleMatchmakingEnabled");

	Params::FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsCreativeModeAccessLimited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsCreativeModeAccessLimited() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsCreativeModeAccessLimited");

	Params::FortGlobalUIContext_IsCreativeModeAccessLimited Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsCurrentlyShowingLoadingScreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsCurrentlyShowingLoadingScreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsCurrentlyShowingLoadingScreen");

	Params::FortGlobalUIContext_IsCurrentlyShowingLoadingScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsCustomGamepadConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ConfigIndex                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsCustomGamepadConfig(const int32 ConfigIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsCustomGamepadConfig");

	Params::FortGlobalUIContext_IsCustomGamepadConfig Parms{};

	Parms.ConfigIndex = ConfigIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsGamepadAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsGamepadAttached() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsGamepadAttached");

	Params::FortGlobalUIContext_IsGamepadAttached Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsInOutpostZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsInOutpostZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsInOutpostZone");

	Params::FortGlobalUIContext_IsInOutpostZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsInZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsInZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsInZone");

	Params::FortGlobalUIContext_IsInZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsMobileApp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsMobileApp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsMobileApp");

	Params::FortGlobalUIContext_IsMobileApp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsPendingLogout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsPendingLogout() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsPendingLogout");

	Params::FortGlobalUIContext_IsPendingLogout Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsUIVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsUIVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsUIVisible");

	Params::FortGlobalUIContext_IsUIVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.IsUsingGamepad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::IsUsingGamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "IsUsingGamepad");

	Params::FortGlobalUIContext_IsUsingGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.ShouldCloseMenuOnEscape
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::ShouldCloseMenuOnEscape() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShouldCloseMenuOnEscape");

	Params::FortGlobalUIContext_ShouldCloseMenuOnEscape Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.ShouldShowRateWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::ShouldShowRateWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShouldShowRateWidget");

	Params::FortGlobalUIContext_ShouldShowRateWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.ShowVehicleHealthBarOnPlayerHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobalUIContext::ShowVehicleHealthBarOnPlayerHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "ShowVehicleHealthBarOnPlayerHUD");

	Params::FortGlobalUIContext_ShowVehicleHealthBarOnPlayerHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGlobalUIContext.TriggerUIFeedbackEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGlobalUIContext::TriggerUIFeedbackEvent(class FName EventName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGlobalUIContext", "TriggerUIFeedbackEvent");

	Params::FortGlobalUIContext_TriggerUIFeedbackEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.GetTileForObject
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortGridPickerTile*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortGridPickerTile* UFortGridWidgetBase::GetTileForObject(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "GetTileForObject");

	Params::FortGridWidgetBase_GetTileForObject Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGridWidgetBase.GetTiles
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortGridPickerTile*>      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UFortGridPickerTile*> UFortGridWidgetBase::GetTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "GetTiles");

	Params::FortGridWidgetBase_GetTiles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGridWidgetBase.SetClearWidgetType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortGridPickerTile>  InClearWidgetType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetClearWidgetType(TSubclassOf<class UFortGridPickerTile> InClearWidgetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetClearWidgetType");

	Params::FortGridWidgetBase_SetClearWidgetType Parms{};

	Parms.InClearWidgetType = InClearWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetDataProvider
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  Data                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetDataProvider(const TArray<class UObject*>& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetDataProvider");

	Params::FortGridWidgetBase_SetDataProvider Parms{};

	Parms.Data = std::move(Data);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetPeekOverflowTilePercentage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetPeekOverflowTilePercentage(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetPeekOverflowTilePercentage");

	Params::FortGridWidgetBase_SetPeekOverflowTilePercentage Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetTileHeight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Height                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetTileHeight(float Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetTileHeight");

	Params::FortGridWidgetBase_SetTileHeight Parms{};

	Parms.Height = Height;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetTilePadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          Padding                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetTilePadding(const struct FMargin& Padding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetTilePadding");

	Params::FortGridWidgetBase_SetTilePadding Parms{};

	Parms.Padding = std::move(Padding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetTilesAcross
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Across                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetTilesAcross(int32 Across)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetTilesAcross");

	Params::FortGridWidgetBase_SetTilesAcross Parms{};

	Parms.Across = Across;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetTilesDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Down                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetTilesDown(int32 Down)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetTilesDown");

	Params::FortGridWidgetBase_SetTilesDown Parms{};

	Parms.Down = Down;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridWidgetBase.SetTileWidth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridWidgetBase::SetTileWidth(float Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridWidgetBase", "SetTileWidth");

	Params::FortGridWidgetBase_SetTileWidth Parms{};

	Parms.Width = Width;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortGridPickerButton.CreateGridWidget__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UFortGridPickerGrid*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortGridPickerGrid* UFortGridPickerButton::CreateGridWidget__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerButton", "CreateGridWidget__DelegateSignature");

	Params::FortGridPickerButton_CreateGridWidget__DelegateSignature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortGridPickerButton.OnButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UFortGridPickerButton::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerButton", "OnButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortGridPickerButton.OnIsGridPickerOpenChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    IsOpen                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridPickerButton::OnIsGridPickerOpenChanged__DelegateSignature(bool IsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerButton", "OnIsGridPickerOpenChanged__DelegateSignature");

	Params::FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature Parms{};

	Parms.IsOpen = IsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortGridPickerButton.SetIsOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldBeOpen                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridPickerButton::SetIsOpen(const bool ShouldBeOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerButton", "SetIsOpen");

	Params::FortGridPickerButton_SetIsOpen Parms{};

	Parms.ShouldBeOpen = ShouldBeOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.HandleDifferentItemToCompareSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsHostPanel::HandleDifferentItemToCompareSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "HandleDifferentItemToCompareSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsHostPanel.HandleDifferentItemToDetailSet
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsHostPanel::HandleDifferentItemToDetailSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "HandleDifferentItemToDetailSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsHostPanel.HandleInspectModeChanged
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsHostPanel::HandleInspectModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "HandleInspectModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsHostPanel.HandleQuantityOverrideChanged
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsHostPanel::HandleQuantityOverrideChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "HandleQuantityOverrideChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsHostPanel.HandleShouldPreviewUpgradingItemChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemDetailsHostPanel::HandleShouldPreviewUpgradingItemChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "HandleShouldPreviewUpgradingItemChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemDetailsHostPanel.SetInspectMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemInspectionMode                 InspectMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::SetInspectMode(EFortItemInspectionMode InspectMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetInspectMode");

	Params::FortItemDetailsHostPanel_SetInspectMode Parms{};

	Parms.InspectMode = InspectMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.SetItemToCompareWith
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToCompareWith                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::SetItemToCompareWith(const class UFortItem* Param_ItemToCompareWith)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetItemToCompareWith");

	Params::FortItemDetailsHostPanel_SetItemToCompareWith Parms{};

	Parms.Param_ItemToCompareWith = Param_ItemToCompareWith;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.SetItemToDetail
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToDetail                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::SetItemToDetail(const class UFortItem* Param_ItemToDetail)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetItemToDetail");

	Params::FortItemDetailsHostPanel_SetItemToDetail Parms{};

	Parms.Param_ItemToDetail = Param_ItemToDetail;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.SetItemViewContext
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortItemViewContextInterface>Param_ItemViewContext                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::SetItemViewContext(const TScriptInterface<class IFortItemViewContextInterface>& Param_ItemViewContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetItemViewContext");

	Params::FortItemDetailsHostPanel_SetItemViewContext Parms{};

	Parms.Param_ItemViewContext = Param_ItemViewContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.SetQuantityOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_QuantityOverride                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::SetQuantityOverride(const int32 Param_QuantityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetQuantityOverride");

	Params::FortItemDetailsHostPanel_SetQuantityOverride Parms{};

	Parms.Param_QuantityOverride = Param_QuantityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortItemDetailsHostPanel::SetScrollWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "SetScrollWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsHostPanel.ShouldPreviewUpgradingItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsHostPanel::ShouldPreviewUpgradingItem(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsHostPanel", "ShouldPreviewUpgradingItem");

	Params::FortItemDetailsHostPanel_ShouldPreviewUpgradingItem Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementItemDetailsPanel.HandleHasItemMarkedForMulchingChanged
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemDetailsPanel::HandleHasItemMarkedForMulchingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemDetailsPanel", "HandleHasItemMarkedForMulchingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementItemDetailsPanel.HandleHostSet
// (Event, Protected, BlueprintEvent)

void UFortItemManagementItemDetailsPanel::HandleHostSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementItemDetailsPanel", "HandleHostSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGridPickerTile.ForwardClicked
// (Final, Native, Protected, BlueprintCallable)

void UFortGridPickerTile::ForwardClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerTile", "ForwardClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortGridPickerTile.OnClicked
// (Event, Protected, BlueprintEvent)

void UFortGridPickerTile::OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerTile", "OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortGridPickerTile.SetData
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          InData                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGridPickerTile::SetData(class UObject* InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGridPickerTile", "SetData");

	Params::FortGridPickerTile_SetData Parms{};

	Parms.InData = InData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemIcon.SetBrushSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBrushSize                          InBrushSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemIcon::SetBrushSize(EFortBrushSize InBrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "SetBrushSize");

	Params::FortItemIcon_SetBrushSize Parms{};

	Parms.InBrushSize = InBrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemIcon.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemIcon::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "SetColorAndOpacity");

	Params::FortItemIcon_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemIcon.SetItemDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              InItemDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemIcon::SetItemDefinition(class UFortItemDefinition* InItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "SetItemDefinition");

	Params::FortItemIcon_SetItemDefinition Parms{};

	Parms.InItemDefinition = InItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemIcon.SetOpacity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InOpacity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemIcon::SetOpacity(float InOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "SetOpacity");

	Params::FortItemIcon_SetOpacity Parms{};

	Parms.InOpacity = InOpacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemIcon.SetShadowColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemIcon::SetShadowColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "SetShadowColorAndOpacity");

	Params::FortItemIcon_SetShadowColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemIcon.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemIcon::IsLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemIcon", "IsLoading");

	Params::FortItemIcon_IsLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FriendCodeShareButtonBase.OnFriendCodeIssued
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendCodeShareButtonBase::OnFriendCodeIssued(bool bSuccess, const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendCodeShareButtonBase", "OnFriendCodeIssued");

	Params::FriendCodeShareButtonBase_OnFriendCodeIssued Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FriendCodeShareButtonBase.OnNumSharesUpdated
// (Event, Public, BlueprintEvent)

void UFriendCodeShareButtonBase::OnNumSharesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendCodeShareButtonBase", "OnNumSharesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FriendCodeShareButtonBase.OnQueryUnredeemedFriendCodesComplete
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriendCode>              FriendCodes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendCodeShareButtonBase::OnQueryUnredeemedFriendCodesComplete(bool bSuccess, const TArray<struct FFriendCode>& FriendCodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendCodeShareButtonBase", "OnQueryUnredeemedFriendCodesComplete");

	Params::FriendCodeShareButtonBase_OnQueryUnredeemedFriendCodesComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCodes = std::move(FriendCodes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortVideoPlayerWidget.DynamicHandleOnMediaOpened
// (Final, Native, Private)
// Parameters:
// class FString                           OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVideoPlayerWidget::DynamicHandleOnMediaOpened(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVideoPlayerWidget", "DynamicHandleOnMediaOpened");

	Params::FortVideoPlayerWidget_DynamicHandleOnMediaOpened Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortVideoPlayerWidget.DynamicHandleOnOpenMediaFailed
// (Final, Native, Private)
// Parameters:
// class FString                           FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVideoPlayerWidget::DynamicHandleOnOpenMediaFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVideoPlayerWidget", "DynamicHandleOnOpenMediaFailed");

	Params::FortVideoPlayerWidget_DynamicHandleOnOpenMediaFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutGadgetPicker.SetTargetLoadoutSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     LoadoutItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutGadgetPicker::SetTargetLoadoutSlot(const class UFortCampaignHeroLoadoutItem* LoadoutItem, const int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutGadgetPicker", "SetTargetLoadoutSlot");

	Params::FortHeroLoadoutGadgetPicker_SetTargetLoadoutSlot Parms{};

	Parms.LoadoutItem = LoadoutItem;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutHeroPicker.AssociateFilterTabList
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortTabListWidgetBase*           Param_ExternalFilterTabList                            (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::AssociateFilterTabList(const class UFortTabListWidgetBase* Param_ExternalFilterTabList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutHeroPicker", "AssociateFilterTabList");

	Params::FortHeroLoadoutHeroPicker_AssociateFilterTabList Parms{};

	Parms.Param_ExternalFilterTabList = Param_ExternalFilterTabList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutHeroPicker.HandleFilterTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::HandleFilterTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutHeroPicker", "HandleFilterTabSelected");

	Params::FortHeroLoadoutHeroPicker_HandleFilterTabSelected Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutHeroPicker.HandleFilterTabSelectedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::HandleFilterTabSelectedBP(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutHeroPicker", "HandleFilterTabSelectedBP");

	Params::FortHeroLoadoutHeroPicker_HandleFilterTabSelectedBP Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHeroLoadoutHeroPicker.SetTargetLoadoutSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     LoadoutItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotName                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroLoadoutHeroPicker::SetTargetLoadoutSlot(const class UFortCampaignHeroLoadoutItem* LoadoutItem, const class FName& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutHeroPicker", "SetTargetLoadoutSlot");

	Params::FortHeroLoadoutHeroPicker_SetTargetLoadoutSlot Parms{};

	Parms.LoadoutItem = LoadoutItem;
	Parms.SlotName = SlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutPedestal.HandleDifferentHeroLoadoutSlotFocused
// (Final, Native, Private)
// Parameters:
// class FName                             FocusedSlotName                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortHeroLoadoutPedestal::HandleDifferentHeroLoadoutSlotFocused(const class FName FocusedSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutPedestal", "HandleDifferentHeroLoadoutSlotFocused");

	Params::FortHeroLoadoutPedestal_HandleDifferentHeroLoadoutSlotFocused Parms{};

	Parms.FocusedSlotName = FocusedSlotName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutPedestal.HandleDifferentLoadoutViewed
// (Final, Native, Private)
// Parameters:
// class UFortCampaignHeroLoadoutItem*     PreviousLoadout                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortCampaignHeroLoadoutItem*     CurrentLoadout                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortHeroLoadoutPedestal::HandleDifferentLoadoutViewed(const class UFortCampaignHeroLoadoutItem* PreviousLoadout, const class UFortCampaignHeroLoadoutItem* CurrentLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutPedestal", "HandleDifferentLoadoutViewed");

	Params::FortHeroLoadoutPedestal_HandleDifferentLoadoutViewed Parms{};

	Parms.PreviousLoadout = PreviousLoadout;
	Parms.CurrentLoadout = CurrentLoadout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutPedestal.HandleMcpProfilesInitialized
// (Final, Native, Private)

void AFortHeroLoadoutPedestal::HandleMcpProfilesInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutPedestal", "HandleMcpProfilesInitialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroLoadoutPedestal.HandleSlotFocusInUIChanged
// (Event, Protected, BlueprintEvent)

void AFortHeroLoadoutPedestal::HandleSlotFocusInUIChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroLoadoutPedestal", "HandleSlotFocusInUIChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHeroSupportPerkWidget.OnHeroUpdated
// (Event, Public, BlueprintEvent)

void UFortHeroSupportPerkWidget::OnHeroUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "OnHeroUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHeroSupportPerkWidget.OnStateChanged
// (Event, Public, BlueprintEvent)

void UFortHeroSupportPerkWidget::OnStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "OnStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHeroSupportPerkWidget.OnSupportTypeUpdated
// (Event, Public, BlueprintEvent)

void UFortHeroSupportPerkWidget::OnSupportTypeUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "OnSupportTypeUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortHeroSupportPerkWidget.SetHeroToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortHero*                        InHeroToRepresent                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSupportPerkWidget::SetHeroToRepresent(const class UFortHero* InHeroToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "SetHeroToRepresent");

	Params::FortHeroSupportPerkWidget_SetHeroToRepresent Parms{};

	Parms.InHeroToRepresent = InHeroToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroSupportPerkWidget.SetState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortSupportPerkWidgetState             InState                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSupportPerkWidget::SetState(const EFortSupportPerkWidgetState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "SetState");

	Params::FortHeroSupportPerkWidget_SetState Parms{};

	Parms.InState = InState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroSupportPerkWidget.SetSupportTypeToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortSupportBonusType                   InSupportTypeToRepresent                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHeroSupportPerkWidget::SetSupportTypeToRepresent(const EFortSupportBonusType InSupportTypeToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "SetSupportTypeToRepresent");

	Params::FortHeroSupportPerkWidget_SetSupportTypeToRepresent Parms{};

	Parms.InSupportTypeToRepresent = InSupportTypeToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsHeroInSupportSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsHeroInSupportSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsHeroInSupportSlot");

	Params::FortHeroSupportPerkWidget_IsHeroInSupportSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsPerkActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsPerkActive");

	Params::FortHeroSupportPerkWidget_IsPerkActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsPerkEmpty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsPerkEmpty");

	Params::FortHeroSupportPerkWidget_IsPerkEmpty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkHighlighted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsPerkHighlighted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsPerkHighlighted");

	Params::FortHeroSupportPerkWidget_IsPerkHighlighted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkInCorrectSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsPerkInCorrectSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsPerkInCorrectSlot");

	Params::FortHeroSupportPerkWidget_IsPerkInCorrectSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroSupportPerkWidget::IsPerkUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroSupportPerkWidget", "IsPerkUnlocked");

	Params::FortHeroSupportPerkWidget_IsPerkUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDCenterPopupMessageWidget.OnModalDisplayed
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// ECenterPopupMessageStateEnum            NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonActivatablePanel*          ModalPopup                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDCenterPopupMessageWidget::OnModalDisplayed(ECenterPopupMessageStateEnum NewState, class UCommonActivatablePanel* ModalPopup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDCenterPopupMessageWidget", "OnModalDisplayed");

	Params::FortHUDCenterPopupMessageWidget_OnModalDisplayed Parms{};

	Parms.NewState = NewState;
	Parms.ModalPopup = ModalPopup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortHUDCenterPopupMessageWidget.UpdateState
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UFortHUDCenterPopupMessageWidget::UpdateState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDCenterPopupMessageWidget", "UpdateState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDCenterPopupMessageWidget.GetCenterPopupMessageState
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECenterPopupMessageStateEnum            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECenterPopupMessageStateEnum UFortHUDCenterPopupMessageWidget::GetCenterPopupMessageState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDCenterPopupMessageWidget", "GetCenterPopupMessageState");

	Params::FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.AddPointOfInterest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PointOfInterest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             DisplayText                                            (Parm, NativeAccessSpecifierPublic)
// class UTexture2D*                       DisplayImage                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::AddPointOfInterest(class AActor* PointOfInterest, const class FText& DisplayText, class UTexture2D* DisplayImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "AddPointOfInterest");

	Params::FortHUDContext_AddPointOfInterest Parms{};

	Parms.PointOfInterest = PointOfInterest;
	Parms.DisplayText = std::move(DisplayText);
	Parms.DisplayImage = DisplayImage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.EnterCameraMode
// (Final, Native, Public, BlueprintCallable)

void UFortHUDContext::EnterCameraMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "EnterCameraMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.EnterCursorMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CursorModeWidget                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::EnterCursorMode(class FName ActionName, class UUserWidget* CursorModeWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "EnterCursorMode");

	Params::FortHUDContext_EnterCursorMode Parms{};

	Parms.ActionName = ActionName;
	Parms.CursorModeWidget = CursorModeWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.ForwardOnAbilityDecisionWindowStackUpdated
// (Final, Native, Private)

void UFortHUDContext::ForwardOnAbilityDecisionWindowStackUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ForwardOnAbilityDecisionWindowStackUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.ForwardOnMissionsUpdated
// (Final, Native, Private)

void UFortHUDContext::ForwardOnMissionsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ForwardOnMissionsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.ForwardOnNumSurvivorsRescuedChanged
// (Final, Native, Private)
// Parameters:
// int32                                   NumSurvivorsRescued                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::ForwardOnNumSurvivorsRescuedChanged(int32 NumSurvivorsRescued)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ForwardOnNumSurvivorsRescuedChanged");

	Params::FortHUDContext_ForwardOnNumSurvivorsRescuedChanged Parms{};

	Parms.NumSurvivorsRescued = NumSurvivorsRescued;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.ForwardOnWeaponEquipped
// (Final, Native, Private)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::ForwardOnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ForwardOnWeaponEquipped");

	Params::FortHUDContext_ForwardOnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.GetKillerVisualInfoFromDeathReport
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortPlayerDeathReport           DeathReport                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortKillerVisualInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortKillerVisualInfo UFortHUDContext::GetKillerVisualInfoFromDeathReport(const struct FFortPlayerDeathReport& DeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetKillerVisualInfoFromDeathReport");

	Params::FortHUDContext_GetKillerVisualInfoFromDeathReport Parms{};

	Parms.DeathReport = std::move(DeathReport);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.HandleActorFocusedForCreative
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class AActor*                           NewActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::HandleActorFocusedForCreative(class AActor* NewActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleActorFocusedForCreative");

	Params::FortHUDContext_HandleActorFocusedForCreative Parms{};

	Parms.NewActor = NewActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleBuildingModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bEntering                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::HandleBuildingModeChanged(bool bEntering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleBuildingModeChanged");

	Params::FortHUDContext_HandleBuildingModeChanged Parms{};

	Parms.bEntering = bEntering;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleFocusedBuildingHealthChanged
// (Final, Native, Private)

void UFortHUDContext::HandleFocusedBuildingHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleFocusedBuildingHealthChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPawnDied
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FFortPlayerDeathReport           DeathReport                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortHUDContext::HandleLocalPawnDied(const struct FFortPlayerDeathReport& DeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPawnDied");

	Params::FortHUDContext_HandleLocalPawnDied Parms{};

	Parms.DeathReport = std::move(DeathReport);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPawnRevived
// (Final, Native, Private)

void UFortHUDContext::HandleLocalPawnRevived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPawnRevived");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPawnSpawned
// (Final, Native, Private)

void UFortHUDContext::HandleLocalPawnSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPawnSpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPlayerKillsChanged
// (Final, Native, Private)

void UFortHUDContext::HandleLocalPlayerKillsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPlayerKillsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPlayerPlaceChanged
// (Final, Native, Private)

void UFortHUDContext::HandleLocalPlayerPlaceChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPlayerPlaceChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleLocalPlayerViewTargetChanged
// (Final, Native, Private)

void UFortHUDContext::HandleLocalPlayerViewTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleLocalPlayerViewTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandlePersonalVehicleModeChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bEnteredVehicle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::HandlePersonalVehicleModeChanged(bool bEnteredVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandlePersonalVehicleModeChanged");

	Params::FortHUDContext_HandlePersonalVehicleModeChanged Parms{};

	Parms.bEnteredVehicle = bEnteredVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleSpectatorViewTargetChanged
// (Final, Native, Private)

void UFortHUDContext::HandleSpectatorViewTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleSpectatorViewTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.HandleVehicleStateChanged
// (Final, Native, Private)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               NewVehicle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAthenaVehicle*               OldVehicle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::HandleVehicleStateChanged(class AFortPlayerPawn* PlayerPawn, class AFortAthenaVehicle* NewVehicle, class AFortAthenaVehicle* OldVehicle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "HandleVehicleStateChanged");

	Params::FortHUDContext_HandleVehicleStateChanged Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.NewVehicle = NewVehicle;
	Parms.OldVehicle = OldVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.OnClientSettingUpdatedShowViewers
// (Final, Native, Public)

void UFortHUDContext::OnClientSettingUpdatedShowViewers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "OnClientSettingUpdatedShowViewers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.RemovePointOfInterest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PointOfInterest                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::RemovePointOfInterest(class AActor* PointOfInterest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "RemovePointOfInterest");

	Params::FortHUDContext_RemovePointOfInterest Parms{};

	Parms.PointOfInterest = PointOfInterest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.RequestMgmtMenuTab
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::RequestMgmtMenuTab(class FName TabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "RequestMgmtMenuTab");

	Params::FortHUDContext_RequestMgmtMenuTab Parms{};

	Parms.TabName = TabName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.SetCursorModeLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::SetCursorModeLocked(bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "SetCursorModeLocked");

	Params::FortHUDContext_SetCursorModeLocked Parms{};

	Parms.bLocked = bLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.SetHUDElementVisibility
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            HUDElementTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bHideElements                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::SetHUDElementVisibility(const struct FGameplayTagContainer& HUDElementTags, bool bHideElements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "SetHUDElementVisibility");

	Params::FortHUDContext_SetHUDElementVisibility Parms{};

	Parms.HUDElementTags = std::move(HUDElementTags);
	Parms.bHideElements = bHideElements;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.SetIndicatorsAllowed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIndicatorsAllowed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::SetIndicatorsAllowed(bool bIndicatorsAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "SetIndicatorsAllowed");

	Params::FortHUDContext_SetIndicatorsAllowed Parms{};

	Parms.bIndicatorsAllowed = bIndicatorsAllowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.SetIndicatorsState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortIndicatorState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::SetIndicatorsState(EFortIndicatorState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "SetIndicatorsState");

	Params::FortHUDContext_SetIndicatorsState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.SetPreparingMgmtMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreparing                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::SetPreparingMgmtMenu(bool bPreparing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "SetPreparingMgmtMenu");

	Params::FortHUDContext_SetPreparingMgmtMenu Parms{};

	Parms.bPreparing = bPreparing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.TriggerCooldownUpdate
// (Final, Native, Public, BlueprintCallable)

void UFortHUDContext::TriggerCooldownUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "TriggerCooldownUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.UpdateTrapAttachedToBuilding
// (Final, Native, Private)

void UFortHUDContext::UpdateTrapAttachedToBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "UpdateTrapAttachedToBuilding");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDContext.AreHUDElementsVisible
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            HUDElementTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::AreHUDElementsVisible(const struct FGameplayTagContainer& HUDElementTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "AreHUDElementsVisible");

	Params::FortHUDContext_AreHUDElementsVisible Parms{};

	Parms.HUDElementTags = std::move(HUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.AreIndicatorsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::AreIndicatorsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "AreIndicatorsEnabled");

	Params::FortHUDContext_AreIndicatorsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetAccountLevelUpRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    Rewards                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   AccountLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDContext::GetAccountLevelUpRewards(TArray<struct FFortItemQuantityPair>* Rewards, int32 AccountLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetAccountLevelUpRewards");

	Params::FortHUDContext_GetAccountLevelUpRewards Parms{};

	Parms.AccountLevel = AccountLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rewards != nullptr)
		*Rewards = std::move(Parms.Rewards);
}


// Function FortniteUI.FortHUDContext.GetBluGloManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortBluGloManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortBluGloManager* UFortHUDContext::GetBluGloManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetBluGloManager");

	Params::FortHUDContext_GetBluGloManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetCurrentBasicMissionInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortBasicMissionInfo            BasicMissionInfo                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::GetCurrentBasicMissionInfo(struct FFortBasicMissionInfo* BasicMissionInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetCurrentBasicMissionInfo");

	Params::FortHUDContext_GetCurrentBasicMissionInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BasicMissionInfo != nullptr)
		*BasicMissionInfo = std::move(Parms.BasicMissionInfo);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetCurrentFocusedBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingActor* UFortHUDContext::GetCurrentFocusedBuilding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetCurrentFocusedBuilding");

	Params::FortHUDContext_GetCurrentFocusedBuilding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetCurrentHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHero*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHero* UFortHUDContext::GetCurrentHero() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetCurrentHero");

	Params::FortHUDContext_GetCurrentHero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetCurrentHUDState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FFortHUDState              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FFortHUDState UFortHUDContext::GetCurrentHUDState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetCurrentHUDState");

	Params::FortHUDContext_GetCurrentHUDState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetCurrentPrimaryMissionTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UFortHUDContext::GetCurrentPrimaryMissionTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetCurrentPrimaryMissionTags");

	Params::FortHUDContext_GetCurrentPrimaryMissionTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetDifficultyIncreaseRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   DifficultyIncreaseTier                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemDelta>           DifficultyIncreaseRewards                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortHUDContext::GetDifficultyIncreaseRewards(int32 DifficultyIncreaseTier, TArray<struct FFortItemDelta>* DifficultyIncreaseRewards) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetDifficultyIncreaseRewards");

	Params::FortHUDContext_GetDifficultyIncreaseRewards Parms{};

	Parms.DifficultyIncreaseTier = DifficultyIncreaseTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DifficultyIncreaseRewards != nullptr)
		*DifficultyIncreaseRewards = std::move(Parms.DifficultyIncreaseRewards);
}


// Function FortniteUI.FortHUDContext.GetDifficultyIncreaseRewardsDifference
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   BaseDifficultyIncreaseTier                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ComparedDifficultyIncreaseTier                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemDelta>           RewardDeltaInfo                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortHUDContext::GetDifficultyIncreaseRewardsDifference(int32 BaseDifficultyIncreaseTier, int32 ComparedDifficultyIncreaseTier, TArray<struct FFortItemDelta>* RewardDeltaInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetDifficultyIncreaseRewardsDifference");

	Params::FortHUDContext_GetDifficultyIncreaseRewardsDifference Parms{};

	Parms.BaseDifficultyIncreaseTier = BaseDifficultyIncreaseTier;
	Parms.ComparedDifficultyIncreaseTier = ComparedDifficultyIncreaseTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RewardDeltaInfo != nullptr)
		*RewardDeltaInfo = std::move(Parms.RewardDeltaInfo);
}


// Function FortniteUI.FortHUDContext.GetDifficultyIncreaseRewardsTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHUDContext::GetDifficultyIncreaseRewardsTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetDifficultyIncreaseRewardsTier");

	Params::FortHUDContext_GetDifficultyIncreaseRewardsTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetEarnedBadges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FEarnedBadgeEntry>  ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FEarnedBadgeEntry> UFortHUDContext::GetEarnedBadges() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetEarnedBadges");

	Params::FortHUDContext_GetEarnedBadges Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetFocusedBuildingInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortFocusedBuildingInfo         OutBuildingInfo                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::GetFocusedBuildingInfo(struct FFortFocusedBuildingInfo* OutBuildingInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetFocusedBuildingInfo");

	Params::FortHUDContext_GetFocusedBuildingInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBuildingInfo != nullptr)
		*OutBuildingInfo = std::move(Parms.OutBuildingInfo);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetFocusedMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortHUDContext::GetFocusedMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetFocusedMission");

	Params::FortHUDContext_GetFocusedMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetGameStateZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortGameStateZone*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortGameStateZone* UFortHUDContext::GetGameStateZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetGameStateZone");

	Params::FortHUDContext_GetGameStateZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetIndicatorsState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortIndicatorState                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortIndicatorState UFortHUDContext::GetIndicatorsState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetIndicatorsState");

	Params::FortHUDContext_GetIndicatorsState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetMissionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMissionManager*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMissionManager* UFortHUDContext::GetMissionManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetMissionManager");

	Params::FortHUDContext_GetMissionManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetMissionOverviewObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FZoneLoadingScreenHeadingConfig>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FZoneLoadingScreenHeadingConfig> UFortHUDContext::GetMissionOverviewObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetMissionOverviewObjectives");

	Params::FortHUDContext_GetMissionOverviewObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetMissionRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItem*>                MissionRewards                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                MissionAlertRewards                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortHUDContext::GetMissionRewards(TArray<class UFortItem*>* MissionRewards, TArray<class UFortItem*>* MissionAlertRewards) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetMissionRewards");

	Params::FortHUDContext_GetMissionRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MissionRewards != nullptr)
		*MissionRewards = std::move(Parms.MissionRewards);

	if (MissionAlertRewards != nullptr)
		*MissionAlertRewards = std::move(Parms.MissionAlertRewards);
}


// Function FortniteUI.FortHUDContext.GetNumAllowedDifficultyIncreases
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHUDContext::GetNumAllowedDifficultyIncreases() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetNumAllowedDifficultyIncreases");

	Params::FortHUDContext_GetNumAllowedDifficultyIncreases Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetPlayerStateZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateZone*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStateZone* UFortHUDContext::GetPlayerStateZone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetPlayerStateZone");

	Params::FortHUDContext_GetPlayerStateZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetPotentialBadges
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FFortBadgeCount>    ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FFortBadgeCount> UFortHUDContext::GetPotentialBadges() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetPotentialBadges");

	Params::FortHUDContext_GetPotentialBadges Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetScoreDisplayFactor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortHUDContext::GetScoreDisplayFactor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetScoreDisplayFactor");

	Params::FortHUDContext_GetScoreDisplayFactor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetTeamCornerstone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPvPBaseCornerstone*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPvPBaseCornerstone* UFortHUDContext::GetTeamCornerstone(EFortTeam Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetTeamCornerstone");

	Params::FortHUDContext_GetTeamCornerstone Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.GetTimeToDelayEndOfDayZoneWidgetDisplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortHUDContext::GetTimeToDelayEndOfDayZoneWidgetDisplay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "GetTimeToDelayEndOfDayZoneWidgetDisplay");

	Params::FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.IsInCursorMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::IsInCursorMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "IsInCursorMode");

	Params::FortHUDContext_IsInCursorMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.IsInEditMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::IsInEditMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "IsInEditMode");

	Params::FortHUDContext_IsInEditMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.IsPreparingMgmtMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::IsPreparingMgmtMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "IsPreparingMgmtMenu");

	Params::FortHUDContext_IsPreparingMgmtMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.IsShowViewerCountEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::IsShowViewerCountEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "IsShowViewerCountEnabled");

	Params::FortHUDContext_IsShowViewerCountEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.ShouldOnlyShowNextPrevBuildingSlotKeybinds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHUDContext::ShouldOnlyShowNextPrevBuildingSlotKeybinds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ShouldOnlyShowNextPrevBuildingSlotKeybinds");

	Params::FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDContext.ToggleFullScreenMap
// (Final, Native, Public, BlueprintCallable, Const)

void UFortHUDContext::ToggleFullScreenMap() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDContext", "ToggleFullScreenMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDObjectiveSizeInterface.GetHeightEstimate
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortHUDObjectiveSizeInterface::GetHeightEstimate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDObjectiveSizeInterface", "GetHeightEstimate");

	Params::FortHUDObjectiveSizeInterface_GetHeightEstimate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.ClearTarget
// (Final, Native, Private, BlueprintCallable)

void UFortHUDTargetUnderReticleWidget::ClearTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "ClearTarget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.HandleOnHUDTargetUnderReticle
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TScriptInterface<class IFortHUDTargetUnderReticleInterface>NewTarget                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortHUDTargetUnderReticleWidget::HandleOnHUDTargetUnderReticle(TScriptInterface<class IFortHUDTargetUnderReticleInterface>* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "HandleOnHUDTargetUnderReticle");

	Params::FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewTarget != nullptr)
		*NewTarget = Parms.NewTarget;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHUDTargetUnderReticleWidget::OnTargetActorDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "OnTargetActorDestroyed");

	Params::FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetChanged
// (Native, Event, Protected, BlueprintEvent)

void UFortHUDTargetUnderReticleWidget::OnTargetChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "OnTargetChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetDestroyed
// (Native, Event, Protected, BlueprintEvent)

void UFortHUDTargetUnderReticleWidget::OnTargetDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "OnTargetDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetDied
// (Native, Event, Protected, BlueprintEvent)

void UFortHUDTargetUnderReticleWidget::OnTargetDied()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "OnTargetDied");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetHealthChanged
// (Native, Event, Protected, BlueprintEvent)

void UFortHUDTargetUnderReticleWidget::OnTargetHealthChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "OnTargetHealthChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortHUDTargetUnderReticleWidget.Setup
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInKeepTargetUntilNewValidTarget                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InTargetRequiredTags                                   (Parm, NativeAccessSpecifierPublic)

void UFortHUDTargetUnderReticleWidget::Setup(bool bInKeepTargetUntilNewValidTarget, const struct FGameplayTagContainer& InTargetRequiredTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleWidget", "Setup");

	Params::FortHUDTargetUnderReticleWidget_Setup Parms{};

	Parms.bInKeepTargetUntilNewValidTarget = bInKeepTargetUntilNewValidTarget;
	Parms.InTargetRequiredTags = std::move(InTargetRequiredTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortInfoWindow.GetListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortInfoWindow::GetListWidget(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInfoWindow", "GetListWidget");

	Params::FortInfoWindow_GetListWidget Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCardBase.PortBrushSize
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortBrushSize                          BrushSize                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemCardSize                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemCardSize UFortItemCardBase::PortBrushSize(const EFortBrushSize& BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItemCardBase", "PortBrushSize");

	Params::FortItemCardBase_PortBrushSize Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemCategoryIndicator.ClearLabelColorOverride
// (Final, Native, Public, BlueprintCallable)

void UFortItemCategoryIndicator::ClearLabelColorOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCategoryIndicator", "ClearLabelColorOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCategoryIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCategoryIndicator::SetItemToRepresent(const class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCategoryIndicator", "SetItemToRepresent");

	Params::FortItemCategoryIndicator_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCategoryIndicator.SetLabelColorOverride
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InLabelColorOverride                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCategoryIndicator::SetLabelColorOverride(const struct FLinearColor& InLabelColorOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCategoryIndicator", "SetLabelColorOverride");

	Params::FortItemCategoryIndicator_SetLabelColorOverride Parms{};

	Parms.InLabelColorOverride = std::move(InLabelColorOverride);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemCategoryIndicator.SetOrdinalOfCategoryToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCategoryOrdinal                ItemCategoryOrdinal                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCategoryIndicator::SetOrdinalOfCategoryToRepresent(const EFortItemCategoryOrdinal ItemCategoryOrdinal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCategoryIndicator", "SetOrdinalOfCategoryToRepresent");

	Params::FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent Parms{};

	Parms.ItemCategoryOrdinal = ItemCategoryOrdinal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemDetailsModeActivatablePanel.HandleOnActiveWidgetChanged
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ActiveWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ActiveWidgetIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDetailsModeActivatablePanel::HandleOnActiveWidgetChanged(class UWidget* ActiveWidget, int32 ActiveWidgetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDetailsModeActivatablePanel", "HandleOnActiveWidgetChanged");

	Params::FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged Parms{};

	Parms.ActiveWidget = ActiveWidget;
	Parms.ActiveWidgetIndex = ActiveWidgetIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInfoWidget.PopulateUsingItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInfoWidget::PopulateUsingItem(class UFortItem* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInfoWidget", "PopulateUsingItem");

	Params::FortItemInfoWidget_PopulateUsingItem Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemInfoWidget.PopulateUsingItemDefinition
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItemDefinition*              NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInfoWidget::PopulateUsingItemDefinition(class UFortItemDefinition* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInfoWidget", "PopulateUsingItemDefinition");

	Params::FortItemInfoWidget_PopulateUsingItemDefinition Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemInspectionScreen.DoAlterationModification
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectionScreen::DoAlterationModification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "DoAlterationModification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.GetCycleWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItemInspectCycleWidget*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemInspectCycleWidget* UFortItemInspectionScreen::GetCycleWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "GetCycleWidget");

	Params::FortItemInspectionScreen_GetCycleWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemInspectionScreen.HandleDifferentInspectionModeSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleDifferentInspectionModeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleDifferentInspectionModeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemInspectionScreen.HandleDifferentItemToInspectSetBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleDifferentItemToInspectSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleDifferentItemToInspectSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemInspectionScreen.HandleIsPreviewingChanged
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleIsPreviewingChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleIsPreviewingChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemInspectionScreen.HandleItemToInspectChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::HandleItemToInspectChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleItemToInspectChanged");

	Params::FortItemInspectionScreen_HandleItemToInspectChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.HandleItemToInspectChangedBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleItemToInspectChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleItemToInspectChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemInspectionScreen.HandleItemToInspectDestroyed
// (Final, Native, Protected)

void UFortItemInspectionScreen::HandleItemToInspectDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleItemToInspectDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.HandleItemToInspectDestroyedBP
// (Event, Protected, BlueprintEvent)

void UFortItemInspectionScreen::HandleItemToInspectDestroyedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "HandleItemToInspectDestroyedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemInspectionScreen.OpenItemInspect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemInspectionMode                 Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowUpgrading                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowEvolution                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ShouldAllowFavorite                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTemporaryItem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowRarityUpgrading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::OpenItemInspect(class UFortItem* ItemToInspect, EFortItemInspectionMode Mode, bool ShouldAllowUpgrading, bool ShouldAllowEvolution, bool ShouldAllowFavorite, bool IsTemporaryItem, bool bAllowRarityUpgrading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "OpenItemInspect");

	Params::FortItemInspectionScreen_OpenItemInspect Parms{};

	Parms.ItemToInspect = ItemToInspect;
	Parms.Mode = Mode;
	Parms.ShouldAllowUpgrading = ShouldAllowUpgrading;
	Parms.ShouldAllowEvolution = ShouldAllowEvolution;
	Parms.ShouldAllowFavorite = ShouldAllowFavorite;
	Parms.IsTemporaryItem = IsTemporaryItem;
	Parms.bAllowRarityUpgrading = bAllowRarityUpgrading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.SetAttemptingConversion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsAttemptingConversion                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetAttemptingConversion(bool bIsAttemptingConversion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "SetAttemptingConversion");

	Params::FortItemInspectionScreen_SetAttemptingConversion Parms{};

	Parms.bIsAttemptingConversion = bIsAttemptingConversion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.SetInspectionMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortItemInspectionMode                 NewInspectMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetInspectionMode(EFortItemInspectionMode NewInspectMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "SetInspectionMode");

	Params::FortItemInspectionScreen_SetInspectionMode Parms{};

	Parms.NewInspectMode = NewInspectMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.SetItemToRepresent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectionScreen::SetItemToRepresent(class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "SetItemToRepresent");

	Params::FortItemInspectionScreen_SetItemToRepresent Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectionScreen.DoesItemHaveLegacyAlterations
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemInspectionScreen::DoesItemHaveLegacyAlterations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "DoesItemHaveLegacyAlterations");

	Params::FortItemInspectionScreen_DoesItemHaveLegacyAlterations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemInspectionScreen.GetRefundDescriptionText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemInspectionScreen::GetRefundDescriptionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "GetRefundDescriptionText");

	Params::FortItemInspectionScreen_GetRefundDescriptionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemInspectionScreen.GetRefundResultItem
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* UFortItemInspectionScreen::GetRefundResultItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "GetRefundResultItem");

	Params::FortItemInspectionScreen_GetRefundResultItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemInspectionScreen.IsItemSlottedInCollectionBook
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemInspectionScreen::IsItemSlottedInCollectionBook(const class UFortItem* Item) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectionScreen", "IsItemSlottedInCollectionBook");

	Params::FortItemInspectionScreen_IsItemSlottedInCollectionBook Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemInspectCycleWidget.OnItemCycled
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        OldItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OffsetFromPreviousItem                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::OnItemCycled(class UFortItem* OldItem, class UFortItem* NewItem, int32 OffsetFromPreviousItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "OnItemCycled");

	Params::FortItemInspectCycleWidget_OnItemCycled Parms{};

	Parms.OldItem = OldItem;
	Parms.NewItem = NewItem;
	Parms.OffsetFromPreviousItem = OffsetFromPreviousItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemInspectCycleWidget.SelectItemWithOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Offset                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SelectItemWithOffset(int32 Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SelectItemWithOffset");

	Params::FortItemInspectCycleWidget_SelectItemWithOffset Parms{};

	Parms.Offset = Offset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.SelectNextItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SelectNextItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SelectNextItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.SelectPreviousItem
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SelectPreviousItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SelectPreviousItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        NewItemToRepresent                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SetItemToRepresent(const class UFortItem* NewItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SetItemToRepresent");

	Params::FortItemInspectCycleWidget_SetItemToRepresent Parms{};

	Parms.NewItemToRepresent = NewItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.SetOwningItemInspectScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemInspectionScreen*        ItemInspect                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemInspectCycleWidget::SetOwningItemInspectScreen(class UFortItemInspectionScreen* ItemInspect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SetOwningItemInspectScreen");

	Params::FortItemInspectCycleWidget_SetOwningItemInspectScreen Parms{};

	Parms.ItemInspect = ItemInspect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.SetupActionHandlers
// (Final, Native, Public, BlueprintCallable)

void UFortItemInspectCycleWidget::SetupActionHandlers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "SetupActionHandlers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemInspectCycleWidget.GetItemWithOffset_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   IndexOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemInspectCycleWidget::GetItemWithOffset_BP(int32 IndexOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemInspectCycleWidget", "GetItemWithOffset_BP");

	Params::FortItemInspectCycleWidget_GetItemWithOffset_BP Parms{};

	Parms.IndexOffset = IndexOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.CommitCustomFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget::CommitCustomFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "CommitCustomFilters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.DisableAllFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget::DisableAllFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "DisableAllFilters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.EnableAllFilters
// (Final, Native, Protected, BlueprintCallable)

void UFortItemManagementCustomFilterModalWidget::EnableAllFilters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "EnableAllFilters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.OnBeginCommitCustomFilter
// (Event, Protected, BlueprintEvent)

void UFortItemManagementCustomFilterModalWidget::OnBeginCommitCustomFilter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "OnBeginCommitCustomFilter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.OnCustomFilterSetUpdated
// (Event, Protected, BlueprintEvent)

void UFortItemManagementCustomFilterModalWidget::OnCustomFilterSetUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "OnCustomFilterSetUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.OnEndCommitCustomFilter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementCustomFilterModalWidget::OnEndCommitCustomFilter(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "OnEndCommitCustomFilter");

	Params::FortItemManagementCustomFilterModalWidget_OnEndCommitCustomFilter Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.ToggleFilter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortInventoryCustomFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemManagementCustomFilterModalWidget::ToggleFilter(EFortInventoryCustomFilter Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "ToggleFilter");

	Params::FortItemManagementCustomFilterModalWidget_ToggleFilter Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementCustomFilterModalWidget.IsCustomFilterEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInventoryCustomFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemManagementCustomFilterModalWidget::IsCustomFilterEnabled(EFortInventoryCustomFilter Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementCustomFilterModalWidget", "IsCustomFilterEnabled");

	Params::FortItemManagementCustomFilterModalWidget_IsCustomFilterEnabled Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemManagementMulchPanel.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void IFortItemManagementMulchPanel::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchPanel", "HideMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementMulchPanel.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void IFortItemManagementMulchPanel::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchPanel", "NotifyPanelActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementMulchPanel.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void IFortItemManagementMulchPanel::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchPanel", "NotifyPanelDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemManagementMulchPanel.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void IFortItemManagementMulchPanel::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemManagementMulchPanel", "ShowMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFrontendInventoryFilterFunctionLibrary.ToText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortFrontendInventoryFilter            FrontendInventoryFilter                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortFrontendInventoryFilterFunctionLibrary::ToText(EFortFrontendInventoryFilter FrontendInventoryFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFrontendInventoryFilterFunctionLibrary", "ToText");

	Params::FortFrontendInventoryFilterFunctionLibrary_ToText Parms{};

	Parms.FrontendInventoryFilter = FrontendInventoryFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemQuantityListBase.AddListEntry
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItemQuantityListEntryBase*   ListEntry                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListBase::AddListEntry(class UFortItemQuantityListEntryBase* ListEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "AddListEntry");

	Params::FortItemQuantityListBase_AddListEntry Parms{};

	Parms.ListEntry = ListEntry;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortItemQuantityListBase.GetItemDefinitions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UFortItemDefinition*>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItemDefinition*> UFortItemQuantityListBase::GetItemDefinitions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "GetItemDefinitions");

	Params::FortItemQuantityListBase_GetItemDefinitions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortItemQuantityListBase.OnItemInspectModeChanged
// (Event, Public, BlueprintEvent)

void UFortItemQuantityListBase::OnItemInspectModeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "OnItemInspectModeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortItemQuantityListBase.SetItemDefinitionsAndQuantities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ItemQuantityPairs                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ShouldResetWidgets                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListBase::SetItemDefinitionsAndQuantities(const TArray<struct FFortItemQuantityPair>& ItemQuantityPairs, const bool ShouldResetWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "SetItemDefinitionsAndQuantities");

	Params::FortItemQuantityListBase_SetItemDefinitionsAndQuantities Parms{};

	Parms.ItemQuantityPairs = std::move(ItemQuantityPairs);
	Parms.ShouldResetWidgets = ShouldResetWidgets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListBase.SetItemInspectMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemInspectionMode                 InspectMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListBase::SetItemInspectMode(EFortItemInspectionMode InspectMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "SetItemInspectMode");

	Params::FortItemQuantityListBase_SetItemInspectMode Parms{};

	Parms.InspectMode = InspectMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListBase.SetItemInstancesAndQuantities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ItemQuantityPairs                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ShouldResetWidgets                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemQuantityListBase::SetItemInstancesAndQuantities(const TArray<struct FFortItemInstanceQuantityPair>& ItemQuantityPairs, const bool ShouldResetWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "SetItemInstancesAndQuantities");

	Params::FortItemQuantityListBase_SetItemInstancesAndQuantities Parms{};

	Parms.ItemQuantityPairs = std::move(ItemQuantityPairs);
	Parms.ShouldResetWidgets = ShouldResetWidgets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListBase.SetItemToCompareDefinitionsAndQuantities
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ItemToCompareQuantityPairs                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortItemQuantityListBase::SetItemToCompareDefinitionsAndQuantities(const TArray<struct FFortItemQuantityPair>& ItemToCompareQuantityPairs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "SetItemToCompareDefinitionsAndQuantities");

	Params::FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities Parms{};

	Parms.ItemToCompareQuantityPairs = std::move(ItemToCompareQuantityPairs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortItemQuantityListBase.IsEmptyList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemQuantityListBase::IsEmptyList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemQuantityListBase", "IsEmptyList");

	Params::FortItemQuantityListBase_IsEmptyList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortJournalQuestDetails.CanGotoQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanGotoQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "CanGotoQuest");

	Params::FortJournalQuestDetails_CanGotoQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortJournalQuestDetails.CanPartyLeaderPlayQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanPartyLeaderPlayQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "CanPartyLeaderPlayQuest");

	Params::FortJournalQuestDetails_CanPartyLeaderPlayQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortJournalQuestDetails.CanPlayQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortJournalQuestDetails::CanPlayQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "CanPlayQuest");

	Params::FortJournalQuestDetails_CanPlayQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortJournalQuestDetails.GetActiveMissionTileType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTheaterMapTileType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTheaterMapTileType UFortJournalQuestDetails::GetActiveMissionTileType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "GetActiveMissionTileType");

	Params::FortJournalQuestDetails_GetActiveMissionTileType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortJournalQuestDetails.GetFutureObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestObjectiveInfo*>  FutureObjectives                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetFutureObjectives(TArray<class UFortQuestObjectiveInfo*>* FutureObjectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "GetFutureObjectives");

	Params::FortJournalQuestDetails_GetFutureObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FutureObjectives != nullptr)
		*FutureObjectives = std::move(Parms.FutureObjectives);
}


// Function FortniteUI.FortJournalQuestDetails.GetRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>OutRewards                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>OutSelectableRewards                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetRewards(TArray<struct FFortItemInstanceQuantityPair>* OutRewards, TArray<struct FFortItemInstanceQuantityPair>* OutSelectableRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "GetRewards");

	Params::FortJournalQuestDetails_GetRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewards != nullptr)
		*OutRewards = std::move(Parms.OutRewards);

	if (OutSelectableRewards != nullptr)
		*OutSelectableRewards = std::move(Parms.OutSelectableRewards);
}


// Function FortniteUI.FortJournalQuestDetails.GetVisibleObjectives
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestObjectiveInfo*>  VisibleObjectives                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::GetVisibleObjectives(TArray<class UFortQuestObjectiveInfo*>* VisibleObjectives)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "GetVisibleObjectives");

	Params::FortJournalQuestDetails_GetVisibleObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VisibleObjectives != nullptr)
		*VisibleObjectives = std::move(Parms.VisibleObjectives);
}


// Function FortniteUI.FortJournalQuestDetails.HandleCurrentQuestChangedBP
// (Event, Protected, BlueprintEvent)

void UFortJournalQuestDetails::HandleCurrentQuestChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "HandleCurrentQuestChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortJournalQuestDetails.SetCurrentQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   InCurrentQuest                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortJournalQuestDetails::SetCurrentQuest(class UFortQuestItem* InCurrentQuest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestDetails", "SetCurrentQuest");

	Params::FortJournalQuestDetails_SetCurrentQuest Parms{};

	Parms.InCurrentQuest = InCurrentQuest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortJournalQuestProgressBar.GetProgressDetails
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             OutNumerator                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             OutDenominator                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// float                                   OutFraction                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortJournalQuestProgressBar::GetProgressDetails(class FText* OutNumerator, class FText* OutDenominator, float* OutFraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortJournalQuestProgressBar", "GetProgressDetails");

	Params::FortJournalQuestProgressBar_GetProgressDetails Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNumerator != nullptr)
		*OutNumerator = std::move(Parms.OutNumerator);

	if (OutDenominator != nullptr)
		*OutDenominator = std::move(Parms.OutDenominator);

	if (OutFraction != nullptr)
		*OutFraction = Parms.OutFraction;
}


// Function FortniteUI.FortKeybindWidget.SetAxisScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetAxisScale(const float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetAxisScale");

	Params::FortKeybindWidget_SetAxisScale Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetBoundAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewBoundAction                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetBoundAction(class FName NewBoundAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetBoundAction");

	Params::FortKeybindWidget_SetBoundAction Parms{};

	Parms.NewBoundAction = NewBoundAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetBoundKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             NewBoundAction                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetBoundKey(const struct FKey& NewBoundAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetBoundKey");

	Params::FortKeybindWidget_SetBoundKey Parms{};

	Parms.NewBoundAction = std::move(NewBoundAction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetBrushSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBrushSize                          InBrushSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetBrushSize(EFortBrushSize InBrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetBrushSize");

	Params::FortKeybindWidget_SetBrushSize Parms{};

	Parms.InBrushSize = InBrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetForcedHoldKeybind
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InForcedHoldKeybind                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetForcedHoldKeybind(bool InForcedHoldKeybind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetForcedHoldKeybind");

	Params::FortKeybindWidget_SetForcedHoldKeybind Parms{};

	Parms.InForcedHoldKeybind = InForcedHoldKeybind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetForcedHoldKeybindStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortKeybindForcedHoldStatus            InForcedHoldKeybindStatus                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetForcedHoldKeybindStatus(EFortKeybindForcedHoldStatus InForcedHoldKeybindStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetForcedHoldKeybindStatus");

	Params::FortKeybindWidget_SetForcedHoldKeybindStatus Parms{};

	Parms.InForcedHoldKeybindStatus = InForcedHoldKeybindStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetPresetNameOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NewValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetPresetNameOverride(const class FName NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetPresetNameOverride");

	Params::FortKeybindWidget_SetPresetNameOverride Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.SetShowProgressCountDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::SetShowProgressCountDown(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "SetShowProgressCountDown");

	Params::FortKeybindWidget_SetShowProgressCountDown Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.StartHoldProgress
// (Final, Native, Public)
// Parameters:
// class FName                             HoldActionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HoldDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::StartHoldProgress(class FName HoldActionName, float HoldDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "StartHoldProgress");

	Params::FortKeybindWidget_StartHoldProgress Parms{};

	Parms.HoldActionName = HoldActionName;
	Parms.HoldDuration = HoldDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.StopHoldProgress
// (Final, Native, Public)
// Parameters:
// class FName                             HoldActionName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCompletedSuccessfully                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKeybindWidget::StopHoldProgress(class FName HoldActionName, bool bCompletedSuccessfully)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "StopHoldProgress");

	Params::FortKeybindWidget_StopHoldProgress Parms{};

	Parms.HoldActionName = HoldActionName;
	Parms.bCompletedSuccessfully = bCompletedSuccessfully;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.UpdateKeybindWidget
// (Final, Native, Public, BlueprintCallable)

void UFortKeybindWidget::UpdateKeybindWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "UpdateKeybindWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortKeybindWidget.GetBrushForKey
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          InBrushSize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Brush                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKeybindWidget::GetBrushForKey(EFortBrushSize InBrushSize, struct FSlateBrush* Brush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "GetBrushForKey");

	Params::FortKeybindWidget_GetBrushForKey Parms{};

	Parms.InBrushSize = InBrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Brush != nullptr)
		*Brush = std::move(Parms.Brush);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortKeybindWidget.GetBrushSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortBrushSize                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortBrushSize UFortKeybindWidget::GetBrushSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "GetBrushSize");

	Params::FortKeybindWidget_GetBrushSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortKeybindWidget.IsBoundKeyValid
// (Final, Native, Public, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKeybindWidget::IsBoundKeyValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "IsBoundKeyValid");

	Params::FortKeybindWidget_IsBoundKeyValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortKeybindWidget.IsHoldKeybind
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKeybindWidget::IsHoldKeybind() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeybindWidget", "IsHoldKeybind");

	Params::FortKeybindWidget_IsHoldKeybind Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLeaderboardContext.CanShowGlobalLeaderboards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortLeaderboardContext::CanShowGlobalLeaderboards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLeaderboardContext", "CanShowGlobalLeaderboards");

	Params::FortLeaderboardContext_CanShowGlobalLeaderboards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLeaderboardContext.CanShowLeaderboards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortLeaderboardContext::CanShowLeaderboards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLeaderboardContext", "CanShowLeaderboards");

	Params::FortLeaderboardContext_CanShowLeaderboards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLeaderboardContext.CanShowStats
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortLeaderboardContext::CanShowStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLeaderboardContext", "CanShowStats");

	Params::FortLeaderboardContext_CanShowStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLlamaStoreBase.CreateTencentPuchaseOpenModal
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::CreateTencentPuchaseOpenModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreBase", "CreateTencentPuchaseOpenModal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLlamaStoreBase.OnStorePurchaseCompleted
// (Final, Native, Private)

void UFortLlamaStoreBase::OnStorePurchaseCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreBase", "OnStorePurchaseCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLlamaStoreBase.OnStoreStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortStoreState                         NewStoreState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreBase::OnStoreStateChanged(EFortStoreState NewStoreState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreBase", "OnStoreStateChanged");

	Params::FortLlamaStoreBase_OnStoreStateChanged Parms{};

	Parms.NewStoreState = NewStoreState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLlamaStoreBase.SetupFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortLlamaStoreBase::SetupFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreBase", "SetupFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLlamaStoreBase.SwapToCardEnterState
// (Event, Protected, BlueprintEvent)

void UFortLlamaStoreBase::SwapToCardEnterState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreBase", "SwapToCardEnterState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLlamaStoreDetailsBase.OnOfferInfoChanged
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FDateTime                        DateTime                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreDetailsBase::OnOfferInfoChanged(const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreDetailsBase", "OnOfferInfoChanged");

	Params::FortLlamaStoreDetailsBase_OnOfferInfoChanged Parms{};

	Parms.DateTime = std::move(DateTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortLlamaStoreDetailsBase.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortLlamaStoreDetailsBase::SetScrollWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreDetailsBase", "SetScrollWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLlamaStoreDetailsBase.StartUpgrading
// (Event, Public, BlueprintEvent)

void UFortLlamaStoreDetailsBase::StartUpgrading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreDetailsBase", "StartUpgrading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferInfo.CreatePreviewItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* UFortStoreFrontOfferInfo::CreatePreviewItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "CreatePreviewItem");

	Params::FortStoreFrontOfferInfo_CreatePreviewItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetBackground
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortStoreFrontOfferInfo::GetBackground() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetBackground");

	Params::FortStoreFrontOfferInfo_GetBackground Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetBannerOverrideTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetBannerOverrideTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetBannerOverrideTag");

	Params::FortStoreFrontOfferInfo_GetBannerOverrideTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetBaseQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetBaseQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetBaseQuantity");

	Params::FortStoreFrontOfferInfo_GetBaseQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetBonusQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetBonusQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetBonusQuantity");

	Params::FortStoreFrontOfferInfo_GetBonusQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetCategoryText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetCategoryText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetCategoryText");

	Params::FortStoreFrontOfferInfo_GetCategoryText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetCurrencyItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItemDefinition* UFortStoreFrontOfferInfo::GetCurrencyItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetCurrencyItemDefinition");

	Params::FortStoreFrontOfferInfo_GetCurrencyItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetDescription");

	Params::FortStoreFrontOfferInfo_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetDetailsAttributes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortMtxDetailsAttribute> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortMtxDetailsAttribute> UFortStoreFrontOfferInfo::GetDetailsAttributes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetDetailsAttributes");

	Params::FortStoreFrontOfferInfo_GetDetailsAttributes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetDetailsImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UFortStoreFrontOfferInfo::GetDetailsImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetDetailsImage");

	Params::FortStoreFrontOfferInfo_GetDetailsImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetDisplayAssetPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetDisplayAssetPath() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetDisplayAssetPath");

	Params::FortStoreFrontOfferInfo_GetDisplayAssetPath Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetDynamicBundleItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FBundledItemInfo>         Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferInfo::GetDynamicBundleItems(TArray<struct FBundledItemInfo>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetDynamicBundleItems");

	Params::FortStoreFrontOfferInfo_GetDynamicBundleItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetFirstGrantItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItemDefinition* UFortStoreFrontOfferInfo::GetFirstGrantItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetFirstGrantItemDefinition");

	Params::FortStoreFrontOfferInfo_GetFirstGrantItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetFirstGrantQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetFirstGrantQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetFirstGrantQuantity");

	Params::FortStoreFrontOfferInfo_GetFirstGrantQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetForcedGiftBoxTemplateId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetForcedGiftBoxTemplateId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetForcedGiftBoxTemplateId");

	Params::FortStoreFrontOfferInfo_GetForcedGiftBoxTemplateId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetFortStoreOfferCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetFortStoreOfferCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetFortStoreOfferCategory");

	Params::FortStoreFrontOfferInfo_GetFortStoreOfferCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetFortStoreOfferType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortMtxStoreOfferType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMtxStoreOfferType UFortStoreFrontOfferInfo::GetFortStoreOfferType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetFortStoreOfferType");

	Params::FortStoreFrontOfferInfo_GetFortStoreOfferType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGradient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortMtxGradient                 ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortMtxGradient UFortStoreFrontOfferInfo::GetGradient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGradient");

	Params::FortStoreFrontOfferInfo_GetGradient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   GrantedItemIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItemDefinition* UFortStoreFrontOfferInfo::GetGrantedItemDefinition(int32 GrantedItemIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItemDefinition");

	Params::FortStoreFrontOfferInfo_GetGrantedItemDefinition Parms{};

	Parms.GrantedItemIndex = GrantedItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemDefinitions
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAccountItemDefinition*>GrantedItems                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferInfo::GetGrantedItemDefinitions(TArray<class UFortAccountItemDefinition*>* GrantedItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItemDefinitions");

	Params::FortStoreFrontOfferInfo_GetGrantedItemDefinitions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GrantedItems != nullptr)
		*GrantedItems = std::move(Parms.GrantedItems);
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   GrantedItemIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetGrantedItemQuantity(int32 GrantedItemIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItemQuantity");

	Params::FortStoreFrontOfferInfo_GetGrantedItemQuantity Parms{};

	Parms.GrantedItemIndex = GrantedItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantityPair
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   GrantedItemIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemQuantityPair            ItemQuantity                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::GetGrantedItemQuantityPair(int32 GrantedItemIndex, struct FFortItemQuantityPair* ItemQuantity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItemQuantityPair");

	Params::FortStoreFrontOfferInfo_GetGrantedItemQuantityPair Parms{};

	Parms.GrantedItemIndex = GrantedItemIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemQuantity != nullptr)
		*ItemQuantity = std::move(Parms.ItemQuantity);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantityPairs
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bPrioritizeUnowned                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    ItemQuantityPairs                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferInfo::GetGrantedItemQuantityPairs(bool bPrioritizeUnowned, TArray<struct FFortItemQuantityPair>* ItemQuantityPairs) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItemQuantityPairs");

	Params::FortStoreFrontOfferInfo_GetGrantedItemQuantityPairs Parms{};

	Parms.bPrioritizeUnowned = bPrioritizeUnowned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemQuantityPairs != nullptr)
		*ItemQuantityPairs = std::move(Parms.ItemQuantityPairs);
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetGrantedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortItem*>                Items                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferInfo::GetGrantedItems(TArray<class UFortItem*>* Items) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetGrantedItems");

	Params::FortStoreFrontOfferInfo_GetGrantedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Items != nullptr)
		*Items = std::move(Parms.Items);
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetItemOfferCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetItemOfferCount(const class FString& TemplateId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetItemOfferCount");

	Params::FortStoreFrontOfferInfo_GetItemOfferCount Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetItemQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetItemQuantity(const class FString& TemplateId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetItemQuantity");

	Params::FortStoreFrontOfferInfo_GetItemQuantity Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetItemTypeText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetItemTypeText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetItemTypeText");

	Params::FortStoreFrontOfferInfo_GetItemTypeText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetMaxConcurrentPurchases
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetMaxConcurrentPurchases() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetMaxConcurrentPurchases");

	Params::FortStoreFrontOfferInfo_GetMaxConcurrentPurchases Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetMetaAsBool
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           MetaTag                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::GetMetaAsBool(const class FString& MetaTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetMetaAsBool");

	Params::FortStoreFrontOfferInfo_GetMetaAsBool Parms{};

	Parms.MetaTag = std::move(MetaTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetName");

	Params::FortStoreFrontOfferInfo_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetNormalPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetNormalPrice(const int32 PriceIndex, const int32 ItemQuantity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetNormalPrice");

	Params::FortStoreFrontOfferInfo_GetNormalPrice Parms{};

	Parms.PriceIndex = PriceIndex;
	Parms.ItemQuantity = ItemQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetNumGrantedItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetNumGrantedItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetNumGrantedItems");

	Params::FortStoreFrontOfferInfo_GetNumGrantedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetNumRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetNumRequirements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetNumRequirements");

	Params::FortStoreFrontOfferInfo_GetNumRequirements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetOffer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FCatalogOffer              ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FCatalogOffer UFortStoreFrontOfferInfo::GetOffer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetOffer");

	Params::FortStoreFrontOfferInfo_GetOffer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetOfferDisplayAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMtxOfferData*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMtxOfferData* UFortStoreFrontOfferInfo::GetOfferDisplayAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetOfferDisplayAsset");

	Params::FortStoreFrontOfferInfo_GetOfferDisplayAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetOfferId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetOfferId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetOfferId");

	Params::FortStoreFrontOfferInfo_GetOfferId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetOfferType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECatalogOfferType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECatalogOfferType UFortStoreFrontOfferInfo::GetOfferType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetOfferType");

	Params::FortStoreFrontOfferInfo_GetOfferType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetPrerollOfferItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortItemQuantityPair            ItemQuantityPair                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::GetPrerollOfferItem(struct FFortItemQuantityPair* ItemQuantityPair) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetPrerollOfferItem");

	Params::FortStoreFrontOfferInfo_GetPrerollOfferItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemQuantityPair != nullptr)
		*ItemQuantityPair = std::move(Parms.ItemQuantityPair);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetPrerollRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetPrerollRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetPrerollRarity");

	Params::FortStoreFrontOfferInfo_GetPrerollRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetPriceItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequiredItemCount                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItemDefinition* UFortStoreFrontOfferInfo::GetPriceItem(const int32 PriceIndex, int32* RequiredItemCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetPriceItem");

	Params::FortStoreFrontOfferInfo_GetPriceItem Parms{};

	Parms.PriceIndex = PriceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RequiredItemCount != nullptr)
		*RequiredItemCount = Parms.RequiredItemCount;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetQuantityRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetQuantityRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetQuantityRemaining");

	Params::FortStoreFrontOfferInfo_GetQuantityRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetRequirementIdAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RequirementIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortStoreFrontOfferInfo::GetRequirementIdAtIndex(int32 RequirementIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetRequirementIdAtIndex");

	Params::FortStoreFrontOfferInfo_GetRequirementIdAtIndex Parms{};

	Parms.RequirementIndex = RequirementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetRequirementMinQuantityAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RequirementIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetRequirementMinQuantityAtIndex(int32 RequirementIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetRequirementMinQuantityAtIndex");

	Params::FortStoreFrontOfferInfo_GetRequirementMinQuantityAtIndex Parms{};

	Parms.RequirementIndex = RequirementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetRequirementTypeAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RequirementIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECatalogRequirementType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECatalogRequirementType UFortStoreFrontOfferInfo::GetRequirementTypeAtIndex(int32 RequirementIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetRequirementTypeAtIndex");

	Params::FortStoreFrontOfferInfo_GetRequirementTypeAtIndex Parms{};

	Parms.RequirementIndex = RequirementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetSalePrice
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             SalePrice                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::GetSalePrice(const int32 PriceIndex, class FText* SalePrice, const int32 ItemQuantity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetSalePrice");

	Params::FortStoreFrontOfferInfo_GetSalePrice Parms{};

	Parms.PriceIndex = PriceIndex;
	Parms.ItemQuantity = ItemQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SalePrice != nullptr)
		*SalePrice = std::move(Parms.SalePrice);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetSaleText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetSaleText(const int32 PriceIndex, const int32 ItemQuantity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetSaleText");

	Params::FortStoreFrontOfferInfo_GetSaleText Parms{};

	Parms.PriceIndex = PriceIndex;
	Parms.ItemQuantity = ItemQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetSaleType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECatalogSaleType                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECatalogSaleType UFortStoreFrontOfferInfo::GetSaleType(const int32 PriceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetSaleType");

	Params::FortStoreFrontOfferInfo_GetSaleType Parms{};

	Parms.PriceIndex = PriceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetShortDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetShortDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetShortDescription");

	Params::FortStoreFrontOfferInfo_GetShortDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetShortName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortStoreFrontOfferInfo::GetShortName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetShortName");

	Params::FortStoreFrontOfferInfo_GetShortName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetSortPriority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetSortPriority() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetSortPriority");

	Params::FortStoreFrontOfferInfo_GetSortPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetStorefrontName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortStoreFrontOfferInfo::GetStorefrontName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetStorefrontName");

	Params::FortStoreFrontOfferInfo_GetStorefrontName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetTileImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UFortStoreFrontOfferInfo::GetTileImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetTileImage");

	Params::FortStoreFrontOfferInfo_GetTileImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.GetTotalQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreFrontOfferInfo::GetTotalQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "GetTotalQuantity");

	Params::FortStoreFrontOfferInfo_GetTotalQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.HasCatalogOfferName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             CatalogOfferName                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::HasCatalogOfferName(class FText* CatalogOfferName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "HasCatalogOfferName");

	Params::FortStoreFrontOfferInfo_HasCatalogOfferName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CatalogOfferName != nullptr)
		*CatalogOfferName = std::move(Parms.CatalogOfferName);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.HasDisplayAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::HasDisplayAsset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "HasDisplayAsset");

	Params::FortStoreFrontOfferInfo_HasDisplayAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.HasMaxLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   MaxLevel                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::HasMaxLevel(int32* MaxLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "HasMaxLevel");

	Params::FortStoreFrontOfferInfo_HasMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MaxLevel != nullptr)
		*MaxLevel = Parms.MaxLevel;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.HasRequirement
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             RequirementText                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::HasRequirement(class FText* RequirementText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "HasRequirement");

	Params::FortStoreFrontOfferInfo_HasRequirement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RequirementText != nullptr)
		*RequirementText = std::move(Parms.RequirementText);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsCardpack
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsCardpack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsCardpack");

	Params::FortStoreFrontOfferInfo_IsCardpack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsCurrencyVoucher
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsCurrencyVoucher() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsCurrencyVoucher");

	Params::FortStoreFrontOfferInfo_IsCurrencyVoucher Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsExclusive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsExclusive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsExclusive");

	Params::FortStoreFrontOfferInfo_IsExclusive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsGiftable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsGiftable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsGiftable");

	Params::FortStoreFrontOfferInfo_IsGiftable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsGiftOnly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsGiftOnly() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsGiftOnly");

	Params::FortStoreFrontOfferInfo_IsGiftOnly Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsItemDefOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDef                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsItemDefOwned(const class UFortItemDefinition* ItemDef) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsItemDefOwned");

	Params::FortStoreFrontOfferInfo_IsItemDefOwned Parms{};

	Parms.ItemDef = ItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.isItemGrantUnique
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsItemGrantUnique(const class FString& TemplateId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "isItemGrantUnique");

	Params::FortStoreFrontOfferInfo_IsItemGrantUnique Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsItemNew
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ItemToCheck                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsItemNew(const class UFortItem* ItemToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsItemNew");

	Params::FortStoreFrontOfferInfo_IsItemNew Parms{};

	Parms.ItemToCheck = ItemToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsLockedByRequirement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsLockedByRequirement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsLockedByRequirement");

	Params::FortStoreFrontOfferInfo_IsLockedByRequirement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsPrerollOffer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsPrerollOffer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsPrerollOffer");

	Params::FortStoreFrontOfferInfo_IsPrerollOffer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsPriceInMTX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsPriceInMTX(const int32 PriceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsPriceInMTX");

	Params::FortStoreFrontOfferInfo_IsPriceInMTX Parms{};

	Parms.PriceIndex = PriceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsPriceInRealMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsPriceInRealMoney(const int32 PriceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsPriceInRealMoney");

	Params::FortStoreFrontOfferInfo_IsPriceInRealMoney Parms{};

	Parms.PriceIndex = PriceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsRefundable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsRefundable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsRefundable");

	Params::FortStoreFrontOfferInfo_IsRefundable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsUnique
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsUnique() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsUnique");

	Params::FortStoreFrontOfferInfo_IsUnique Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.IsValidOffer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::IsValidOffer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "IsValidOffer");

	Params::FortStoreFrontOfferInfo_IsValidOffer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.MarkPrerollAsSeen
// (Final, Native, Public, BlueprintCallable, Const)

void UFortStoreFrontOfferInfo::MarkPrerollAsSeen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "MarkPrerollAsSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferInfo.OfferHasDenyRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::OfferHasDenyRequirements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "OfferHasDenyRequirements");

	Params::FortStoreFrontOfferInfo_OfferHasDenyRequirements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferInfo.WasPrerollItemSeen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferInfo::WasPrerollItemSeen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferInfo", "WasPrerollItemSeen");

	Params::FortStoreFrontOfferInfo_WasPrerollItemSeen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLlamaStoreOfferInfo.GetMetaAssetIcon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UFortLlamaStoreOfferInfo::GetMetaAssetIcon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferInfo", "GetMetaAssetIcon");

	Params::FortLlamaStoreOfferInfo_GetMetaAssetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLlamaStoreOfferInfo.GetMetaAssetImage
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortLlamaStoreOfferInfo::GetMetaAssetImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferInfo", "GetMetaAssetImage");

	Params::FortLlamaStoreOfferInfo_GetMetaAssetImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLlamaStoreOfferInfo.GetMetaAssetPersonality
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPackPersonality*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPackPersonality* UFortLlamaStoreOfferInfo::GetMetaAssetPersonality() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferInfo", "GetMetaAssetPersonality");

	Params::FortLlamaStoreOfferInfo_GetMetaAssetPersonality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.AddOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortStoreFrontOfferInfo*         InOfferData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferWidgetBase::AddOffer(class UFortStoreFrontOfferInfo* InOfferData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "AddOffer");

	Params::FortStoreFrontOfferWidgetBase_AddOffer Parms{};

	Parms.InOfferData = InOfferData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// (Final, Native, Private)
// Parameters:
// struct FFortPublicAccountInfo           NewInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferWidgetBase::HandleCurrentlyViewedAccountInfoChanged(const struct FFortPublicAccountInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "HandleCurrentlyViewedAccountInfoChanged");

	Params::FortStoreFrontOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.OnOfferAdded
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferWidgetBase::OnOfferAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "OnOfferAdded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.OnOfferSet
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferWidgetBase::OnOfferSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "OnOfferSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.OnUpdateStatus
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferWidgetBase::OnUpdateStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "OnUpdateStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.RemoveAllOffers
// (Final, Native, Public, BlueprintCallable)

void UFortStoreFrontOfferWidgetBase::RemoveAllOffers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "RemoveAllOffers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.SetupOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortStoreFrontOfferInfo*         InOfferData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferWidgetBase::SetupOffer(class UFortStoreFrontOfferInfo* InOfferData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "SetupOffer");

	Params::FortStoreFrontOfferWidgetBase_SetupOffer Parms{};

	Parms.InOfferData = InOfferData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferWidgetBase.GetOfferInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreFrontOfferInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreFrontOfferInfo* UFortStoreFrontOfferWidgetBase::GetOfferInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferWidgetBase", "GetOfferInfo");

	Params::FortStoreFrontOfferWidgetBase_GetOfferInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortLlamaStoreOfferWidgetBase.OnOfferShown
// (Event, Public, BlueprintEvent)

void UFortLlamaStoreOfferWidgetBase::OnOfferShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferWidgetBase", "OnOfferShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortLlamaStoreOfferWidgetBase.RequestPurchase
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortLlamaStoreOfferWidgetBase::RequestPurchase(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferWidgetBase", "RequestPurchase");

	Params::FortLlamaStoreOfferWidgetBase_RequestPurchase Parms{};

	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortLlamaStoreOfferWidgetBase.RequestToInspect
// (Final, Native, Protected, BlueprintCallable)

void UFortLlamaStoreOfferWidgetBase::RequestToInspect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLlamaStoreOfferWidgetBase", "RequestToInspect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMainTabsScreenBase.ConstructTabs
// (Final, Native, Protected, BlueprintCallable)

void UFortMainTabsScreenBase::ConstructTabs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMainTabsScreenBase", "ConstructTabs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMainTabsScreenBase.HandleFeatureNavigateRequest
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          Feature                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMainTabsScreenBase::HandleFeatureNavigateRequest(EFortUIFeature Feature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMainTabsScreenBase", "HandleFeatureNavigateRequest");

	Params::FortMainTabsScreenBase_HandleFeatureNavigateRequest Parms{};

	Parms.Feature = Feature;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMainTabsScreenBase.HandleFeatureStateChanged
// (Final, Native, Protected)
// Parameters:
// EFortUIFeature                          ChangedFeature                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIFeatureStateReason               Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMainTabsScreenBase::HandleFeatureStateChanged(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMainTabsScreenBase", "HandleFeatureStateChanged");

	Params::FortMainTabsScreenBase_HandleFeatureStateChanged Parms{};

	Parms.ChangedFeature = ChangedFeature;
	Parms.NewState = NewState;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMainTabsScreenBase.HandleMainTabCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonButton*                    TabButton                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMainTabsScreenBase::HandleMainTabCreated(class FName TabNameID, class UCommonButton* TabButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMainTabsScreenBase", "HandleMainTabCreated");

	Params::FortMainTabsScreenBase_HandleMainTabCreated Parms{};

	Parms.TabNameID = TabNameID;
	Parms.TabButton = TabButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMainTabsScreenBase.HandleMainTabSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMainTabsScreenBase::HandleMainTabSelected(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMainTabsScreenBase", "HandleMainTabSelected");

	Params::FortMainTabsScreenBase_HandleMainTabSelected Parms{};

	Parms.TabNameID = TabNameID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidget.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsVoteActive                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidget::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "OnActiveVoteChangedBP");

	Params::FortMissionActivationWidget_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidget.OnMultiplayerChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidget::OnMultiplayerChangedBP(bool bIsMultiplayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "OnMultiplayerChangedBP");

	Params::FortMissionActivationWidget_OnMultiplayerChangedBP Parms{};

	Parms.bIsMultiplayer = bIsMultiplayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidget.OnStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortMissionActivationWidgetState       ActiveState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMissionActivationWidgetState       PreviousState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidget::OnStateUpdated(EFortMissionActivationWidgetState ActiveState, EFortMissionActivationWidgetState PreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "OnStateUpdated");

	Params::FortMissionActivationWidget_OnStateUpdated Parms{};

	Parms.ActiveState = ActiveState;
	Parms.PreviousState = PreviousState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidget.OnVoteLockoutChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionActivationWidget::OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "OnVoteLockoutChangedBP");

	Params::FortMissionActivationWidget_OnVoteLockoutChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMissionActivationWidget.RequestDefaultState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidget::RequestDefaultState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "RequestDefaultState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationWidget.RequestDifficultyIncreaseState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidget::RequestDifficultyIncreaseState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "RequestDifficultyIncreaseState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationWidget.RequestStartObjectiveState
// (Final, Native, Public, BlueprintCallable)

void UFortMissionActivationWidget::RequestStartObjectiveState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "RequestStartObjectiveState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionActivationWidget.GetCurrentState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortMissionActivationWidgetState       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMissionActivationWidgetState UFortMissionActivationWidget::GetCurrentState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionActivationWidget", "GetCurrentState");

	Params::FortMissionActivationWidget_GetCurrentState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionSelect.CanCaptureAcceptInput
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionSelect::CanCaptureAcceptInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionSelect", "CanCaptureAcceptInput");

	Params::FortMissionSelect_CanCaptureAcceptInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionSelect.NavigateMissionTiles
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EUINavigation                           Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionSelect::NavigateMissionTiles(EUINavigation Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionSelect", "NavigateMissionTiles");

	Params::FortMissionSelect_NavigateMissionTiles Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMissionTracker.HandleDebugHUDObjectiveHeightChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsDebugging                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTracker::HandleDebugHUDObjectiveHeightChanged(bool bIsDebugging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTracker", "HandleDebugHUDObjectiveHeightChanged");

	Params::FortMissionTracker_HandleDebugHUDObjectiveHeightChanged Parms{};

	Parms.bIsDebugging = bIsDebugging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTracker.HandleSizeEstimateChanged
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ChangedElement                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTracker::HandleSizeEstimateChanged(class UObject* ChangedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTracker", "HandleSizeEstimateChanged");

	Params::FortMissionTracker_HandleSizeEstimateChanged Parms{};

	Parms.ChangedElement = ChangedElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTracker.RefreshSizeEstimate
// (Final, Native, Protected)

void UFortMissionTracker::RefreshSizeEstimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTracker", "RefreshSizeEstimate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerEntry.HandleMissionInfoSet
// (Final, Native, Protected)

void UFortMissionTrackerEntry::HandleMissionInfoSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerEntry", "HandleMissionInfoSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerEntry.HandleObjectivesChanged
// (Final, Native, Protected)

void UFortMissionTrackerEntry::HandleObjectivesChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerEntry", "HandleObjectivesChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerEntry.OnMissionSet
// (Event, Protected, BlueprintEvent)

void UFortMissionTrackerEntry::OnMissionSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerEntry", "OnMissionSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMissionTrackerEntry.UpdateVisibility
// (Final, Native, Protected)

void UFortMissionTrackerEntry::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerEntry", "UpdateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerList.HandleMissionsUpdated
// (Final, Native, Protected)

void UFortMissionTrackerList::HandleMissionsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerList", "HandleMissionsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerList.HandleSizeEstimateChanged
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ChangedElement                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTrackerList::HandleSizeEstimateChanged(class UObject* ChangedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerList", "HandleSizeEstimateChanged");

	Params::FortMissionTrackerList_HandleSizeEstimateChanged Parms{};

	Parms.ChangedElement = ChangedElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerList.UpdateVisibility
// (Final, Native, Protected)

void UFortMissionTrackerList::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerList", "UpdateVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerSubEntry.NotifyVisibilityChanged
// (Final, Native, Protected, BlueprintCallable)

void UFortMissionTrackerSubEntry::NotifyVisibilityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerSubEntry", "NotifyVisibilityChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMissionTrackerSubEntry.OnHiddenByHeightConstraintChanged
// (Event, Protected, BlueprintEvent)

void UFortMissionTrackerSubEntry::OnHiddenByHeightConstraintChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerSubEntry", "OnHiddenByHeightConstraintChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMissionTrackerSubEntry.OnObjectiveSet
// (Event, Protected, BlueprintEvent)

void UFortMissionTrackerSubEntry::OnObjectiveSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTrackerSubEntry", "OnObjectiveSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortMovieWidget.MediaDimensionsUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NewWidth                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovieWidget::MediaDimensionsUpdated(float NewWidth, float NewHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "MediaDimensionsUpdated");

	Params::FortMovieWidget_MediaDimensionsUpdated Parms{};

	Parms.NewWidth = NewWidth;
	Parms.NewHeight = NewHeight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortMovieWidget.RequestPlayMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldRewind                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMovieWidget::RequestPlayMovie(bool bShouldRewind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "RequestPlayMovie");

	Params::FortMovieWidget_RequestPlayMovie Parms{};

	Parms.bShouldRewind = bShouldRewind;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMovieWidget.RequestStopMovie
// (Final, Native, Public, BlueprintCallable)

void UFortMovieWidget::RequestStopMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "RequestStopMovie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortMovieWidget.SetMediaSource
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UMediaSource*                     InMediaSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FMediaPlayerOptions              PlayerOptions                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bPlayOnOpen                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovieWidget::SetMediaSource(class UMediaSource* InMediaSource, const struct FMediaPlayerOptions& PlayerOptions, bool bPlayOnOpen, bool bLooping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "SetMediaSource");

	Params::FortMovieWidget_SetMediaSource Parms{};

	Parms.InMediaSource = InMediaSource;
	Parms.PlayerOptions = std::move(PlayerOptions);
	Parms.bPlayOnOpen = bPlayOnOpen;
	Parms.bLooping = bLooping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMovieWidget.GetMediaPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaPlayer*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaPlayer* UFortMovieWidget::GetMediaPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "GetMediaPlayer");

	Params::FortMovieWidget_GetMediaPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMovieWidget.GetMediaSoundComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSoundComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSoundComponent* UFortMovieWidget::GetMediaSoundComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "GetMediaSoundComponent");

	Params::FortMovieWidget_GetMediaSoundComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMovieWidget.GetMediaTexture
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaTexture*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaTexture* UFortMovieWidget::GetMediaTexture() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "GetMediaTexture");

	Params::FortMovieWidget_GetMediaTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMovieWidget.HasPlayerForSource
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSource*                     InMediaSource                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovieWidget::HasPlayerForSource(class UMediaSource* InMediaSource) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovieWidget", "HasPlayerForSource");

	Params::FortMovieWidget_HasPlayerForSource Parms{};

	Parms.InMediaSource = InMediaSource;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortMulchItemTileButton.HandleItemChanged_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        NewItem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMulchItemTileButton::HandleItemChanged_BP(class UFortItem* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMulchItemTileButton", "HandleItemChanged_BP");

	Params::FortMulchItemTileButton_HandleItemChanged_BP Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortNumericTextBlock.DirectlySet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNumericTextBlock::DirectlySet(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNumericTextBlock", "DirectlySet");

	Params::FortNumericTextBlock_DirectlySet Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortNumericTextBlock.InterpolateSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InUpdateLength                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InReportEndEarly                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNumericTextBlock::InterpolateSet(int32 InValue, float InUpdateLength, float InReportEndEarly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNumericTextBlock", "InterpolateSet");

	Params::FortNumericTextBlock_InterpolateSet Parms{};

	Parms.InValue = InValue;
	Parms.InUpdateLength = InUpdateLength;
	Parms.InReportEndEarly = InReportEndEarly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortNumericTextBlock.GetCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortNumericTextBlock::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNumericTextBlock", "GetCurrentValue");

	Params::FortNumericTextBlock_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortNumericTextBlock.IsInterpolatingNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortNumericTextBlock::IsInterpolatingNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNumericTextBlock", "IsInterpolatingNumber");

	Params::FortNumericTextBlock_IsInterpolatingNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortOutpostStorageItemPicker.UseFilter
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostStorageItemPicker::UseFilter(EFortItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostStorageItemPicker", "UseFilter");

	Params::FortOutpostStorageItemPicker_UseFilter Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortOutpostStorageItemPicker.UseFilters
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TArray<EFortItemType>                   ItemTypes                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortOutpostStorageItemPicker::UseFilters(const TArray<EFortItemType>& ItemTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostStorageItemPicker", "UseFilters");

	Params::FortOutpostStorageItemPicker_UseFilters Parms{};

	Parms.ItemTypes = std::move(ItemTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPCBInfoPannel.CmsDataRead
// (Event, Public, BlueprintEvent)

void UFortPCBInfoPannel::CmsDataRead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPCBInfoPannel", "CmsDataRead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPCBInfoPannel.GetPCBDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortPCBInfoPannel::GetPCBDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPCBInfoPannel", "GetPCBDescription");

	Params::FortPCBInfoPannel_GetPCBDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPCBInfoPannel.GetPCBHeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortPCBInfoPannel::GetPCBHeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPCBInfoPannel", "GetPCBHeader");

	Params::FortPCBInfoPannel_GetPCBHeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPCBInfoPannel.ShouldDisplayPCBData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPCBInfoPannel::ShouldDisplayPCBData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPCBInfoPannel", "ShouldDisplayPCBData");

	Params::FortPCBInfoPannel_ShouldDisplayPCBData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortPerkTierWidget_NUI.OnGeneratePerk
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortUIPerk                      Perk                                                   (Parm, NativeAccessSpecifierPublic)
// class UFortPerkWidget_NUI*              PerkWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPerkTierWidget_NUI::OnGeneratePerk(const struct FFortUIPerk& Perk, class UFortPerkWidget_NUI* PerkWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkTierWidget_NUI", "OnGeneratePerk");

	Params::FortPerkTierWidget_NUI_OnGeneratePerk Parms{};

	Parms.Perk = std::move(Perk);
	Parms.PerkWidget = PerkWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPerkTierWidget_NUI.ProcessPerks
// (Final, Native, Public, BlueprintCallable)

void UFortPerkTierWidget_NUI::ProcessPerks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPerkTierWidget_NUI", "ProcessPerks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.CommitChosenIconAndColor
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerProfileBannerEditor::CommitChosenIconAndColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "CommitChosenIconAndColor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.HandleEditorActivated
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerProfileBannerEditor::HandleEditorActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "HandleEditorActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.HandleEditorDeactivated
// (Final, Native, Protected, BlueprintCallable)

void UFortPlayerProfileBannerEditor::HandleEditorDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "HandleEditorDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.OnShowNextCategory
// (Event, Protected, BlueprintEvent)

void UFortPlayerProfileBannerEditor::OnShowNextCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "OnShowNextCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPlayerProfileBannerEditor.OnShowPreviousCategory
// (Event, Protected, BlueprintEvent)

void UFortPlayerProfileBannerEditor::OnShowPreviousCategory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "OnShowPreviousCategory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPlayerProfileBannerEditor.RefreshBannerEditor
// (Native, Event, Protected, BlueprintEvent)

void UFortPlayerProfileBannerEditor::RefreshBannerEditor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "RefreshBannerEditor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.SetBannerColor
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Color                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerProfileBannerEditor::SetBannerColor(const class FName& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "SetBannerColor");

	Params::FortPlayerProfileBannerEditor_SetBannerColor Parms{};

	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPlayerProfileBannerEditor.SetBannerIcon
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             Icon                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerProfileBannerEditor::SetBannerIcon(const class FName& Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerProfileBannerEditor", "SetBannerIcon");

	Params::FortPlayerProfileBannerEditor_SetBannerIcon Parms{};

	Parms.Icon = Icon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPrivacyBase.AddPrivacyButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonButton*                    PrivacyButton                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPartyType                              PartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPrivacyBase::AddPrivacyButton(class UCommonButton* PrivacyButton, EPartyType PartyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPrivacyBase", "AddPrivacyButton");

	Params::FortPrivacyBase_AddPrivacyButton Parms{};

	Parms.PrivacyButton = PrivacyButton;
	Parms.PartyType = PartyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPrivacyBase.ApplyPrivacySetting
// (Final, Native, Public, BlueprintCallable)

void UFortPrivacyBase::ApplyPrivacySetting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPrivacyBase", "ApplyPrivacySetting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPrivacyBase.HandlePrivacyButtonSelected
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedPrivacyButton                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPrivacyBase::HandlePrivacyButtonSelected(class UCommonButton* SelectedPrivacyButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPrivacyBase", "HandlePrivacyButtonSelected");

	Params::FortPrivacyBase_HandlePrivacyButtonSelected Parms{};

	Parms.SelectedPrivacyButton = SelectedPrivacyButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortProgressModal.SetDescription
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InDescription                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressModal::SetDescription(const class FText& InDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressModal", "SetDescription");

	Params::FortProgressModal_SetDescription Parms{};

	Parms.InDescription = std::move(InDescription);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortProgressModal.SetIcon
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      InIcon                                                 (Parm, NativeAccessSpecifierPublic)

void UFortProgressModal::SetIcon(const struct FSlateBrush& InIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressModal", "SetIcon");

	Params::FortProgressModal_SetIcon Parms{};

	Parms.InIcon = std::move(InIcon);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortProgressModal.SetTitle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InTitle                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortProgressModal::SetTitle(const class FText& InTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProgressModal", "SetTitle");

	Params::FortProgressModal_SetTitle Parms{};

	Parms.InTitle = std::move(InTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.ConsumeComplete
// (Final, Native, Protected, BlueprintCallable)

void UFortPurchaseHistoryScreen::ConsumeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "ConsumeComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPurchaseHistoryScreen.HandlePreviousStepAction
// (Final, Native, Private, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::HandlePreviousStepAction(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "HandlePreviousStepAction");

	Params::FortPurchaseHistoryScreen_HandlePreviousStepAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortPurchaseHistoryScreen.HandleTabButtonClicked
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EPurchaseReturnStep                     ClickedStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::HandleTabButtonClicked(EPurchaseReturnStep ClickedStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "HandleTabButtonClicked");

	Params::FortPurchaseHistoryScreen_HandleTabButtonClicked Parms{};

	Parms.ClickedStep = ClickedStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortPurchaseHistoryScreen.InitializeTickets
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumTicketsAvailableToUse                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::InitializeTickets(int32 NumTicketsAvailableToUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "InitializeTickets");

	Params::FortPurchaseHistoryScreen_InitializeTickets Parms{};

	Parms.NumTicketsAvailableToUse = NumTicketsAvailableToUse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.OnBeginRefundSubmission
// (Event, Protected, BlueprintEvent)

void UFortPurchaseHistoryScreen::OnBeginRefundSubmission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnBeginRefundSubmission");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPurchaseHistoryScreen.OnEndRefundSubmission
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MtxRefunded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              ReturnedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TicketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnEndRefundSubmission(bool bSuccess, int32 MtxRefunded, class UFortItemDefinition* ReturnedItem, int32 TicketIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnEndRefundSubmission");

	Params::FortPurchaseHistoryScreen_OnEndRefundSubmission Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MtxRefunded = MtxRefunded;
	Parms.ReturnedItem = ReturnedItem;
	Parms.TicketIndex = TicketIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.OnItemRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FMtxPurchaseHistory              PurchaseHistory                                        (Parm, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnItemRefresh(const struct FMtxPurchaseHistory& PurchaseHistory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnItemRefresh");

	Params::FortPurchaseHistoryScreen_OnItemRefresh Parms{};

	Parms.PurchaseHistory = std::move(PurchaseHistory);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.OnNoPurchasesAvailable
// (Event, Protected, BlueprintEvent)

void UFortPurchaseHistoryScreen::OnNoPurchasesAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnNoPurchasesAvailable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortPurchaseHistoryScreen.OnPopulateView
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPurchaseReturnStep                     CurrentStep                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::OnPopulateView(EPurchaseReturnStep CurrentStep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "OnPopulateView");

	Params::FortPurchaseHistoryScreen_OnPopulateView Parms{};

	Parms.CurrentStep = CurrentStep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.UpdateItemList
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class UCommonTextBlock*>         ItemsToReturn                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortPurchaseHistoryScreen::UpdateItemList(const TArray<class UCommonTextBlock*>& ItemsToReturn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "UpdateItemList");

	Params::FortPurchaseHistoryScreen_UpdateItemList Parms{};

	Parms.ItemsToReturn = std::move(ItemsToReturn);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortPurchaseHistoryScreen.GetCurrentStep
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPurchaseReturnStep                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPurchaseReturnStep UFortPurchaseHistoryScreen::GetCurrentStep() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPurchaseHistoryScreen", "GetCurrentStep");

	Params::FortPurchaseHistoryScreen_GetCurrentStep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestMapQuestTile.HandleQuestDataChangedBP
// (Event, Public, BlueprintEvent)

void UFortQuestMapQuestTile::HandleQuestDataChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapQuestTile", "HandleQuestDataChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestMapQuestTile.HandleSelectedChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Selected                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestMapQuestTile::HandleSelectedChange(bool Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapQuestTile", "HandleSelectedChange");

	Params::FortQuestMapQuestTile_HandleSelectedChange Parms{};

	Parms.Selected = Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestMapQuestTile.GetQuestNodeData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortQuestMapNode                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortQuestMapNode UFortQuestMapQuestTile::GetQuestNodeData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestMapQuestTile", "GetQuestNodeData");

	Params::FortQuestMapQuestTile_GetQuestNodeData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestObjectiveEntry.ObjectiveInfoSet
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestObjectiveInfo*          ObjectiveInfo                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsAnnouncement                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestObjectiveEntry::ObjectiveInfoSet(const class UFortQuestObjectiveInfo* ObjectiveInfo, bool IsAnnouncement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveEntry", "ObjectiveInfoSet");

	Params::FortQuestObjectiveEntry_ObjectiveInfoSet Parms{};

	Parms.ObjectiveInfo = ObjectiveInfo;
	Parms.IsAnnouncement = IsAnnouncement;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestObjectiveEntry.StartDisplayingObjective
// (Event, Public, BlueprintEvent)

void UFortQuestObjectiveEntry::StartDisplayingObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveEntry", "StartDisplayingObjective");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTrackerEntry.HandleHUDObjectiveCompletion
// (Final, Native, Protected)
// Parameters:
// class UFortQuestObjectiveInfo*          QuestObjective                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTrackerEntry::HandleHUDObjectiveCompletion(class UFortQuestObjectiveInfo* QuestObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerEntry", "HandleHUDObjectiveCompletion");

	Params::FortQuestTrackerEntry_HandleHUDObjectiveCompletion Parms{};

	Parms.QuestObjective = QuestObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerEntry.OnSetup
// (Event, Protected, BlueprintEvent)

void UFortQuestTrackerEntry::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerEntry", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTrackerList.GetQuestsToDisplay
// (Event, Protected, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortQuestItem*> UFortQuestTrackerList::GetQuestsToDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerList", "GetQuestsToDisplay");

	Params::FortQuestTrackerList_GetQuestsToDisplay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuestTrackerList.HandleHUDFinalObjectiveHidden
// (Final, Native, Protected)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTrackerList::HandleHUDFinalObjectiveHidden(class UFortQuestItem* QuestItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerList", "HandleHUDFinalObjectiveHidden");

	Params::FortQuestTrackerList_HandleHUDFinalObjectiveHidden Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerList.HandlePinnedQuestsChanged
// (Final, Native, Protected)

void UFortQuestTrackerList::HandlePinnedQuestsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerList", "HandlePinnedQuestsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerList.HandleQuestsUpdated
// (Final, Native, Protected)

void UFortQuestTrackerList::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerList", "HandleQuestsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerList.HandleSizeEstimateChanged
// (Final, Native, Protected)
// Parameters:
// class UObject*                          ChangedElement                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestTrackerList::HandleSizeEstimateChanged(class UObject* ChangedElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerList", "HandleSizeEstimateChanged");

	Params::FortQuestTrackerList_HandleSizeEstimateChanged Parms{};

	Parms.ChangedElement = ChangedElement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerSubEntry.HandleQuestsUpdated
// (Final, Native, Protected)

void UFortQuestTrackerSubEntry::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerSubEntry", "HandleQuestsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerSubEntry.NotifyCompletionAnimationFinished
// (Final, Native, Protected, BlueprintCallable)

void UFortQuestTrackerSubEntry::NotifyCompletionAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerSubEntry", "NotifyCompletionAnimationFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestTrackerSubEntry.OnPlayObjectiveCompletedAnimation
// (Event, Protected, BlueprintEvent)

void UFortQuestTrackerSubEntry::OnPlayObjectiveCompletedAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerSubEntry", "OnPlayObjectiveCompletedAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTrackerSubEntry.OnQuestsUpdated
// (Event, Protected, BlueprintEvent)

void UFortQuestTrackerSubEntry::OnQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerSubEntry", "OnQuestsUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestTrackerSubEntry.OnSetup
// (Event, Protected, BlueprintEvent)

void UFortQuestTrackerSubEntry::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestTrackerSubEntry", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuestUpdatesLog.CreateAnnouncementUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortQuestObjectiveInfo*          QuestItemToCheck                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdatesLog::CreateAnnouncementUpdate(const class UFortQuestObjectiveInfo* QuestItemToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdatesLog", "CreateAnnouncementUpdate");

	Params::FortQuestUpdatesLog_CreateAnnouncementUpdate Parms{};

	Parms.QuestItemToCheck = QuestItemToCheck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuestUpdatesLog.HandleDisplayDynamicQuestUpdate
// (Final, Native, Protected)
// Parameters:
// class UFortQuestObjectiveInfo*          QuestObjective                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DisplayStatusUpdate                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DisplayAnnouncementUpdate                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdatesLog::HandleDisplayDynamicQuestUpdate(const class UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdatesLog", "HandleDisplayDynamicQuestUpdate");

	Params::FortQuestUpdatesLog_HandleDisplayDynamicQuestUpdate Parms{};

	Parms.QuestObjective = QuestObjective;
	Parms.DisplayStatusUpdate = DisplayStatusUpdate;
	Parms.DisplayAnnouncementUpdate = DisplayAnnouncementUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuestUpdatesLog.HandleQuestUpdateFinished
// (Final, Native, Protected)
// Parameters:
// class UFortQuestUpdateEntry*            QuestEntryFinished                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestUpdatesLog::HandleQuestUpdateFinished(class UFortQuestUpdateEntry* QuestEntryFinished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestUpdatesLog", "HandleQuestUpdateFinished");

	Params::FortQuestUpdatesLog_HandleQuestUpdateFinished Parms{};

	Parms.QuestEntryFinished = QuestEntryFinished;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.GetKeyBindingAction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortQuickBarSlotBase::GetKeyBindingAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "GetKeyBindingAction");

	Params::FortQuickBarSlotBase_GetKeyBindingAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuickBarSlotBase.GetKeyBindingActionGamepad
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortQuickBarSlotBase::GetKeyBindingActionGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "GetKeyBindingActionGamepad");

	Params::FortQuickBarSlotBase_GetKeyBindingActionGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuickBarSlotBase.GetKeyBindingActionKeyboard
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortQuickBarSlotBase::GetKeyBindingActionKeyboard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "GetKeyBindingActionKeyboard");

	Params::FortQuickBarSlotBase_GetKeyBindingActionKeyboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortQuickBarSlotBase.MaximizeSlot
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSkipAnimation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::MaximizeSlot(bool bShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "MaximizeSlot");

	Params::FortQuickBarSlotBase_MaximizeSlot Parms{};

	Parms.bShouldSkipAnimation = bShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuickBarSlotBase.MinimizeSlot
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShouldSkipAnimation                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::MinimizeSlot(bool bShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "MinimizeSlot");

	Params::FortQuickBarSlotBase_MinimizeSlot Parms{};

	Parms.bShouldSkipAnimation = bShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuickBarSlotBase.OnRefreshItem
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortQuickBarSlotBase::OnRefreshItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "OnRefreshItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortQuickBarSlotBase.RefreshItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortQuickBarSlotBase::RefreshItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "RefreshItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.Resize
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCardSize                       CardSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::Resize(EFortItemCardSize CardSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "Resize");

	Params::FortQuickBarSlotBase_Resize Parms{};

	Parms.CardSize = CardSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.SetBottomComboSwitcherVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::SetBottomComboSwitcherVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "SetBottomComboSwitcherVisibility");

	Params::FortQuickBarSlotBase_SetBottomComboSwitcherVisibility Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.SetQuickbarIndexRuntime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRefresh                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::SetQuickbarIndexRuntime(int32 Param_Index, bool bRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "SetQuickbarIndexRuntime");

	Params::FortQuickBarSlotBase_SetQuickbarIndexRuntime Parms{};

	Parms.Param_Index = Param_Index;
	Parms.bRefresh = bRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.SetQuickbarTypeRuntime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuickBars                          NewQuickBarType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRefresh                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::SetQuickbarTypeRuntime(EFortQuickBars NewQuickBarType, bool bRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "SetQuickbarTypeRuntime");

	Params::FortQuickBarSlotBase_SetQuickbarTypeRuntime Parms{};

	Parms.NewQuickBarType = NewQuickBarType;
	Parms.bRefresh = bRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.SetSlotSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::SetSlotSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "SetSlotSelected");

	Params::FortQuickBarSlotBase_SetSlotSelected Parms{};

	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortQuickBarSlotBase.SetTopComboSwitcherVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuickBarSlotBase::SetTopComboSwitcherVisibility(ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "SetTopComboSwitcherVisibility");

	Params::FortQuickBarSlotBase_SetTopComboSwitcherVisibility Parms{};

	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.UpdateItemCardsVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortQuickBarSlotBase::UpdateItemCardsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "UpdateItemCardsVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.UpdateKeyBindingText
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortQuickBarSlotBase::UpdateKeyBindingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "UpdateKeyBindingText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortQuickBarSlotBase.UpdateKeyBindingVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortQuickBarSlotBase::UpdateKeyBindingVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBarSlotBase", "UpdateKeyBindingVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRedeemCodeBase.OnRedeemFriendCodeComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ERedeemCodeFailureReason                FailureReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRedeemCodeBase::OnRedeemFriendCodeComplete(bool bSuccess, ERedeemCodeFailureReason FailureReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRedeemCodeBase", "OnRedeemFriendCodeComplete");

	Params::FortRedeemCodeBase_OnRedeemFriendCodeComplete Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FailureReason = FailureReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRedeemCodeBase.RedeemFriendCode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FriendCode                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRedeemCodeBase::RedeemFriendCode(const class FString& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRedeemCodeBase", "RedeemFriendCode");

	Params::FortRedeemCodeBase_RedeemFriendCode Parms{};

	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRedirectToEpicAccountWidget.SetLoginType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortLoginAccountType                   LoginType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRedirectToEpicAccountWidget::SetLoginType(EFortLoginAccountType LoginType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRedirectToEpicAccountWidget", "SetLoginType");

	Params::FortRedirectToEpicAccountWidget_SetLoginType Parms{};

	Parms.LoginType = LoginType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRefundConfirmation.SetRefundsRemainingText
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RefundsRemaining                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalRefunds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRefundConfirmation::SetRefundsRemainingText(int32 RefundsRemaining, int32 TotalRefunds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRefundConfirmation", "SetRefundsRemainingText");

	Params::FortRefundConfirmation_SetRefundsRemainingText Parms{};

	Parms.RefundsRemaining = RefundsRemaining;
	Parms.TotalRefunds = TotalRefunds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRejoinWindowBase.OnTimeoutTimeReached
// (Event, Protected, BlueprintEvent)

void UFortRejoinWindowBase::OnTimeoutTimeReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRejoinWindowBase", "OnTimeoutTimeReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRejoinWindowBase.StartTimeout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TimeoutTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRejoinWindowBase::StartTimeout(float TimeoutTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRejoinWindowBase", "StartTimeout");

	Params::FortRejoinWindowBase_StartTimeout Parms{};

	Parms.TimeoutTime = TimeoutTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRejoinWindowBase.StopTimeout
// (Final, Native, Public, BlueprintCallable)

void UFortRejoinWindowBase::StopTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRejoinWindowBase", "StopTimeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRelativeAnchorCanvas.AddSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          ContentWidget                                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          AnchorWidget                                           (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortRelativeAnchorCanvasSlot*    ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortRelativeAnchorCanvasSlot* UFortRelativeAnchorCanvas::AddSlot(const class UWidget* ContentWidget, const class UWidget* AnchorWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRelativeAnchorCanvas", "AddSlot");

	Params::FortRelativeAnchorCanvas_AddSlot Parms{};

	Parms.ContentWidget = ContentWidget;
	Parms.AnchorWidget = AnchorWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRelativeAnchorCanvas.SetZLayerOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRelativeAnchorCanvas::SetZLayerOffset(const int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRelativeAnchorCanvas", "SetZLayerOffset");

	Params::FortRelativeAnchorCanvas_SetZLayerOffset Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortReplayBase.OnPlaybackTimeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   NowTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReplayBase::OnPlaybackTimeChanged(float NowTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayBase", "OnPlaybackTimeChanged");

	Params::FortReplayBase_OnPlaybackTimeChanged Parms{};

	Parms.NowTime = NowTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortReplayBase.OnReplayPausedChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsPaused                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReplayBase::OnReplayPausedChanged(bool bIsPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayBase", "OnReplayPausedChanged");

	Params::FortReplayBase_OnReplayPausedChanged Parms{};

	Parms.bIsPaused = bIsPaused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortReplayBase.OnTimelineRangeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   StartTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReplayBase::OnTimelineRangeChanged(float StartTime, float EndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayBase", "OnTimelineRangeChanged");

	Params::FortReplayBase_OnTimelineRangeChanged Parms{};

	Parms.StartTime = StartTime;
	Parms.EndTime = EndTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortReplayBase.SetReplayContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortReplayContext*               InReplayContext                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReplayBase::SetReplayContext(class UFortReplayContext* InReplayContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayBase", "SetReplayContext");

	Params::FortReplayBase_SetReplayContext Parms{};

	Parms.InReplayContext = InReplayContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortReplayViewSettingsTabBase.CenterOnTab
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortReplayViewSettingsTabBase::CenterOnTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayViewSettingsTabBase", "CenterOnTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortReplayViewSettingsTabBase.OnCameraTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerControllerSpectating*  FortPlayerControllerSpectating                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESpectatorCameraType                    CameraType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReplayViewSettingsTabBase::OnCameraTypeChanged(class AFortPlayerControllerSpectating* FortPlayerControllerSpectating, ESpectatorCameraType CameraType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayViewSettingsTabBase", "OnCameraTypeChanged");

	Params::FortReplayViewSettingsTabBase_OnCameraTypeChanged Parms{};

	Parms.FortPlayerControllerSpectating = FortPlayerControllerSpectating;
	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortReplayViewSettingsTabBase.OnFXStateChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortReplayFXState               NewFXState                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortReplayViewSettingsTabBase::OnFXStateChanged(const struct FFortReplayFXState& NewFXState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayViewSettingsTabBase", "OnFXStateChanged");

	Params::FortReplayViewSettingsTabBase_OnFXStateChanged Parms{};

	Parms.NewFXState = std::move(NewFXState);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortReplayViewSettingsTabBase.ResetToDefault
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortReplayViewSettingsTabBase::ResetToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayViewSettingsTabBase", "ResetToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortReplayViewSettingsTabBase.SetWidgetValues
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UFortReplayViewSettingsTabBase::SetWidgetValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplayViewSettingsTabBase", "SetWidgetValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResearchMenuBase.GetClaimableResearchPointEstimate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchMenuBase::GetClaimableResearchPointEstimate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "GetClaimableResearchPointEstimate");

	Params::FortResearchMenuBase_GetClaimableResearchPointEstimate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchMenuBase.OnPurchaseResearchLevelCompleted
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnPurchaseResearchLevelCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "OnPurchaseResearchLevelCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResearchMenuBase.OnPurchaseResearchLevelStarted
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnPurchaseResearchLevelStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "OnPurchaseResearchLevelStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResearchMenuBase.OnUseResearchRespecTokenComplete
// (Event, Protected, BlueprintEvent)

void UFortResearchMenuBase::OnUseResearchRespecTokenComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "OnUseResearchRespecTokenComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResearchMenuBase.RequestPurchaseResearchLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           StatId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResearchMenuBase::RequestPurchaseResearchLevel(const class FString& StatId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "RequestPurchaseResearchLevel");

	Params::FortResearchMenuBase_RequestPurchaseResearchLevel Parms{};

	Parms.StatId = std::move(StatId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResearchMenuBase.UseResearchRespecToken
// (Final, Native, Protected, BlueprintCallable)

void UFortResearchMenuBase::UseResearchRespecToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "UseResearchRespecToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResearchMenuBase.AreResearchRespecTokensAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResearchMenuBase::AreResearchRespecTokensAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "AreResearchRespecTokensAvailable");

	Params::FortResearchMenuBase_AreResearchRespecTokensAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchMenuBase.GetResearchRespecTokenCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchMenuBase::GetResearchRespecTokenCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchMenuBase", "GetResearchRespecTokenCount");

	Params::FortResearchMenuBase_GetResearchRespecTokenCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.OnStatChanged
// (Event, Protected, BlueprintEvent)

void UFortResearchStatTileWidget::OnStatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "OnStatChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResearchStatTileWidget.GetCostToIncreaseStat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCostToIncreaseStat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetCostToIncreaseStat");

	Params::FortResearchStatTileWidget_GetCostToIncreaseStat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetCurrentCombinedStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentCombinedStatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetCurrentCombinedStatValue");

	Params::FortResearchStatTileWidget_GetCurrentCombinedStatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetCurrentPersonalStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentPersonalStatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetCurrentPersonalStatValue");

	Params::FortResearchStatTileWidget_GetCurrentPersonalStatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetCurrentResearchLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentResearchLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetCurrentResearchLevel");

	Params::FortResearchStatTileWidget_GetCurrentResearchLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetCurrentTeamStatValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetCurrentTeamStatValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetCurrentTeamStatValue");

	Params::FortResearchStatTileWidget_GetCurrentTeamStatValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetNextCombinedStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextCombinedStatValueDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetNextCombinedStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextCombinedStatValueDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetNextPersonalStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextPersonalStatValueDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetNextPersonalStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextPersonalStatValueDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetNextTeamStatValueDelta
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResearchStatTileWidget::GetNextTeamStatValueDelta() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetNextTeamStatValueDelta");

	Params::FortResearchStatTileWidget_GetNextTeamStatValueDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetPersonalStatType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortStatType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortStatType UFortResearchStatTileWidget::GetPersonalStatType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetPersonalStatType");

	Params::FortResearchStatTileWidget_GetPersonalStatType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.GetStatIdName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UFortResearchStatTileWidget::GetStatIdName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "GetStatIdName");

	Params::FortResearchStatTileWidget_GetStatIdName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResearchStatTileWidget.IsAtMaxResearchLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResearchStatTileWidget::IsAtMaxResearchLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResearchStatTileWidget", "IsAtMaxResearchLevel");

	Params::FortResearchStatTileWidget_IsAtMaxResearchLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResultsSummaryScreenWidget.GetTotalScoreSortedScoreIndices
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortUIScoreReport*               ScoreReport                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           OutSortedScoreIndices                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortResultsSummaryScreenWidget::GetTotalScoreSortedScoreIndices(const class UFortUIScoreReport* ScoreReport, TArray<int32>* OutSortedScoreIndices) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsSummaryScreenWidget", "GetTotalScoreSortedScoreIndices");

	Params::FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices Parms{};

	Parms.ScoreReport = ScoreReport;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSortedScoreIndices != nullptr)
		*OutSortedScoreIndices = std::move(Parms.OutSortedScoreIndices);
}


// Function FortniteUI.FortResultsTeleportScreenWidget.OnExitTimePercentagePassedUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsTeleportScreenWidget::OnExitTimePercentagePassedUpdated(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsTeleportScreenWidget", "OnExitTimePercentagePassedUpdated");

	Params::FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated Parms{};

	Parms.Percent = Percent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortResultsTeleportScreenWidget.OnExitTimeRemainingUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   TimeRemainingSeconds                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsTeleportScreenWidget::OnExitTimeRemainingUpdated(int32 TimeRemainingSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsTeleportScreenWidget", "OnExitTimeRemainingUpdated");

	Params::FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated Parms{};

	Parms.TimeRemainingSeconds = TimeRemainingSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortResultsTeleportScreenWidget.OnExitTimerFinished
// (Event, Public, BlueprintEvent)

void UFortResultsTeleportScreenWidget::OnExitTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsTeleportScreenWidget", "OnExitTimerFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortResultsTeleportScreenWidget.StartExitTimer
// (Final, Native, Public, BlueprintCallable)

void UFortResultsTeleportScreenWidget::StartExitTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsTeleportScreenWidget", "StartExitTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.GetRewardsByType
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortRewardItemType                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                OutRewards                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortResultsWidget::GetRewardsByType(EFortRewardItemType Type, TArray<class UFortItem*>* OutRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "GetRewardsByType");

	Params::FortResultsWidget_GetRewardsByType Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewards != nullptr)
		*OutRewards = std::move(Parms.OutRewards);
}


// Function FortniteUI.FortResultsWidget.GetTotalMissionPointsEarned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortResultsWidget::GetTotalMissionPointsEarned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "GetTotalMissionPointsEarned");

	Params::FortResultsWidget_GetTotalMissionPointsEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResultsWidget.LogXPData
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidget::LogXPData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "LogXPData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.RequestExitZone
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidget::RequestExitZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "RequestExitZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.SendEndOfRoundFriendInviteAnalytic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 TargetId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidget::SendEndOfRoundFriendInviteAnalytic(const struct FUniqueNetIdRepl& TargetId, const class FString& TargetPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "SendEndOfRoundFriendInviteAnalytic");

	Params::FortResultsWidget_SendEndOfRoundFriendInviteAnalytic Parms{};

	Parms.TargetId = std::move(TargetId);
	Parms.TargetPlayerName = std::move(TargetPlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.SendEndOfRoundScreenAnalytic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ScreenName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Skipped                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeSpent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidget::SendEndOfRoundScreenAnalytic(const class FString& ScreenName, bool Skipped, float TimeSpent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "SendEndOfRoundScreenAnalytic");

	Params::FortResultsWidget_SendEndOfRoundScreenAnalytic Parms{};

	Parms.ScreenName = std::move(ScreenName);
	Parms.Skipped = Skipped;
	Parms.TimeSpent = TimeSpent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.SendEndOfRoundUpVoteAnalytic
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 TargetId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetPlayerName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortResultsWidget::SendEndOfRoundUpVoteAnalytic(const struct FUniqueNetIdRepl& TargetId, const class FString& TargetPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "SendEndOfRoundUpVoteAnalytic");

	Params::FortResultsWidget_SendEndOfRoundUpVoteAnalytic Parms{};

	Parms.TargetId = std::move(TargetId);
	Parms.TargetPlayerName = std::move(TargetPlayerName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.TriggerSetupTeleportCameraEvent
// (Final, Native, Public, BlueprintCallable)

void UFortResultsWidget::TriggerSetupTeleportCameraEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "TriggerSetupTeleportCameraEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortResultsWidget.GetZoneCompletionResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCompletionResult                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCompletionResult UFortResultsWidget::GetZoneCompletionResult() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "GetZoneCompletionResult");

	Params::FortResultsWidget_GetZoneCompletionResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResultsWidget.GetZoneCompletionResultText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortResultsWidget::GetZoneCompletionResultText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "GetZoneCompletionResultText");

	Params::FortResultsWidget_GetZoneCompletionResultText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortResultsWidget.IsDataFinalized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortResultsWidget::IsDataFinalized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortResultsWidget", "IsDataFinalized");

	Params::FortResultsWidget_IsDataFinalized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortReticle.OnContextualReticleChanged
// (Final, Native, Private)

void UFortReticle::OnContextualReticleChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReticle", "OnContextualReticleChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortReticle.OnPawnSet
// (Final, Native, Private)

void UFortReticle::OnPawnSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReticle", "OnPawnSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortReticle.OnReticleColorChanged
// (Final, Native, Private)

void UFortReticle::OnReticleColorChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReticle", "OnReticleColorChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortReticle.OnWeaponEquipped
// (Final, Native, Private)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortReticle::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReticle", "OnWeaponEquipped");

	Params::FortReticle_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.AddInputActionHandler
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool* bPassThrough)>     CommittedEvent                                         (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::AddInputActionHandler(class UDataTable* DataTable, class FName RowName, TDelegate<void(bool* bPassThrough)> CommittedEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "AddInputActionHandler");

	Params::FortRewardNotificationSubWidget_AddInputActionHandler Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;
	Parms.CommittedEvent = CommittedEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortRewardNotificationWidget*    MainWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::Init(class UFortRewardNotificationWidget* MainWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "Init");

	Params::FortRewardNotificationSubWidget_Init Parms{};

	Parms.MainWidget = MainWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.InspectItem
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::InspectItem(class UFortItem* ItemToInspect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "InspectItem");

	Params::FortRewardNotificationSubWidget_InspectItem Parms{};

	Parms.ItemToInspect = ItemToInspect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.IsPrimaryActionEnabled
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::IsPrimaryActionEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "IsPrimaryActionEnabled");

	Params::FortRewardNotificationSubWidget_IsPrimaryActionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function FortniteUI.FortRewardNotificationSubWidget.IsPrimaryActionHidden
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bHidden                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::IsPrimaryActionHidden(bool* bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "IsPrimaryActionHidden");

	Params::FortRewardNotificationSubWidget_IsPrimaryActionHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bHidden != nullptr)
		*bHidden = Parms.bHidden;
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnDeactivated
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnNavigationDown
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnNavigationDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnNavigationLeft
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnNavigationRight
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnNavigationUp
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnNavigationUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnNavigationUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.OnPrimaryAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortRewardNotificationSubWidget::OnPrimaryAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "OnPrimaryAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.RemoveAllInputActionHandlers
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationSubWidget::RemoveAllInputActionHandlers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "RemoveAllInputActionHandlers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.RemoveInputActionHandler
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              InputActionRow                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::RemoveInputActionHandler(const struct FDataTableRowHandle& InputActionRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "RemoveInputActionHandler");

	Params::FortRewardNotificationSubWidget_RemoveInputActionHandler Parms{};

	Parms.InputActionRow = std::move(InputActionRow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.SetInputActionHandlerState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RowName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInputActionState                       State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetInputActionHandlerState(class UDataTable* DataTable, class FName RowName, EInputActionState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "SetInputActionHandlerState");

	Params::FortRewardNotificationSubWidget_SetInputActionHandlerState Parms{};

	Parms.DataTable = DataTable;
	Parms.RowName = RowName;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.SetPrimaryActionEnabled
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetPrimaryActionEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "SetPrimaryActionEnabled");

	Params::FortRewardNotificationSubWidget_SetPrimaryActionEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.SetPrimaryActionHidden
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationSubWidget::SetPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "SetPrimaryActionHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.SetPrimaryActionText
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortRewardNotificationSubWidget::SetPrimaryActionText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "SetPrimaryActionText");

	Params::FortRewardNotificationSubWidget_SetPrimaryActionText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.TransitionIn
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationSubWidget::TransitionIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "TransitionIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.TransitionInBegin
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationSubWidget::TransitionInBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "TransitionInBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationSubWidget.TransitionOut
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationSubWidget::TransitionOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "TransitionOut");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationSubWidget.TransitionOutBegin
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationSubWidget::TransitionOutBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationSubWidget", "TransitionOutBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardConversationWidget.GetDataFromSentence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       TalkingHeadTexture                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardConversationWidget::GetDataFromSentence(const struct FFortConversationSentence& Sentence, class FText* Text, class UTexture2D** TalkingHeadTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardConversationWidget", "GetDataFromSentence");

	Params::FortRewardConversationWidget_GetDataFromSentence Parms{};

	Parms.Sentence = std::move(Sentence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (TalkingHeadTexture != nullptr)
		*TalkingHeadTexture = Parms.TalkingHeadTexture;
}


// Function FortniteUI.FortRewardConversationWidget.IsValidConversation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConversation*                Conversation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardConversationWidget::IsValidConversation(const class UFortConversation* Conversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardConversationWidget", "IsValidConversation");

	Params::FortRewardConversationWidget_IsValidConversation Parms{};

	Parms.Conversation = Conversation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRewardExpeditionWidget.CollectExpedition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardExpeditionWidget::CollectExpedition(class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardExpeditionWidget", "CollectExpedition");

	Params::FortRewardExpeditionWidget_CollectExpedition Parms{};

	Parms.Expedition = Expedition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardExpeditionWidget.OnCollectExpeditionCompleted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardExpeditionWidget::OnCollectExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSucceeded, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardExpeditionWidget", "OnCollectExpeditionCompleted");

	Params::FortRewardExpeditionWidget_OnCollectExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSucceeded = bSucceeded;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRewardInfoButton.HandleDifferentItemOrQuantitySetBP
// (Event, Protected, BlueprintEvent)

void UFortRewardInfoButton::HandleDifferentItemOrQuantitySetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "HandleDifferentItemOrQuantitySetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardInfoButton.SetItemInstanceQuantityPair
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemInstanceQuantityPair    ItemQuantityPair                                       (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortRewardInfoButton::SetItemInstanceQuantityPair(const struct FFortItemInstanceQuantityPair& ItemQuantityPair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "SetItemInstanceQuantityPair");

	Params::FortRewardInfoButton_SetItemInstanceQuantityPair Parms{};

	Parms.ItemQuantityPair = std::move(ItemQuantityPair);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardInfoButton.SetShowDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInShowDescription                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardInfoButton::SetShowDescription(bool bInShowDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "SetShowDescription");

	Params::FortRewardInfoButton_SetShowDescription Parms{};

	Parms.bInShowDescription = bInShowDescription;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardInfoButton.SetShowDescriptionBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInShowDescription                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardInfoButton::SetShowDescriptionBP(bool bInShowDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "SetShowDescriptionBP");

	Params::FortRewardInfoButton_SetShowDescriptionBP Parms{};

	Parms.bInShowDescription = bInShowDescription;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRewardInfoButton.GetItemInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortRewardInfoButton::GetItemInstance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "GetItemInstance");

	Params::FortRewardInfoButton_GetItemInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRewardInfoButton.GetQuantity
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortRewardInfoButton::GetQuantity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoButton", "GetQuantity");

	Params::FortRewardInfoButton_GetQuantity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRewardInfoWidget.ContainsReward
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           TemplateIdToCheck                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardInfoWidget::ContainsReward(const class FString& TemplateIdToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoWidget", "ContainsReward");

	Params::FortRewardInfoWidget_ContainsReward Parms{};

	Parms.TemplateIdToCheck = std::move(TemplateIdToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRewardInfoWidget.SetButtonGroup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonButtonGroup*               InButtonGroup                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardInfoWidget::SetButtonGroup(class UCommonButtonGroup* InButtonGroup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoWidget", "SetButtonGroup");

	Params::FortRewardInfoWidget_SetButtonGroup Parms{};

	Parms.InButtonGroup = InButtonGroup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardInfoWidget.SetReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortItemQuantityPair            RewardIn                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardInfoWidget::SetReward(const struct FFortItemQuantityPair& RewardIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoWidget", "SetReward");

	Params::FortRewardInfoWidget_SetReward Parms{};

	Parms.RewardIn = std::move(RewardIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardInfoWidget.SetRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  RewardsIn                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardInfoWidget::SetRewards(const struct FFortRewardInfo& RewardsIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardInfoWidget", "SetRewards");

	Params::FortRewardInfoWidget_SetRewards Parms{};

	Parms.RewardsIn = std::move(RewardsIn);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNewQuestWidget.GetDataFromSentence
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// class UTexture2D*                       TalkingHeadTexture                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNewQuestWidget::GetDataFromSentence(const struct FFortConversationSentence& Sentence, class FText* Text, class UTexture2D** TalkingHeadTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNewQuestWidget", "GetDataFromSentence");

	Params::FortRewardNewQuestWidget_GetDataFromSentence Parms{};

	Parms.Sentence = std::move(Sentence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Text != nullptr)
		*Text = std::move(Parms.Text);

	if (TalkingHeadTexture != nullptr)
		*TalkingHeadTexture = Parms.TalkingHeadTexture;
}


// Function FortniteUI.FortRewardNewQuestWidget.IsValidConversation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortConversation*                Conversation                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRewardNewQuestWidget::IsValidConversation(const class UFortConversation* Conversation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNewQuestWidget", "IsValidConversation");

	Params::FortRewardNewQuestWidget_IsValidConversation Parms{};

	Parms.Conversation = Conversation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRewardNotificationWidget.AddCollectionBookData
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortCollectionBookRewards       CollectionBookRewards                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddCollectionBookData(const struct FFortCollectionBookRewards& CollectionBookRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddCollectionBookData");

	Params::FortRewardNotificationWidget_AddCollectionBookData Parms{};

	Parms.CollectionBookRewards = std::move(CollectionBookRewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddDifficultyIncreaseRewardData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddDifficultyIncreaseRewardData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddDifficultyIncreaseRewardData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddEpicQuestData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddEpicQuestData(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddEpicQuestData");

	Params::FortRewardNotificationWidget_AddEpicQuestData Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddExpeditionData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              ExpeditionItem                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddExpeditionData(class UFortExpeditionItem* ExpeditionItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddExpeditionData");

	Params::FortRewardNotificationWidget_AddExpeditionData Parms{};

	Parms.ExpeditionItem = ExpeditionItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddGiftBoxData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddGiftBoxData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddGiftBoxData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddItemCacheRewardData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemCache                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddItemCacheRewardData(class UFortItem* ItemCache)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddItemCacheRewardData");

	Params::FortRewardNotificationWidget_AddItemCacheRewardData Parms{};

	Parms.ItemCache = ItemCache;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddMissionAlertData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddMissionAlertData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddMissionAlertData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddMissionData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::AddMissionData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddMissionData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.AddQuestData
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::AddQuestData(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "AddQuestData");

	Params::FortRewardNotificationWidget_AddQuestData Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.InspectItem
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        ItemToInspect                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::InspectItem(class UFortItem* ItemToInspect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "InspectItem");

	Params::FortRewardNotificationWidget_InspectItem Parms{};

	Parms.ItemToInspect = ItemToInspect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRewardNotificationWidget.IsPrimaryActionEnabled
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bEnabled                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::IsPrimaryActionEnabled(bool* bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "IsPrimaryActionEnabled");

	Params::FortRewardNotificationWidget_IsPrimaryActionEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bEnabled != nullptr)
		*bEnabled = Parms.bEnabled;
}


// Function FortniteUI.FortRewardNotificationWidget.IsPrimaryActionHidden
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    bHidden                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::IsPrimaryActionHidden(bool* bHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "IsPrimaryActionHidden");

	Params::FortRewardNotificationWidget_IsPrimaryActionHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bHidden != nullptr)
		*bHidden = Parms.bHidden;
}


// Function FortniteUI.FortRewardNotificationWidget.OnNavigationDown
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnNavigationDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnNavigationUp
// (Event, Public, BlueprintEvent)

void UFortRewardNotificationWidget::OnNavigationUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnNavigationUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnPrimaryActionDisabled
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnPrimaryActionDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnPrimaryActionEnabled
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnPrimaryActionEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnPrimaryActionHidden
// (Event, Protected, BlueprintEvent)

void UFortRewardNotificationWidget::OnPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnPrimaryActionHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortRewardNotificationWidget.OnPrimaryActionTextChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::OnPrimaryActionTextChanged(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "OnPrimaryActionTextChanged");

	Params::FortRewardNotificationWidget_OnPrimaryActionTextChanged Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortRewardNotificationWidget.ResetAllRewardData
// (Final, Native, Protected, BlueprintCallable)

void UFortRewardNotificationWidget::ResetAllRewardData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "ResetAllRewardData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.SetPrimaryActionEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::SetPrimaryActionEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "SetPrimaryActionEnabled");

	Params::FortRewardNotificationWidget_SetPrimaryActionEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.SetPrimaryActionHidden
// (Final, Native, Public, BlueprintCallable)

void UFortRewardNotificationWidget::SetPrimaryActionHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "SetPrimaryActionHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRewardNotificationWidget.SetPrimaryActionText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UFortRewardNotificationWidget::SetPrimaryActionText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRewardNotificationWidget", "SetPrimaryActionText");

	Params::FortRewardNotificationWidget_SetPrimaryActionText Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortRichTextBlock.EscapeStringForRichText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortRichTextBlock::EscapeStringForRichText(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortRichTextBlock", "EscapeStringForRichText");

	Params::FortRichTextBlock_EscapeStringForRichText Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortRichTextBlock.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (Parm, NativeAccessSpecifierPublic)

void UFortRichTextBlock::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRichTextBlock", "SetText");

	Params::FortRichTextBlock_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AllowDynamicResolutionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AllowDynamicResolutionChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AllowDynamicResolutionChanged");

	Params::FortSettingsContext_AllowDynamicResolutionChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AllowLowPowerChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AllowLowPowerChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AllowLowPowerChanged");

	Params::FortSettingsContext_AllowLowPowerChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AllowVideoPlaybackChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AllowVideoPlaybackChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AllowVideoPlaybackChanged");

	Params::FortSettingsContext_AllowVideoPlaybackChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AnonymousModeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AnonymousModeChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AnonymousModeChanged");

	Params::FortSettingsContext_AnonymousModeChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AntiAliasingQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AntiAliasingQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AntiAliasingQualityChanged");

	Params::FortSettingsContext_AntiAliasingQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.AutoEquipChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::AutoEquipChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "AutoEquipChanged");

	Params::FortSettingsContext_AutoEquipChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ChatVolumeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ChatVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ChatVolumeChanged");

	Params::FortSettingsContext_ChatVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.CinematicsVolumeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::CinematicsVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "CinematicsVolumeChanged");

	Params::FortSettingsContext_CinematicsVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ConsoleUnlockedFPSChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ConsoleUnlockedFPSChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ConsoleUnlockedFPSChanged");

	Params::FortSettingsContext_ConsoleUnlockedFPSChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.DialogVolumeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::DialogVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "DialogVolumeChanged");

	Params::FortSettingsContext_DialogVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.EffectsQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::EffectsQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "EffectsQualityChanged");

	Params::FortSettingsContext_EffectsQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.FirstPersonCameraChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::FirstPersonCameraChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "FirstPersonCameraChanged");

	Params::FortSettingsContext_FirstPersonCameraChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.FrameRateLimitChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   FrameRateLimit                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::FrameRateLimitChanged(int32 FrameRateLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "FrameRateLimitChanged");

	Params::FortSettingsContext_FrameRateLimitChanged Parms{};

	Parms.FrameRateLimit = FrameRateLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GamepadBuildingMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GamepadBuildingMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GamepadBuildingMultiplierValueChanged");

	Params::FortSettingsContext_GamepadBuildingMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GamepadLookSensitivityXChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GamepadLookSensitivityXChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GamepadLookSensitivityXChanged");

	Params::FortSettingsContext_GamepadLookSensitivityXChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GamepadLookSensitivityYChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GamepadLookSensitivityYChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GamepadLookSensitivityYChanged");

	Params::FortSettingsContext_GamepadLookSensitivityYChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GamepadScopedMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GamepadScopedMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GamepadScopedMultiplierValueChanged");

	Params::FortSettingsContext_GamepadScopedMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GamepadTargetingMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GamepadTargetingMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GamepadTargetingMultiplierValueChanged");

	Params::FortSettingsContext_GamepadTargetingMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GetAllowDynamicResolution
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAllowDynamicResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAllowDynamicResolution");

	Params::FortSettingsContext_GetAllowDynamicResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAllowLowPower
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAllowLowPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAllowLowPower");

	Params::FortSettingsContext_GetAllowLowPower Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAllowVideoPlayback
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAllowVideoPlayback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAllowVideoPlayback");

	Params::FortSettingsContext_GetAllowVideoPlayback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAntiAliasingQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetAntiAliasingQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAntiAliasingQuality");

	Params::FortSettingsContext_GetAntiAliasingQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAvailableVoiceChatInputDevices
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::GetAvailableVoiceChatInputDevices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAvailableVoiceChatInputDevices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GetAvailableVoiceChatOutputDevices
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::GetAvailableVoiceChatOutputDevices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAvailableVoiceChatOutputDevices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GetCurrentDisplayResolution
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetCurrentDisplayResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCurrentDisplayResolution");

	Params::FortSettingsContext_GetCurrentDisplayResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCurrentFPS
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetCurrentFPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCurrentFPS");

	Params::FortSettingsContext_GetCurrentFPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCurrentLanguage
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetCurrentLanguage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCurrentLanguage");

	Params::FortSettingsContext_GetCurrentLanguage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCurrentRegion
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetCurrentRegion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCurrentRegion");

	Params::FortSettingsContext_GetCurrentRegion Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetDisplayResolutionNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetDisplayResolutionNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetDisplayResolutionNames");

	Params::FortSettingsContext_GetDisplayResolutionNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetEffectsQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetEffectsQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetEffectsQuality");

	Params::FortSettingsContext_GetEffectsQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetFPSNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetFPSNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetFPSNames");

	Params::FortSettingsContext_GetFPSNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMobileFPSMode
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetMobileFPSMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMobileFPSMode");

	Params::FortSettingsContext_GetMobileFPSMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMobileFPSTypeNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetMobileFPSTypeNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMobileFPSTypeNames");

	Params::FortSettingsContext_GetMobileFPSTypeNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionAxisNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetMotionAxisNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionAxisNames");

	Params::FortSettingsContext_GetMotionAxisNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionBlur
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetMotionBlur()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionBlur");

	Params::FortSettingsContext_GetMotionBlur Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetOverallQualityLevel
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetOverallQualityLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetOverallQualityLevel");

	Params::FortSettingsContext_GetOverallQualityLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPossibleLanguages
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetPossibleLanguages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPossibleLanguages");

	Params::FortSettingsContext_GetPossibleLanguages Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPostProcessQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetPostProcessQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPostProcessQuality");

	Params::FortSettingsContext_GetPostProcessQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetQualityLowNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetQualityLowNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetQualityLowNames");

	Params::FortSettingsContext_GetQualityLowNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetQualityNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetQualityNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetQualityNames");

	Params::FortSettingsContext_GetQualityNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetQualityOffNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetQualityOffNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetQualityOffNames");

	Params::FortSettingsContext_GetQualityOffNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetRegionDisplayNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetRegionDisplayNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetRegionDisplayNames");

	Params::FortSettingsContext_GetRegionDisplayNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetRotatorSettingValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetRotatorSettingValue(ESettingType InSettingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetRotatorSettingValue");

	Params::FortSettingsContext_GetRotatorSettingValue Parms{};

	Parms.InSettingType = InSettingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSafeZoneValue
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetSafeZoneValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSafeZoneValue");

	Params::FortSettingsContext_GetSafeZoneValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSettingDisplayNames
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetSettingDisplayNames(ESettingType InSettingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSettingDisplayNames");

	Params::FortSettingsContext_GetSettingDisplayNames Parms{};

	Parms.InSettingType = InSettingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSettingValueInRange
// (Final, Native, Private, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESettingTab                             InSettingTab                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetSettingValueInRange(float Value, ESettingType InSettingType, ESettingTab InSettingTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSettingValueInRange");

	Params::FortSettingsContext_GetSettingValueInRange Parms{};

	Parms.Value = Value;
	Parms.InSettingType = InSettingType;
	Parms.InSettingTab = InSettingTab;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShadowQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetShadowQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShadowQuality");

	Params::FortSettingsContext_GetShadowQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowFPS
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowFPS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowFPS");

	Params::FortSettingsContext_GetShowFPS Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowGrass
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowGrass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowGrass");

	Params::FortSettingsContext_GetShowGrass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSliderSettingValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetSliderSettingValue(ESettingType InSettingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSliderSettingValue");

	Params::FortSettingsContext_GetSliderSettingValue Parms{};

	Parms.InSettingType = InSettingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTextureQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetTextureQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTextureQuality");

	Params::FortSettingsContext_GetTextureQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetThreeDResolution
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetThreeDResolution()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetThreeDResolution");

	Params::FortSettingsContext_GetThreeDResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetUseVsync
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetUseVsync()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetUseVsync");

	Params::FortSettingsContext_GetUseVsync Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetViewDistanceNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetViewDistanceNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetViewDistanceNames");

	Params::FortSettingsContext_GetViewDistanceNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetViewDistanceQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetViewDistanceQuality()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetViewDistanceQuality");

	Params::FortSettingsContext_GetViewDistanceQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVoiceChatInputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetVoiceChatInputDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVoiceChatInputDevice");

	Params::FortSettingsContext_GetVoiceChatInputDevice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVoiceChatOutputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetVoiceChatOutputDevice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVoiceChatOutputDevice");

	Params::FortSettingsContext_GetVoiceChatOutputDevice Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetWindowModeNames
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetWindowModeNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetWindowModeNames");

	Params::FortSettingsContext_GetWindowModeNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GyroSensitivityValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::GyroSensitivityValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GyroSensitivityValueChanged");

	Params::FortSettingsContext_GyroSensitivityValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.HiddenMatchmakingDelayMaxChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::HiddenMatchmakingDelayMaxChanged(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "HiddenMatchmakingDelayMaxChanged");

	Params::FortSettingsContext_HiddenMatchmakingDelayMaxChanged Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.HiddenMatchmakingDelayMaxReset
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::HiddenMatchmakingDelayMaxReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "HiddenMatchmakingDelayMaxReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.HideOtherPlayerNamesChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::HideOtherPlayerNamesChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "HideOtherPlayerNamesChanged");

	Params::FortSettingsContext_HideOtherPlayerNamesChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.LanguageChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::LanguageChanged(int32 NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "LanguageChanged");

	Params::FortSettingsContext_LanguageChanged Parms{};

	Parms.NewMode = NewMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.LanguageReset
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::LanguageReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "LanguageReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MobileFPSModeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   FPSMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MobileFPSModeChanged(int32 FPSMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MobileFPSModeChanged");

	Params::FortSettingsContext_MobileFPSModeChanged Parms{};

	Parms.FPSMode = FPSMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionAxisValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionAxisValueChanged(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionAxisValueChanged");

	Params::FortSettingsContext_MotionAxisValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionBlurChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionBlurChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionBlurChanged");

	Params::FortSettingsContext_MotionBlurChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionControlEnabledValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionControlEnabledValueChanged(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionControlEnabledValueChanged");

	Params::FortSettingsContext_MotionControlEnabledValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionHarvestingToolMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionHarvestingToolMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionHarvestingToolMultiplierValueChanged");

	Params::FortSettingsContext_MotionHarvestingToolMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionScopedMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionScopedMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionScopedMultiplierValueChanged");

	Params::FortSettingsContext_MotionScopedMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MotionTargetingMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MotionTargetingMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MotionTargetingMultiplierValueChanged");

	Params::FortSettingsContext_MotionTargetingMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MouseSensitivityMultiplierForAircraftChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MouseSensitivityMultiplierForAircraftChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MouseSensitivityMultiplierForAircraftChanged");

	Params::FortSettingsContext_MouseSensitivityMultiplierForAircraftChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MouseSensitivityXChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MouseSensitivityXChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MouseSensitivityXChanged");

	Params::FortSettingsContext_MouseSensitivityXChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MouseSensitivityYChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MouseSensitivityYChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MouseSensitivityYChanged");

	Params::FortSettingsContext_MouseSensitivityYChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.MusicVolumeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::MusicVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "MusicVolumeChanged");

	Params::FortSettingsContext_MusicVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAimAssistChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAimAssistChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAimAssistChanged");

	Params::FortSettingsContext_OnAimAssistChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAimAssistReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAimAssistReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAimAssistReset");

	Params::FortSettingsContext_OnAimAssistReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoChangeMaterialChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoChangeMaterialChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoChangeMaterialChanged");

	Params::FortSettingsContext_OnAutoChangeMaterialChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoChangeMaterialReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoChangeMaterialReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoChangeMaterialReset");

	Params::FortSettingsContext_OnAutoChangeMaterialReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoOpenDoorsChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoOpenDoorsChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoOpenDoorsChanged");

	Params::FortSettingsContext_OnAutoOpenDoorsChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoPickupWeaponsChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoPickupWeaponsChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoPickupWeaponsChanged");

	Params::FortSettingsContext_OnAutoPickupWeaponsChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoPickupWeaponsConsolePCChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoPickupWeaponsConsolePCChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoPickupWeaponsConsolePCChanged");

	Params::FortSettingsContext_OnAutoPickupWeaponsConsolePCChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnAutoSortConsumablesToRightChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnAutoSortConsumablesToRightChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnAutoSortConsumablesToRightChanged");

	Params::FortSettingsContext_OnAutoSortConsumablesToRightChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnCreativeModeReplayRecordingPreferenceChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnCreativeModeReplayRecordingPreferenceChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnCreativeModeReplayRecordingPreferenceChanged");

	Params::FortSettingsContext_OnCreativeModeReplayRecordingPreferenceChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnCreativeTurboDeleteChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnCreativeTurboDeleteChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnCreativeTurboDeleteChanged");

	Params::FortSettingsContext_OnCreativeTurboDeleteChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnCreativeTurboDeleteReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnCreativeTurboDeleteReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnCreativeTurboDeleteReset");

	Params::FortSettingsContext_OnCreativeTurboDeleteReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnCrossplayPreferenceChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnCrossplayPreferenceChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnCrossplayPreferenceChanged");

	Params::FortSettingsContext_OnCrossplayPreferenceChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnEditButtonHoldTimeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnEditButtonHoldTimeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnEditButtonHoldTimeChanged");

	Params::FortSettingsContext_OnEditButtonHoldTimeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnEditModeAimAssistChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnEditModeAimAssistChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnEditModeAimAssistChanged");

	Params::FortSettingsContext_OnEditModeAimAssistChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnEnableTryBuildOnFocusChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnEnableTryBuildOnFocusChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnEnableTryBuildOnFocusChanged");

	Params::FortSettingsContext_OnEnableTryBuildOnFocusChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged");

	Params::FortSettingsContext_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena");

	Params::FortSettingsContext_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnForceFeedbackChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnForceFeedbackChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnForceFeedbackChanged");

	Params::FortSettingsContext_OnForceFeedbackChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnGamepadAutoRunChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnGamepadAutoRunChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnGamepadAutoRunChanged");

	Params::FortSettingsContext_OnGamepadAutoRunChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnHUDScaleChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   bInHUDScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnHUDScaleChanged(float bInHUDScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnHUDScaleChanged");

	Params::FortSettingsContext_OnHUDScaleChanged Parms{};

	Parms.bInHUDScale = bInHUDScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnLargeTeamsReplayRecordingPreferenceChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnLargeTeamsReplayRecordingPreferenceChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnLargeTeamsReplayRecordingPreferenceChanged");

	Params::FortSettingsContext_OnLargeTeamsReplayRecordingPreferenceChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnQualitySelectorChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ValueRef                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnQualitySelectorChanged(int32 ValueRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnQualitySelectorChanged");

	Params::FortSettingsContext_OnQualitySelectorChanged Parms{};

	Parms.ValueRef = ValueRef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnQualitySelectorReset
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::OnQualitySelectorReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnQualitySelectorReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnReplayRecordingPreferenceChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnReplayRecordingPreferenceChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnReplayRecordingPreferenceChanged");

	Params::FortSettingsContext_OnReplayRecordingPreferenceChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnShadowPlayHighlightsChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnShadowPlayHighlightsChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnShadowPlayHighlightsChanged");

	Params::FortSettingsContext_OnShadowPlayHighlightsChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnShowGlobalChatEnabledChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnShowGlobalChatEnabledChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnShowGlobalChatEnabledChanged");

	Params::FortSettingsContext_OnShowGlobalChatEnabledChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnTurboBuildChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnTurboBuildChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnTurboBuildChanged");

	Params::FortSettingsContext_OnTurboBuildChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnTurboBuildReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnTurboBuildReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnTurboBuildReset");

	Params::FortSettingsContext_OnTurboBuildReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.OnUseTapToShootChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::OnUseTapToShootChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "OnUseTapToShootChanged");

	Params::FortSettingsContext_OnUseTapToShootChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PeripheralLightingChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PeripheralLightingChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PeripheralLightingChanged");

	Params::FortSettingsContext_PeripheralLightingChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForAircraftPrimaryInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForAircraftPrimaryInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForAircraftPrimaryInversionChanged");

	Params::FortSettingsContext_PitchForAircraftPrimaryInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForAircraftPrimaryInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForAircraftPrimaryInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForAircraftPrimaryInversionReset");

	Params::FortSettingsContext_PitchForAircraftPrimaryInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForAircraftSecondaryInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForAircraftSecondaryInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForAircraftSecondaryInversionChanged");

	Params::FortSettingsContext_PitchForAircraftSecondaryInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForAircraftSecondaryInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForAircraftSecondaryInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForAircraftSecondaryInversionReset");

	Params::FortSettingsContext_PitchForAircraftSecondaryInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForMotionInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForMotionInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForMotionInversionChanged");

	Params::FortSettingsContext_PitchForMotionInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchForMotionInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchForMotionInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchForMotionInversionReset");

	Params::FortSettingsContext_PitchForMotionInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchInversionChanged");

	Params::FortSettingsContext_PitchInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PitchInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PitchInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PitchInversionReset");

	Params::FortSettingsContext_PitchInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PostProcessQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PostProcessQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PostProcessQualityChanged");

	Params::FortSettingsContext_PostProcessQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.PowerSaverModeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::PowerSaverModeChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "PowerSaverModeChanged");

	Params::FortSettingsContext_PowerSaverModeChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.RegionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewRegion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::RegionChanged(int32 NewRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "RegionChanged");

	Params::FortSettingsContext_RegionChanged Parms{};

	Parms.NewRegion = NewRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.RegionReset
// (Final, Native, Private, BlueprintCallable)

void UFortSettingsContext::RegionReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "RegionReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ResolutionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewResolution                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ResolutionChanged(int32 NewResolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ResolutionChanged");

	Params::FortSettingsContext_ResolutionChanged Parms{};

	Parms.NewResolution = NewResolution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.RotatorSettingChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)
// int32                                   PreviousValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::RotatorSettingChanged(ESettingType InSettingType, const class FText& NameText, int32 PreviousValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "RotatorSettingChanged");

	Params::FortSettingsContext_RotatorSettingChanged Parms{};

	Parms.InSettingType = InSettingType;
	Parms.NameText = std::move(NameText);
	Parms.PreviousValue = PreviousValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.RotatorSettingReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)
// int32                                   PreviousValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::RotatorSettingReset(ESettingType InSettingType, const class FText& NameText, int32 PreviousValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "RotatorSettingReset");

	Params::FortSettingsContext_RotatorSettingReset Parms{};

	Parms.InSettingType = InSettingType;
	Parms.NameText = std::move(NameText);
	Parms.PreviousValue = PreviousValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SafeZoneChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SafeZoneChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SafeZoneChanged");

	Params::FortSettingsContext_SafeZoneChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ScopedMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ScopedMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ScopedMultiplierValueChanged");

	Params::FortSettingsContext_ScopedMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SendSettingChanges
// (Final, Native, Public, BlueprintCallable)

void UFortSettingsContext::SendSettingChanges()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SendSettingChanges");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetAllowGameVolumeWhenMinimized
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// EFortAllowBackgroundAudioSetting        NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetAllowGameVolumeWhenMinimized(EFortAllowBackgroundAudioSetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetAllowGameVolumeWhenMinimized");

	Params::FortSettingsContext_SetAllowGameVolumeWhenMinimized Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetColorBlindMode
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   InMode                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetColorBlindMode(int32 InMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetColorBlindMode");

	Params::FortSettingsContext_SetColorBlindMode Parms{};

	Parms.InMode = InMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetColorBlindStrength
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   InColorBlindStrength                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetColorBlindStrength(float InColorBlindStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetColorBlindStrength");

	Params::FortSettingsContext_SetColorBlindStrength Parms{};

	Parms.InColorBlindStrength = InColorBlindStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetIgnoreGamepadInput
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bIgnore                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetIgnoreGamepadInput(bool bIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetIgnoreGamepadInput");

	Params::FortSettingsContext_SetIgnoreGamepadInput Parms{};

	Parms.bIgnore = bIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetQuality
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewQuality                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetQuality(int32 NewQuality)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetQuality");

	Params::FortSettingsContext_SetQuality Parms{};

	Parms.NewQuality = NewQuality;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetSubtitlesEnabled
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetSubtitlesEnabled(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetSubtitlesEnabled");

	Params::FortSettingsContext_SetSubtitlesEnabled Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVisualizeAudioSources
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVisualizeAudioSources(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVisualizeAudioSources");

	Params::FortSettingsContext_SetVisualizeAudioSources Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVoiceChat3DEnabled
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVoiceChat3DEnabled(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVoiceChat3DEnabled");

	Params::FortSettingsContext_SetVoiceChat3DEnabled Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVoiceChatEnabled
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVoiceChatEnabled(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVoiceChatEnabled");

	Params::FortSettingsContext_SetVoiceChatEnabled Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVoiceChatInputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewDevice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVoiceChatInputDevice(int32 NewDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVoiceChatInputDevice");

	Params::FortSettingsContext_SetVoiceChatInputDevice Parms{};

	Parms.NewDevice = NewDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVoiceChatOutputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewDevice                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVoiceChatOutputDevice(int32 NewDevice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVoiceChatOutputDevice");

	Params::FortSettingsContext_SetVoiceChatOutputDevice Parms{};

	Parms.NewDevice = NewDevice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SetVoiceChatPTTEnabled
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SetVoiceChatPTTEnabled(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SetVoiceChatPTTEnabled");

	Params::FortSettingsContext_SetVoiceChatPTTEnabled Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ShadowQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ShadowQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ShadowQualityChanged");

	Params::FortSettingsContext_ShadowQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ShowFPSChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ShowFPSChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ShowFPSChanged");

	Params::FortSettingsContext_ShowFPSChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ShowGrassChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ShowGrassChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ShowGrassChanged");

	Params::FortSettingsContext_ShowGrassChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ShowViewerCountChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ShowViewerCountChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ShowViewerCountChanged");

	Params::FortSettingsContext_ShowViewerCountChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SliderSettingChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)
// float                                   PreviousValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SliderSettingChanged(ESettingType InSettingType, const class FText& NameText, float PreviousValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SliderSettingChanged");

	Params::FortSettingsContext_SliderSettingChanged Parms{};

	Parms.InSettingType = InSettingType;
	Parms.NameText = std::move(NameText);
	Parms.PreviousValue = PreviousValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SliderSettingReset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESettingType                            InSettingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)
// float                                   PreviousValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SliderSettingReset(ESettingType InSettingType, const class FText& NameText, float PreviousValue, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SliderSettingReset");

	Params::FortSettingsContext_SliderSettingReset Parms{};

	Parms.InSettingType = InSettingType;
	Parms.NameText = std::move(NameText);
	Parms.PreviousValue = PreviousValue;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SoundFXVolumeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SoundFXVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SoundFXVolumeChanged");

	Params::FortSettingsContext_SoundFXVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SprintByDefaultChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SprintByDefaultChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SprintByDefaultChanged");

	Params::FortSettingsContext_SprintByDefaultChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SprintCancelsReloadChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SprintCancelsReloadChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SprintCancelsReloadChanged");

	Params::FortSettingsContext_SprintCancelsReloadChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.SprintToggleChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::SprintToggleChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "SprintToggleChanged");

	Params::FortSettingsContext_SprintToggleChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TapInteractChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TapInteractChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TapInteractChanged");

	Params::FortSettingsContext_TapInteractChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TargetingMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TargetingMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TargetingMultiplierValueChanged");

	Params::FortSettingsContext_TargetingMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TargetingToggleChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TargetingToggleChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TargetingToggleChanged");

	Params::FortSettingsContext_TargetingToggleChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TextureQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TextureQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TextureQualityChanged");

	Params::FortSettingsContext_TextureQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ThreeDResolutionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   Resolution                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ThreeDResolutionChanged(float Resolution)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ThreeDResolutionChanged");

	Params::FortSettingsContext_ThreeDResolutionChanged Parms{};

	Parms.Resolution = Resolution;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TouchDragScopedSensitivityValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TouchDragScopedSensitivityValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TouchDragScopedSensitivityValueChanged");

	Params::FortSettingsContext_TouchDragScopedSensitivityValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TouchLookSensitivityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TouchLookSensitivityChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TouchLookSensitivityChanged");

	Params::FortSettingsContext_TouchLookSensitivityChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TouchTargetingMultiplierValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TouchTargetingMultiplierValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TouchTargetingMultiplierValueChanged");

	Params::FortSettingsContext_TouchTargetingMultiplierValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.TouchVerticalSensitivityValueChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::TouchVerticalSensitivityValueChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "TouchVerticalSensitivityValueChanged");

	Params::FortSettingsContext_TouchVerticalSensitivityValueChanged Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.UseVsyncChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    IsChecked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::UseVsyncChanged(bool IsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "UseVsyncChanged");

	Params::FortSettingsContext_UseVsyncChanged Parms{};

	Parms.IsChecked = IsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.ViewDistanceQualityChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ButtonId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::ViewDistanceQualityChanged(int32 ButtonId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "ViewDistanceQualityChanged");

	Params::FortSettingsContext_ViewDistanceQualityChanged Parms{};

	Parms.ButtonId = ButtonId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.WindowModeChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   NewMode                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::WindowModeChanged(int32 NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "WindowModeChanged");

	Params::FortSettingsContext_WindowModeChanged Parms{};

	Parms.NewMode = NewMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.YawForMotionInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::YawForMotionInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "YawForMotionInversionChanged");

	Params::FortSettingsContext_YawForMotionInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.YawForMotionInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::YawForMotionInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "YawForMotionInversionReset");

	Params::FortSettingsContext_YawForMotionInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.YawInversionChanged
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::YawInversionChanged(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "YawInversionChanged");

	Params::FortSettingsContext_YawInversionChanged Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.YawInversionReset
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bInChecked                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::YawInversionReset(bool bInChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "YawInversionReset");

	Params::FortSettingsContext_YawInversionReset Parms{};

	Parms.bInChecked = bInChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSettingsContext.GetAimAssistState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAimAssistState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAimAssistState");

	Params::FortSettingsContext_GetAimAssistState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAllowGameVolumeWhenMinimized
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAllowBackgroundAudioSetting        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortAllowBackgroundAudioSetting UFortSettingsContext::GetAllowGameVolumeWhenMinimized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAllowGameVolumeWhenMinimized");

	Params::FortSettingsContext_GetAllowGameVolumeWhenMinimized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAnonymousModeEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAnonymousModeEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAnonymousModeEnabled");

	Params::FortSettingsContext_GetAnonymousModeEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoChangeMaterial
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoChangeMaterial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoChangeMaterial");

	Params::FortSettingsContext_GetAutoChangeMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoEquipState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoEquipState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoEquipState");

	Params::FortSettingsContext_GetAutoEquipState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoOpenDoors
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoOpenDoors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoOpenDoors");

	Params::FortSettingsContext_GetAutoOpenDoors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoPickupWeapons
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoPickupWeapons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoPickupWeapons");

	Params::FortSettingsContext_GetAutoPickupWeapons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoPickupWeaponsConsolePC
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoPickupWeaponsConsolePC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoPickupWeaponsConsolePC");

	Params::FortSettingsContext_GetAutoPickupWeaponsConsolePC Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetAutoSortConsumablesToRight
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetAutoSortConsumablesToRight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetAutoSortConsumablesToRight");

	Params::FortSettingsContext_GetAutoSortConsumablesToRight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetChatVolumeValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetChatVolumeValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetChatVolumeValue");

	Params::FortSettingsContext_GetChatVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCinematicsVolume
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetCinematicsVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCinematicsVolume");

	Params::FortSettingsContext_GetCinematicsVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetColorBlindMode
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetColorBlindMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetColorBlindMode");

	Params::FortSettingsContext_GetColorBlindMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetColorBlindModeNames
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortSettingsContext::GetColorBlindModeNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetColorBlindModeNames");

	Params::FortSettingsContext_GetColorBlindModeNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetColorBlindStrength
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetColorBlindStrength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetColorBlindStrength");

	Params::FortSettingsContext_GetColorBlindStrength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetConsoleUnlockedFPSState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetConsoleUnlockedFPSState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetConsoleUnlockedFPSState");

	Params::FortSettingsContext_GetConsoleUnlockedFPSState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCreativeModeReplayRecordingEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetCreativeModeReplayRecordingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCreativeModeReplayRecordingEnabled");

	Params::FortSettingsContext_GetCreativeModeReplayRecordingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCreativeTurboDelete
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetCreativeTurboDelete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCreativeTurboDelete");

	Params::FortSettingsContext_GetCreativeTurboDelete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetCrossplayPreference
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetCrossplayPreference() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetCrossplayPreference");

	Params::FortSettingsContext_GetCrossplayPreference Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetDialogVolumeValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetDialogVolumeValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetDialogVolumeValue");

	Params::FortSettingsContext_GetDialogVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetEditButtonHoldTimeValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetEditButtonHoldTimeValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetEditButtonHoldTimeValue");

	Params::FortSettingsContext_GetEditButtonHoldTimeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetEditModeAimAssistState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetEditModeAimAssistState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetEditModeAimAssistState");

	Params::FortSettingsContext_GetEditModeAimAssistState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetEnableTryBuildOnFocus
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetEnableTryBuildOnFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetEnableTryBuildOnFocus");

	Params::FortSettingsContext_GetEnableTryBuildOnFocus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetFirstPersonCameraState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetFirstPersonCameraState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetFirstPersonCameraState");

	Params::FortSettingsContext_GetFirstPersonCameraState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState");

	Params::FortSettingsContext_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena");

	Params::FortSettingsContext_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetForceFeedbackState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetForceFeedbackState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetForceFeedbackState");

	Params::FortSettingsContext_GetForceFeedbackState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGamepadAutoRunState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetGamepadAutoRunState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGamepadAutoRunState");

	Params::FortSettingsContext_GetGamepadAutoRunState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGamepadBuildingMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetGamepadBuildingMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGamepadBuildingMultiplierValue");

	Params::FortSettingsContext_GetGamepadBuildingMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGamepadLookSensitivityValue
// (Final, Native, Private, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFortSettingsContext::GetGamepadLookSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGamepadLookSensitivityValue");

	Params::FortSettingsContext_GetGamepadLookSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGamepadScopedMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetGamepadScopedMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGamepadScopedMultiplierValue");

	Params::FortSettingsContext_GetGamepadScopedMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGamepadTargetingMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetGamepadTargetingMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGamepadTargetingMultiplierValue");

	Params::FortSettingsContext_GetGamepadTargetingMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGammaSettings
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetGammaSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGammaSettings");

	Params::FortSettingsContext_GetGammaSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetGyroSensitivityValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetGyroSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetGyroSensitivityValue");

	Params::FortSettingsContext_GetGyroSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetHiddenMatchmakingDelayMax
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetHiddenMatchmakingDelayMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetHiddenMatchmakingDelayMax");

	Params::FortSettingsContext_GetHiddenMatchmakingDelayMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetHideOtherPlayerNames
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetHideOtherPlayerNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetHideOtherPlayerNames");

	Params::FortSettingsContext_GetHideOtherPlayerNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetHUDScale
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetHUDScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetHUDScale");

	Params::FortSettingsContext_GetHUDScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetIgnoreGamepadInput
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetIgnoreGamepadInput() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetIgnoreGamepadInput");

	Params::FortSettingsContext_GetIgnoreGamepadInput Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetLargeTeamsReplayRecordingEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetLargeTeamsReplayRecordingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetLargeTeamsReplayRecordingEnabled");

	Params::FortSettingsContext_GetLargeTeamsReplayRecordingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMaxQualityLevel
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetMaxQualityLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMaxQualityLevel");

	Params::FortSettingsContext_GetMaxQualityLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionAxisValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetMotionAxisValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionAxisValue");

	Params::FortSettingsContext_GetMotionAxisValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionControlsEnabledValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetMotionControlsEnabledValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionControlsEnabledValue");

	Params::FortSettingsContext_GetMotionControlsEnabledValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionHarvestingToolMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetMotionHarvestingToolMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionHarvestingToolMultiplierValue");

	Params::FortSettingsContext_GetMotionHarvestingToolMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionScopedMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetMotionScopedMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionScopedMultiplierValue");

	Params::FortSettingsContext_GetMotionScopedMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMotionTargetingMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetMotionTargetingMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMotionTargetingMultiplierValue");

	Params::FortSettingsContext_GetMotionTargetingMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMouseSensitivityMultiplierForAircraft
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetMouseSensitivityMultiplierForAircraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMouseSensitivityMultiplierForAircraft");

	Params::FortSettingsContext_GetMouseSensitivityMultiplierForAircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMouseSensitivityValue
// (Final, Native, Private, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFortSettingsContext::GetMouseSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMouseSensitivityValue");

	Params::FortSettingsContext_GetMouseSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetMusicVolumeValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetMusicVolumeValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetMusicVolumeValue");

	Params::FortSettingsContext_GetMusicVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPeripheralLightingEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPeripheralLightingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPeripheralLightingEnabled");

	Params::FortSettingsContext_GetPeripheralLightingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPitchForAircraftPrimaryInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPitchForAircraftPrimaryInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPitchForAircraftPrimaryInversionState");

	Params::FortSettingsContext_GetPitchForAircraftPrimaryInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPitchForAircraftSecondaryInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPitchForAircraftSecondaryInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPitchForAircraftSecondaryInversionState");

	Params::FortSettingsContext_GetPitchForAircraftSecondaryInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPitchForMotionInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPitchForMotionInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPitchForMotionInversionState");

	Params::FortSettingsContext_GetPitchForMotionInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPitchInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPitchInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPitchInversionState");

	Params::FortSettingsContext_GetPitchInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetPowerSaverMode
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetPowerSaverMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetPowerSaverMode");

	Params::FortSettingsContext_GetPowerSaverMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetQuality
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetQuality() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetQuality");

	Params::FortSettingsContext_GetQuality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetReplayRecordingEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetReplayRecordingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetReplayRecordingEnabled");

	Params::FortSettingsContext_GetReplayRecordingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetResolution
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSettingsContext::GetResolution() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetResolution");

	Params::FortSettingsContext_GetResolution Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetScopedMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetScopedMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetScopedMultiplierValue");

	Params::FortSettingsContext_GetScopedMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShadowPlayHighlightsEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShadowPlayHighlightsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShadowPlayHighlightsEnabled");

	Params::FortSettingsContext_GetShadowPlayHighlightsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowGlobalChatEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowGlobalChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowGlobalChatEnabled");

	Params::FortSettingsContext_GetShowGlobalChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowHeroBackpack
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowHeroBackpack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowHeroBackpack");

	Params::FortSettingsContext_GetShowHeroBackpack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowHeroHeadAccessories
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowHeroHeadAccessories() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowHeroHeadAccessories");

	Params::FortSettingsContext_GetShowHeroHeadAccessories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetShowViewerCountEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetShowViewerCountEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetShowViewerCountEnabled");

	Params::FortSettingsContext_GetShowViewerCountEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSoundFXVolumeValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetSoundFXVolumeValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSoundFXVolumeValue");

	Params::FortSettingsContext_GetSoundFXVolumeValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSprintByDefaultState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetSprintByDefaultState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSprintByDefaultState");

	Params::FortSettingsContext_GetSprintByDefaultState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSprintCancelsReloadState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetSprintCancelsReloadState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSprintCancelsReloadState");

	Params::FortSettingsContext_GetSprintCancelsReloadState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSprintToggleState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetSprintToggleState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSprintToggleState");

	Params::FortSettingsContext_GetSprintToggleState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetSubtitlesEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetSubtitlesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetSubtitlesEnabled");

	Params::FortSettingsContext_GetSubtitlesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTapInteractState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetTapInteractState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTapInteractState");

	Params::FortSettingsContext_GetTapInteractState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTargetingMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetTargetingMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTargetingMultiplierValue");

	Params::FortSettingsContext_GetTargetingMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTargetingToggleState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetTargetingToggleState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTargetingToggleState");

	Params::FortSettingsContext_GetTargetingToggleState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTouchDragScopedSensitivityValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetTouchDragScopedSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTouchDragScopedSensitivityValue");

	Params::FortSettingsContext_GetTouchDragScopedSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTouchLookSensitivityValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetTouchLookSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTouchLookSensitivityValue");

	Params::FortSettingsContext_GetTouchLookSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTouchTargetingMultiplierValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetTouchTargetingMultiplierValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTouchTargetingMultiplierValue");

	Params::FortSettingsContext_GetTouchTargetingMultiplierValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTouchVerticalSensitivityValue
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSettingsContext::GetTouchVerticalSensitivityValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTouchVerticalSensitivityValue");

	Params::FortSettingsContext_GetTouchVerticalSensitivityValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetTurboBuild
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetTurboBuild() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetTurboBuild");

	Params::FortSettingsContext_GetTurboBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetUseTapToShoot
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetUseTapToShoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetUseTapToShoot");

	Params::FortSettingsContext_GetUseTapToShoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVisualizeAudioSources
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetVisualizeAudioSources() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVisualizeAudioSources");

	Params::FortSettingsContext_GetVisualizeAudioSources Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVoiceChat3DEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetVoiceChat3DEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVoiceChat3DEnabled");

	Params::FortSettingsContext_GetVoiceChat3DEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVoiceChatEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetVoiceChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVoiceChatEnabled");

	Params::FortSettingsContext_GetVoiceChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetVoiceChatPTTEnabled
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetVoiceChatPTTEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetVoiceChatPTTEnabled");

	Params::FortSettingsContext_GetVoiceChatPTTEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetYawForMotionInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetYawForMotionInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetYawForMotionInversionState");

	Params::FortSettingsContext_GetYawForMotionInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.GetYawInversionState
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSettingsContext::GetYawInversionState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "GetYawInversionState");

	Params::FortSettingsContext_GetYawInversionState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSettingsContext.UpdateGammaSettings
// (Final, Native, Private, BlueprintCallable, Const)
// Parameters:
// float                                   GammaValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSettingsContext::UpdateGammaSettings(float GammaValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSettingsContext", "UpdateGammaSettings");

	Params::FortSettingsContext_UpdateGammaSettings Parms{};

	Parms.GammaValue = GammaValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownScoringHUDAlert.OnGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScoringHUDAlert::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScoringHUDAlert", "OnGamePhaseChanged");

	Params::FortShowdownScoringHUDAlert_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownScoringHUDAlert.OnTeamPlacementChanged
// (Final, Native, Protected)
// Parameters:
// int32                                   NewTeamPlacement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScoringHUDAlert::OnTeamPlacementChanged(int32 NewTeamPlacement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScoringHUDAlert", "OnTeamPlacementChanged");

	Params::FortShowdownScoringHUDAlert_OnTeamPlacementChanged Parms{};

	Parms.NewTeamPlacement = NewTeamPlacement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownScoringHUDAlert.ScorePointAlert
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             RuleLookup                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalScore                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PointDelta                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScoringHUDAlert::ScorePointAlert(class FName RuleLookup, int32 TotalScore, int32 PointDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScoringHUDAlert", "ScorePointAlert");

	Params::FortShowdownScoringHUDAlert_ScorePointAlert Parms{};

	Parms.RuleLookup = RuleLookup;
	Parms.TotalScore = TotalScore;
	Parms.PointDelta = PointDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownScreen.NavigateTournamentLeft
// (Final, Native, Protected, BlueprintCallable)

void UFortShowdownScreen::NavigateTournamentLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "NavigateTournamentLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownScreen.NavigateTournamentRight
// (Final, Native, Protected, BlueprintCallable)

void UFortShowdownScreen::NavigateTournamentRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "NavigateTournamentRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortShowdownScreen.SelectedEndTournament
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEndIsSelected                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScreen::SelectedEndTournament(bool bEndIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "SelectedEndTournament");

	Params::FortShowdownScreen_SelectedEndTournament Parms{};

	Parms.bEndIsSelected = bEndIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownScreen.SelectedFrontTournament
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFrontIsSelected                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScreen::SelectedFrontTournament(bool bFrontIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "SelectedFrontTournament");

	Params::FortShowdownScreen_SelectedFrontTournament Parms{};

	Parms.bFrontIsSelected = bFrontIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownScreen.SelectedTournamentChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           SelectedTournament                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScreen::SelectedTournamentChanged(const class FString& SelectedTournament)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "SelectedTournamentChanged");

	Params::FortShowdownScreen_SelectedTournamentChanged Parms{};

	Parms.SelectedTournament = std::move(SelectedTournament);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownScreen.ShowTournamentDetails
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           SelectedTournament                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortShowdownScreen::ShowTournamentDetails(const class FString& SelectedTournament)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownScreen", "ShowTournamentDetails");

	Params::FortShowdownScreen_ShowTournamentDetails Parms{};

	Parms.SelectedTournament = std::move(SelectedTournament);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortShowdownTournamentTile.GetTileTournament
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortShowdownTournamentTile::GetTileTournament()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortShowdownTournamentTile", "GetTileTournament");

	Params::FortShowdownTournamentTile_GetTileTournament Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSignInConsole.HandleTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSignInConsole::HandleTextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInConsole", "HandleTextCommitted");

	Params::FortSignInConsole_HandleTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSignInConsole.UpdateEmailStatus
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSignInConsole::UpdateEmailStatus(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInConsole", "UpdateEmailStatus");

	Params::FortSignInConsole_UpdateEmailStatus Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSignInConsole.UpdatePasscodeStatus
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSignInConsole::UpdatePasscodeStatus(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInConsole", "UpdatePasscodeStatus");

	Params::FortSignInConsole_UpdatePasscodeStatus Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSignInWidget.HandleTextCommitted
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSignInWidget::HandleTextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInWidget", "HandleTextCommitted");

	Params::FortSignInWidget_HandleTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSignInWidget.StartSignIn
// (Final, Native, Protected, BlueprintCallable)

void UFortSignInWidget::StartSignIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInWidget", "StartSignIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSignInWidget.UpdateSignInButton
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSignInWidget::UpdateSignInButton(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSignInWidget", "UpdateSignInButton");

	Params::FortSignInWidget_UpdateSignInButton Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialDisplayLibrary.SetPartySizeIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UImage*                           Image                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPartySize                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialDisplayLibrary::SetPartySizeIcon(class UImage* Image, int32 InPartySize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortSocialDisplayLibrary", "SetPartySizeIcon");

	Params::FortSocialDisplayLibrary_SetPartySizeIcon Parms{};

	Parms.Image = Image;
	Parms.InPartySize = InPartySize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialDisplayLibrary.SetPlatformPrefixIcon
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UImage*                           Image                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OtherPlayerPlatform                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialDisplayLibrary::SetPlatformPrefixIcon(class UImage* Image, const class FString& OtherPlayerPlatform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortSocialDisplayLibrary", "SetPlatformPrefixIcon");

	Params::FortSocialDisplayLibrary_SetPlatformPrefixIcon Parms{};

	Parms.Image = Image;
	Parms.OtherPlayerPlatform = std::move(OtherPlayerPlatform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialImportButton.HandleDynamicSocialImportDialogClosed
// (Final, Native, Private)

void UFortSocialImportButton::HandleDynamicSocialImportDialogClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportButton", "HandleDynamicSocialImportDialogClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialImportButton.OnCaptionGenerated
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Caption                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSocialImportButton::OnCaptionGenerated(const class FText& Caption)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportButton", "OnCaptionGenerated");

	Params::FortSocialImportButton_OnCaptionGenerated Parms{};

	Parms.Caption = std::move(Caption);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSocialImportPanel.OnClaimViewRequested
// (Event, Protected, BlueprintEvent)

void UFortSocialImportPanel::OnClaimViewRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnClaimViewRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialImportPanel.OnImportViewRequested
// (Event, Protected, BlueprintEvent)

void UFortSocialImportPanel::OnImportViewRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnImportViewRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialImportPanel.OnIncentivizedSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIncentivized                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialImportPanel::OnIncentivizedSet(bool bIncentivized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnIncentivizedSet");

	Params::FortSocialImportPanel_OnIncentivizedSet Parms{};

	Parms.bIncentivized = bIncentivized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSocialImportPanel.OnLauncherImportOpened
// (Event, Protected, BlueprintEvent)

void UFortSocialImportPanel::OnLauncherImportOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnLauncherImportOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialImportPanel.OnPanelTypeSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESocialImportPanelType                  NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialImportPanel::OnPanelTypeSet(ESocialImportPanelType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnPanelTypeSet");

	Params::FortSocialImportPanel_OnPanelTypeSet Parms{};

	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSocialImportPanel.OnWaitingViewRequested
// (Event, Protected, BlueprintEvent)

void UFortSocialImportPanel::OnWaitingViewRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "OnWaitingViewRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialImportPanel.ShowPanel
// (Final, Native, Public, BlueprintCallable)

void UFortSocialImportPanel::ShowPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "ShowPanel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialImportPanel.GetSocialPlatform
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESocialImportPanelPlatform              OutPlatform                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSocialImportPanel::GetSocialPlatform(ESocialImportPanelPlatform* OutPlatform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialImportPanel", "GetSocialPlatform");

	Params::FortSocialImportPanel_GetSocialPlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPlatform != nullptr)
		*OutPlatform = Parms.OutPlatform;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSocialPanel.ClosePanel
// (Event, Protected, BlueprintEvent)

void UFortSocialPanel::ClosePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanel", "ClosePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialPanel.IsAnySlideOutMenuOpen
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSocialPanel::IsAnySlideOutMenuOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanel", "IsAnySlideOutMenuOpen");

	Params::FortSocialPanel_IsAnySlideOutMenuOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortFriendSearchButton.HandleAddFriendTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortFriendSearchButton::HandleAddFriendTextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendSearchButton", "HandleAddFriendTextCommitted");

	Params::FortFriendSearchButton_HandleAddFriendTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortFriendSearchButton.SetKeyboardFocusOnAddFriendText
// (Final, Native, Protected, BlueprintCallable)

void UFortFriendSearchButton::SetKeyboardFocusOnAddFriendText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFriendSearchButton", "SetKeyboardFocusOnAddFriendText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialPanelView_UserLists.OnSocialPanelTabChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PanelIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialPanelView_UserLists::OnSocialPanelTabChanged(int32 PanelIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_UserLists", "OnSocialPanelTabChanged");

	Params::FortSocialPanelView_UserLists_OnSocialPanelTabChanged Parms{};

	Parms.PanelIndex = PanelIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSocialPanelView_UserLists.PlayIntroAnim
// (Event, Public, BlueprintEvent)

void UFortSocialPanelView_UserLists::PlayIntroAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_UserLists", "PlayIntroAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSocialPanelView_UserLists.ReturnDisplayedEntryWidgets
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// const TArray<class UUserWidget*>        ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UUserWidget*> UFortSocialPanelView_UserLists::ReturnDisplayedEntryWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_UserLists", "ReturnDisplayedEntryWidgets");

	Params::FortSocialPanelView_UserLists_ReturnDisplayedEntryWidgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSocialPanelView_UserLists.ToggleSocialPanel
// (Final, Native, Private, BlueprintCallable)

void UFortSocialPanelView_UserLists::ToggleSocialPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialPanelView_UserLists", "ToggleSocialPanel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialSettingToggle.HandleRotated
// (Final, Native, Private)
// Parameters:
// int32                                   SelectedIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSocialSettingToggle::HandleRotated(int32 SelectedIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialSettingToggle", "HandleRotated");

	Params::FortSocialSettingToggle_HandleRotated Parms{};

	Parms.SelectedIndex = SelectedIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSocialUserListEntry.IsPlatformOnlyFriend
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSocialUserListEntry::IsPlatformOnlyFriend() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialUserListEntry", "IsPlatformOnlyFriend");

	Params::FortSocialUserListEntry_IsPlatformOnlyFriend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadIcon.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadIcon::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadIcon", "HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadIcon.SetSquad
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             InName                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadIcon::SetSquad(const class FName& InName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadIcon", "SetSquad");

	Params::FortSquadIcon_SetSquad Parms{};

	Parms.InName = InName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.HandleAddDefenderSquadMemberBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::HandleAddDefenderSquadMemberBP(const class FName& SquadId, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSquadDetails", "HandleAddDefenderSquadMemberBP");

	Params::FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP Parms{};

	Parms.SquadId = SquadId;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.HandleDefenderSquadInfoSetBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::HandleDefenderSquadInfoSetBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSquadDetails", "HandleDefenderSquadInfoSetBP");

	Params::FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.SetDefenderSquadInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSquadDetails::SetDefenderSquadInfo(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSquadDetails", "SetDefenderSquadInfo");

	Params::FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadLandingPageDefenderSummary.HandleAddDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSummary::HandleAddDefenderSquadDetailsBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSummary", "HandleAddDefenderSquadDetailsBP");

	Params::FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageDefenderSummary.HandleAddLockedDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortLandingPageDefenderSummaryInfoDefenderSummaryInfo                                    (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageDefenderSummary::HandleAddLockedDefenderSquadDetailsBP(const struct FFortLandingPageDefenderSummaryInfo& DefenderSummaryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSummary", "HandleAddLockedDefenderSquadDetailsBP");

	Params::FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP Parms{};

	Parms.DefenderSummaryInfo = std::move(DefenderSummaryInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageDefenderSummary.HandleClearDefenderSquadDetailsBP
// (Event, Public, BlueprintEvent)

void UFortSquadLandingPageDefenderSummary::HandleClearDefenderSquadDetailsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageDefenderSummary", "HandleClearDefenderSquadDetailsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadLandingPageSurvivorSummary.HandleAddSetBonusSummaryLineItemBP
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FFortAttributeModifierAccumulationAttributeModifierAccumulation                          (Parm, NativeAccessSpecifierPublic)

void UFortSquadLandingPageSurvivorSummary::HandleAddSetBonusSummaryLineItemBP(const struct FFortAttributeModifierAccumulation& AttributeModifierAccumulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageSurvivorSummary", "HandleAddSetBonusSummaryLineItemBP");

	Params::FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP Parms{};

	Parms.AttributeModifierAccumulation = std::move(AttributeModifierAccumulation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadLandingPageSurvivorSummary.HandleClearSetBonusSummaryLineItemsBP
// (Event, Public, BlueprintEvent)

void UFortSquadLandingPageSurvivorSummary::HandleClearSetBonusSummaryLineItemsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadLandingPageSurvivorSummary", "HandleClearSetBonusSummaryLineItemsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotDetailsPanel.HandleDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "HandleDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotDetailsPanel.HandleSquadSlotRestrictionFactorsChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleSquadSlotRestrictionFactorsChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "HandleSquadSlotRestrictionFactorsChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotDetailsPanel.HandleSquadSlotStateChangedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotDetailsPanel::HandleSquadSlotStateChangedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "HandleSquadSlotStateChangedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotDetailsPanel.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotDetailsPanel::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.SetScrollWidget
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotDetailsPanel::SetScrollWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "SetScrollWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotDetailsPanel::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotDetailsPanel::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "GetItemInSquadSlotBP");

	Params::FortSquadSlotDetailsPanel_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.GetSlottingRestrictionReasons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortSquadSlottingRestrictionReason>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortSquadSlottingRestrictionReason> UFortSquadSlotDetailsPanel::GetSlottingRestrictionReasons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "GetSlottingRestrictionReasons");

	Params::FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotDetailsPanel::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "IsSquadSlotLockedBP");

	Params::FortSquadSlotDetailsPanel_IsSquadSlotLockedBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotDetailsPanel.TryGetItemToPreviewInSlot
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        OutItemToPreviewInSlot                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotDetailsPanel::TryGetItemToPreviewInSlot(class UFortItem** OutItemToPreviewInSlot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotDetailsPanel", "TryGetItemToPreviewInSlot");

	Params::FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItemToPreviewInSlot != nullptr)
		*OutItemToPreviewInSlot = Parms.OutItemToPreviewInSlot;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemDetailElementWidget.HandlePostDifferentSquadSlotSetBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotItemDetailElementWidget::HandlePostDifferentSquadSlotSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailElementWidget", "HandlePostDifferentSquadSlotSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotItemDetailElementWidget.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailElementWidget::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailElementWidget", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotItemDetailElementWidget.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailElementWidget::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailElementWidget", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotItemDetailElementWidget.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotItemDetailElementWidget::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailElementWidget", "GetItemInSquadSlotBP");

	Params::FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemDetailElementWidget.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotItemDetailElementWidget::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailElementWidget", "IsSquadSlotLockedBP");

	Params::FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailsHostPanel::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailsHostPanel", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemDetailsHostPanel::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailsHostPanel", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotItemDetailsHostPanel::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailsHostPanel", "GetItemInSquadSlotBP");

	Params::FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotItemDetailsHostPanel::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemDetailsHostPanel", "IsSquadSlotLockedBP");

	Params::FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotItemPicker.CycleSortType
// (Final, Native, Public, BlueprintCallable)

void UFortSquadSlotItemPicker::CycleSortType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPicker", "CycleSortType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortSquadSlotItemPicker.FortSquadSlotSortChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESquadSlotSortType                      CurrentSortType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESquadSlotType                          SquadSlotType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::FortSquadSlotSortChanged__DelegateSignature(ESquadSlotSortType CurrentSortType, ESquadSlotType SquadSlotType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPicker", "FortSquadSlotSortChanged__DelegateSignature");

	Params::FortSquadSlotItemPicker_FortSquadSlotSortChanged__DelegateSignature Parms{};

	Parms.CurrentSortType = CurrentSortType;
	Parms.SquadSlotType = SquadSlotType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadSlotItemPicker.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPicker", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotItemPicker.SetSortTypes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSquadSlotSortTypes              SquadSlotSortTypes                                     (Parm, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::SetSortTypes(const struct FSquadSlotSortTypes& SquadSlotSortTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPicker", "SetSortTypes");

	Params::FortSquadSlotItemPicker_SetSortTypes Parms{};

	Parms.SquadSlotSortTypes = std::move(SquadSlotSortTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotItemPicker.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotItemPicker::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotItemPicker", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotSelectorPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSquadSlotSelectorButton*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSlotSelectorButton* UFortSquadSlotSelectorPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSelectorPopupMenu", "GetHostButton");

	Params::FortSquadSlotSelectorPopupMenu_GetHostButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotSurvivorTraitMatchesDetailWidget.HandleTraitValuesUpdatedBP
// (Event, Protected, BlueprintEvent)

void UFortSquadSlotSurvivorTraitMatchesDetailWidget::HandleTraitValuesUpdatedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotSurvivorTraitMatchesDetailWidget", "HandleTraitValuesUpdatedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadSlotsView.CreateAndAddSquadSlotButton
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseSquadSlot               SquadSlotDefinition                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWidget*                          OutSquadSlotButtonHost                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSquadSlotSelectorButton*     ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSlotSelectorButton* UFortSquadSlotsView::CreateAndAddSquadSlotButton(const int32 SquadSlotIndex, const struct FHomebaseSquadSlot& SquadSlotDefinition, class UWidget** OutSquadSlotButtonHost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "CreateAndAddSquadSlotButton");

	Params::FortSquadSlotsView_CreateAndAddSquadSlotButton Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;
	Parms.SquadSlotDefinition = std::move(SquadSlotDefinition);

	UObject::ProcessEvent(Func, &Parms);

	if (OutSquadSlotButtonHost != nullptr)
		*OutSquadSlotButtonHost = Parms.OutSquadSlotButtonHost;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotsView.HandleButtonClicked
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    CommittedButton                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleButtonClicked(class UCommonButton* CommittedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleButtonClicked");

	Params::FortSquadSlotsView_HandleButtonClicked Parms{};

	Parms.CommittedButton = CommittedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.HandleButtonDoubleClicked
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    CommittedButton                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleButtonDoubleClicked(class UCommonButton* CommittedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleButtonDoubleClicked");

	Params::FortSquadSlotsView_HandleButtonDoubleClicked Parms{};

	Parms.CommittedButton = CommittedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.HandleHoveredButtonChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    HoveredButton                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleHoveredButtonChanged(class UCommonButton* HoveredButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleHoveredButtonChanged");

	Params::FortSquadSlotsView_HandleHoveredButtonChanged Parms{};

	Parms.HoveredButton = HoveredButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.HandleRequestOpenSquadSlot
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleRequestOpenSquadSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleRequestOpenSquadSlot");

	Params::FortSquadSlotsView_HandleRequestOpenSquadSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.HandleRequestViewInAll
// (Final, Native, Private)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleRequestViewInAll(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleRequestViewInAll");

	Params::FortSquadSlotsView_HandleRequestViewInAll Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.HandleSelectedButtonChanged
// (Final, Native, Private)
// Parameters:
// class UCommonButton*                    SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::HandleSelectedButtonChanged(class UCommonButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "HandleSelectedButtonChanged");

	Params::FortSquadSlotsView_HandleSelectedButtonChanged Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteUI.FortSquadSlotsView.OnDifferentSquadSlotSelected__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::OnDifferentSquadSlotSelected__DelegateSignature(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "OnDifferentSquadSlotSelected__DelegateSignature");

	Params::FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSquadSlotsView.SelectSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SquadSlotIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SelectSlot(int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "SelectSlot");

	Params::FortSquadSlotsView_SelectSlot Parms{};

	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "SetIdOfSquadToManageBP");

	Params::FortSquadSlotsView_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.SetInPreviewMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bPreview                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetInPreviewMode(const bool bPreview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "SetInPreviewMode");

	Params::FortSquadSlotsView_SetInPreviewMode Parms{};

	Parms.bPreview = bPreview;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.SetIsSelectionLocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ShouldSelectionBeLocked                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotsView::SetIsSelectionLocked(const bool ShouldSelectionBeLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "SetIsSelectionLocked");

	Params::FortSquadSlotsView_SetIsSelectionLocked Parms{};

	Parms.ShouldSelectionBeLocked = ShouldSelectionBeLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotsView.TryGetSelectedSquadSlotSortTypes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSquadSlotSortTypes              OutSlotSortTypes                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotsView::TryGetSelectedSquadSlotSortTypes(struct FSquadSlotSortTypes* OutSlotSortTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "TryGetSelectedSquadSlotSortTypes");

	Params::FortSquadSlotsView_TryGetSelectedSquadSlotSortTypes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSlotSortTypes != nullptr)
		*OutSlotSortTypes = std::move(Parms.OutSlotSortTypes);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotsView.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSquadSlotsView::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "GetIdOfSquadToManageBP");

	Params::FortSquadSlotsView_GetIdOfSquadToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotsView.GetIndexOfSelectedSquadSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSquadSlotsView::GetIndexOfSelectedSquadSlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "GetIndexOfSelectedSquadSlot");

	Params::FortSquadSlotsView_GetIndexOfSelectedSquadSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotsView.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotsView::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotsView", "TryGetStaticSquadDataBP");

	Params::FortSquadSlotsView_TryGetStaticSquadDataBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotWidget.SetCardSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCardSize                       CardSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::SetCardSize(const EFortItemCardSize CardSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotWidget", "SetCardSize");

	Params::FortSquadSlotWidget_SetCardSize Parms{};

	Parms.CardSize = CardSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotWidget.SetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::SetIdOfSquadSlotToManageBP(const class FName& SquadId, const int32 SquadSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotWidget", "SetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotWidget_SetIdOfSquadSlotToManageBP Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadSlotWidget.GetIdOfSquadSlotToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadSlotWidget::GetIdOfSquadSlotToManageBP(class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotWidget", "GetIdOfSquadSlotToManageBP");

	Params::FortSquadSlotWidget_GetIdOfSquadSlotToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteUI.FortSquadSlotWidget.GetItemInSquadSlotBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ULocalPlayer*                     LocalPlayer                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortSquadSlotWidget::GetItemInSquadSlotBP(const class ULocalPlayer* LocalPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotWidget", "GetItemInSquadSlotBP");

	Params::FortSquadSlotWidget_GetItemInSquadSlotBP Parms{};

	Parms.LocalPlayer = LocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadSlotWidget.IsSquadSlotLockedBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSquadSlotWidget::IsSquadSlotLockedBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadSlotWidget", "IsSquadSlotLockedBP");

	Params::FortSquadSlotWidget_IsSquadSlotLockedBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadStatsWidgetBase.HandleSquadSlottingPreviewStateChanged
// (Event, Protected, BlueprintEvent)

void UFortSquadStatsWidgetBase::HandleSquadSlottingPreviewStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadStatsWidgetBase", "HandleSquadSlottingPreviewStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSquadStatsWidgetBase.RequestShowPreviewStats
// (Final, Native, Public, BlueprintCallable)

void UFortSquadStatsWidgetBase::RequestShowPreviewStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadStatsWidgetBase", "RequestShowPreviewStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadStatsWidgetBase.RequestStatsUpdate
// (Final, Native, Public, BlueprintCallable)

void UFortSquadStatsWidgetBase::RequestStatsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadStatsWidgetBase", "RequestStatsUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSquadStatsWidgetBase.GetLocalPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortSquadStatsWidgetBase::GetLocalPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadStatsWidgetBase", "GetLocalPlayerId");

	Params::FortSquadStatsWidgetBase_GetLocalPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadTypeLandingPageBase.CreateAndAddSquadButton
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSquadSelectorButton*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSquadSelectorButton* UFortSquadTypeLandingPageBase::CreateAndAddSquadButton(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadTypeLandingPageBase", "CreateAndAddSquadButton");

	Params::FortSquadTypeLandingPageBase_CreateAndAddSquadButton Parms{};

	Parms.SquadId = SquadId;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSquadTypeLandingPageBase.HandleBackInputAction
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSquadTypeLandingPageBase::HandleBackInputAction(bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadTypeLandingPageBase", "HandleBackInputAction");

	Params::FortSquadTypeLandingPageBase_HandleBackInputAction Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function FortniteUI.FortSquadTypeLandingPageBase.HandlePendingNavigationOp
// (Final, Native, Protected, BlueprintCallable)

void UFortSquadTypeLandingPageBase::HandlePendingNavigationOp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSquadTypeLandingPageBase", "HandlePendingNavigationOp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.Construct
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Param_Outer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortGlobalUIContext*             Param_GlobalUIContext                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCommonInputSubsystem*            Param_CommonInputSubsystem                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortGlobalAction                       GlobalAction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGlobalActionDetailsFunctionContextParam_ActionDetailsContext                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UFortStandardGlobalActionDetailsDataSource*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStandardGlobalActionDetailsDataSource* UFortStandardGlobalActionDetailsDataSource::Construct(class UObject* Param_Outer, class UFortGlobalUIContext* Param_GlobalUIContext, class UCommonInputSubsystem* Param_CommonInputSubsystem, EFortGlobalAction GlobalAction, const struct FFortGlobalActionDetailsFunctionContext& Param_ActionDetailsContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortStandardGlobalActionDetailsDataSource", "Construct");

	Params::FortStandardGlobalActionDetailsDataSource_Construct Parms{};

	Parms.Param_Outer = Param_Outer;
	Parms.Param_GlobalUIContext = Param_GlobalUIContext;
	Parms.Param_CommonInputSubsystem = Param_CommonInputSubsystem;
	Parms.GlobalAction = GlobalAction;
	Parms.Param_ActionDetailsContext = std::move(Param_ActionDetailsContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.ConstructWithDefaultContexts
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Param_Outer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          ContextWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortGlobalAction                       GlobalAction                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGlobalActionDetailsFunctionContextParam_ActionDetailsContext                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UFortStandardGlobalActionDetailsDataSource*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStandardGlobalActionDetailsDataSource* UFortStandardGlobalActionDetailsDataSource::ConstructWithDefaultContexts(class UObject* Param_Outer, class UWidget* ContextWidget, EFortGlobalAction GlobalAction, const struct FFortGlobalActionDetailsFunctionContext& Param_ActionDetailsContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortStandardGlobalActionDetailsDataSource", "ConstructWithDefaultContexts");

	Params::FortStandardGlobalActionDetailsDataSource_ConstructWithDefaultContexts Parms{};

	Parms.Param_Outer = Param_Outer;
	Parms.ContextWidget = ContextWidget;
	Parms.GlobalAction = GlobalAction;
	Parms.Param_ActionDetailsContext = std::move(Param_ActionDetailsContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteUI.FortStandardGlobalActionDetailsDataSource.FortNameDataSourceOnChangeInternalDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::FortNameDataSourceOnChangeInternalDelegate__DelegateSignature(class UObject* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "FortNameDataSourceOnChangeInternalDelegate__DelegateSignature");

	Params::FortStandardGlobalActionDetailsDataSource_FortNameDataSourceOnChangeInternalDelegate__DelegateSignature Parms{};

	Parms.Source = Source;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.HandlePlayerControllerChanged
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::HandlePlayerControllerChanged(class UObject* Source)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "HandlePlayerControllerChanged");

	Params::FortStandardGlobalActionDetailsDataSource_HandlePlayerControllerChanged Parms{};

	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.SetActionDetailsContext
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortGlobalActionDetailsFunctionContextValue                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::SetActionDetailsContext(const struct FFortGlobalActionDetailsFunctionContext& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "SetActionDetailsContext");

	Params::FortStandardGlobalActionDetailsDataSource_SetActionDetailsContext Parms{};

	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.SetCommonInputSubsystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCommonInputSubsystem*            Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::SetCommonInputSubsystem(class UCommonInputSubsystem* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "SetCommonInputSubsystem");

	Params::FortStandardGlobalActionDetailsDataSource_SetCommonInputSubsystem Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.SetGlobalAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortGlobalAction                       Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::SetGlobalAction(EFortGlobalAction Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "SetGlobalAction");

	Params::FortStandardGlobalActionDetailsDataSource_SetGlobalAction Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStandardGlobalActionDetailsDataSource.SetGlobalUIContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGlobalUIContext*             Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStandardGlobalActionDetailsDataSource::SetGlobalUIContext(class UFortGlobalUIContext* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStandardGlobalActionDetailsDataSource", "SetGlobalUIContext");

	Params::FortStandardGlobalActionDetailsDataSource_SetGlobalUIContext Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStatIcon.HandleDifferentAttributeSetBP
// (Event, Protected, BlueprintEvent)

void UFortStatIcon::HandleDifferentAttributeSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStatIcon", "HandleDifferentAttributeSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStatIcon.SetAttribute
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAttribute               InAttribute                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStatIcon::SetAttribute(const struct FGameplayAttribute& InAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStatIcon", "SetAttribute");

	Params::FortStatIcon_SetAttribute Parms{};

	Parms.InAttribute = std::move(InAttribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStatsOverviewDetailsBase.ListenForChanges
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bListen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStatsOverviewDetailsBase::ListenForChanges(bool bListen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStatsOverviewDetailsBase", "ListenForChanges");

	Params::FortStatsOverviewDetailsBase_ListenForChanges Parms{};

	Parms.bListen = bListen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStatsOverviewDetailsBase.RequestStatsUpdate
// (Final, Native, Public, BlueprintCallable)

void UFortStatsOverviewDetailsBase::RequestStatsUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStatsOverviewDetailsBase", "RequestStatsUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStatsOverviewDetailsBase.GetLocalPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortStatsOverviewDetailsBase::GetLocalPlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStatsOverviewDetailsBase", "GetLocalPlayerId");

	Params::FortStatsOverviewDetailsBase_GetLocalPlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.AttemptOpenAllPacks
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::AttemptOpenAllPacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "AttemptOpenAllPacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.AttemptOpenPackByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   CardPackIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreContext::AttemptOpenPackByIndex(int32 CardPackIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "AttemptOpenPackByIndex");

	Params::FortStoreContext_AttemptOpenPackByIndex Parms{};

	Parms.CardPackIndex = CardPackIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.AttemptOpenSinglePack
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::AttemptOpenSinglePack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "AttemptOpenSinglePack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.CardAddedToSummaryComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardAddedToSummaryComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardAddedToSummaryComplete");

	Params::FortStoreContext_CardAddedToSummaryComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardBackRevealComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardBackRevealComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardBackRevealComplete");

	Params::FortStoreContext_CardBackRevealComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardEntryComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardEntryComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardEntryComplete");

	Params::FortStoreContext_CardEntryComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardExitComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardExitComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardExitComplete");

	Params::FortStoreContext_CardExitComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardFlipComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardFlipComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardFlipComplete");

	Params::FortStoreContext_CardFlipComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardFrontRevealComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardFrontRevealComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardFrontRevealComplete");

	Params::FortStoreContext_CardFrontRevealComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardPackDestroyComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardPackDestroyComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardPackDestroyComplete");

	Params::FortStoreContext_CardPackDestroyComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.CardPackOpeningComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::CardPackOpeningComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "CardPackOpeningComplete");

	Params::FortStoreContext_CardPackOpeningComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.ChoiceResultComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ChoiceResultComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ChoiceResultComplete");

	Params::FortStoreContext_ChoiceResultComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.DismissError
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::DismissError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "DismissError");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.EnterCardPackStore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::EnterCardPackStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "EnterCardPackStore");

	Params::FortStoreContext_EnterCardPackStore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.EnterCurrencyStore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttemptedPurchaseCardPackId                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::EnterCurrencyStore(const class FString& AttemptedPurchaseCardPackId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "EnterCurrencyStore");

	Params::FortStoreContext_EnterCurrencyStore Parms{};

	Parms.AttemptedPurchaseCardPackId = std::move(AttemptedPurchaseCardPackId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.EnterRealMoneyStore
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::EnterRealMoneyStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "EnterRealMoneyStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.ErrorOccurred
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ErrorAnalytics                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ErrorOccurred(const class FString& ErrorAnalytics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ErrorOccurred");

	Params::FortStoreContext_ErrorOccurred Parms{};

	Parms.ErrorAnalytics = std::move(ErrorAnalytics);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.ExitCardPackStore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ExitCardPackStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ExitCardPackStore");

	Params::FortStoreContext_ExitCardPackStore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.ExitCurrencyStore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ExitCurrencyStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ExitCurrencyStore");

	Params::FortStoreContext_ExitCurrencyStore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.ExitRealMoneyStore
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::ExitRealMoneyStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ExitRealMoneyStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.ExitSummary
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ExitSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ExitSummary");

	Params::FortStoreContext_ExitSummary Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.ExitWebPayment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::ExitWebPayment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "ExitWebPayment");

	Params::FortStoreContext_ExitWebPayment Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.FreshenCache
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::FreshenCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "FreshenCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.GetAccountItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortAccountItemDefinition*>AccountItemDefinitions                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         AccountItems                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortStoreContext::GetAccountItems(const TArray<class UFortAccountItemDefinition*>& AccountItemDefinitions, TArray<class UFortAccountItem*>* AccountItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetAccountItems");

	Params::FortStoreContext_GetAccountItems Parms{};

	Parms.AccountItemDefinitions = std::move(AccountItemDefinitions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AccountItems != nullptr)
		*AccountItems = std::move(Parms.AccountItems);
}


// Function FortniteUI.FortStoreContext.GetRarityColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EFortRarity                             Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortStoreContext::GetRarityColor(EFortRarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetRarityColor");

	Params::FortStoreContext_GetRarityColor Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetTimeUntilDailyLimitReset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortStoreContext::GetTimeUntilDailyLimitReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetTimeUntilDailyLimitReset");

	Params::FortStoreContext_GetTimeUntilDailyLimitReset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetTimeUntilMarketplaceRefresh
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortStoreContext::GetTimeUntilMarketplaceRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetTimeUntilMarketplaceRefresh");

	Params::FortStoreContext_GetTimeUntilMarketplaceRefresh Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.MakeChoice
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ChoiceIdx                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::MakeChoice(int32 ChoiceIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "MakeChoice");

	Params::FortStoreContext_MakeChoice Parms{};

	Parms.ChoiceIdx = ChoiceIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.MakePurchase
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCardPackOffer                   Offer                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECardPackPurchaseError                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECardPackPurchaseError UFortStoreContext::MakePurchase(const struct FCardPackOffer& Offer, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "MakePurchase");

	Params::FortStoreContext_MakePurchase Parms{};

	Parms.Offer = std::move(Offer);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.OpenWebPayment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AttemptedMTXOfferId                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::OpenWebPayment(const class FString& AttemptedMTXOfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "OpenWebPayment");

	Params::FortStoreContext_OpenWebPayment Parms{};

	Parms.AttemptedMTXOfferId = std::move(AttemptedMTXOfferId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.PurchaseOpeningComplete
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::PurchaseOpeningComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "PurchaseOpeningComplete");

	Params::FortStoreContext_PurchaseOpeningComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.RealMoneyPurchaseFinished
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::RealMoneyPurchaseFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "RealMoneyPurchaseFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.RealMoneyPurchaseStart
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::RealMoneyPurchaseStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "RealMoneyPurchaseStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.StoreHasStarsForSale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::StoreHasStarsForSale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "StoreHasStarsForSale");

	Params::FortStoreContext_StoreHasStarsForSale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.UserViewedAthenaItemShop
// (Final, Native, Public, BlueprintCallable)

void UFortStoreContext::UserViewedAthenaItemShop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "UserViewedAthenaItemShop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.FireInteractionAnalyticsEvent
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           Interaction                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Details                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreContext::FireInteractionAnalyticsEvent(const class FString& Interaction, const class FString& Details) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "FireInteractionAnalyticsEvent");

	Params::FortStoreContext_FireInteractionAnalyticsEvent Parms{};

	Parms.Interaction = std::move(Interaction);
	Parms.Details = std::move(Details);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreContext.GetCard
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CardIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCard                            ResultOut                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::GetCard(int32 CardIdx, struct FCard* ResultOut) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetCard");

	Params::FortStoreContext_GetCard Parms{};

	Parms.CardIdx = CardIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResultOut != nullptr)
		*ResultOut = std::move(Parms.ResultOut);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetNumUnopenedCardPacksRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCardPackItemDefinition*      PackType                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCountChoicePacks                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreContext::GetNumUnopenedCardPacksRemaining(const class UFortCardPackItemDefinition* PackType, bool bCountChoicePacks) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetNumUnopenedCardPacksRemaining");

	Params::FortStoreContext_GetNumUnopenedCardPacksRemaining Parms{};

	Parms.PackType = PackType;
	Parms.bCountChoicePacks = bCountChoicePacks;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetOwnedItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortStoreContext::GetOwnedItemCount(const class UFortItemDefinition* ItemDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetOwnedItemCount");

	Params::FortStoreContext_GetOwnedItemCount Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetPreviousState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortStoreState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortStoreState UFortStoreContext::GetPreviousState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetPreviousState");

	Params::FortStoreContext_GetPreviousState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.GetStoreState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortStoreState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortStoreState UFortStoreContext::GetStoreState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "GetStoreState");

	Params::FortStoreContext_GetStoreState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.IsOpeningDirectPack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::IsOpeningDirectPack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "IsOpeningDirectPack");

	Params::FortStoreContext_IsOpeningDirectPack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.IsOpeningOnePack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::IsOpeningOnePack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "IsOpeningOnePack");

	Params::FortStoreContext_IsOpeningOnePack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreContext.IsWaitingForMcp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreContext::IsWaitingForMcp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreContext", "IsWaitingForMcp");

	Params::FortStoreContext_IsWaitingForMcp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.AutoEquip
// (Final, Native, Public, BlueprintCallable)

void UFortStoreFrontOfferDetailsWidgetBase::AutoEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "AutoEquip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.CanAutoEquip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferDetailsWidgetBase::CanAutoEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "CanAutoEquip");

	Params::FortStoreFrontOfferDetailsWidgetBase_CanAutoEquip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// (Final, Native, Protected)
// Parameters:
// struct FFortPublicAccountInfo           NewInfo                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::HandleCurrentlyViewedAccountInfoChanged(const struct FFortPublicAccountInfo& NewInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "HandleCurrentlyViewedAccountInfoChanged");

	Params::FortStoreFrontOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged Parms{};

	Parms.NewInfo = std::move(NewInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnEnterViewModeActionCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// bool                                    PassThrough                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::OnEnterViewModeActionCommitted(bool* PassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "OnEnterViewModeActionCommitted");

	Params::FortStoreFrontOfferDetailsWidgetBase_OnEnterViewModeActionCommitted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PassThrough != nullptr)
		*PassThrough = Parms.PassThrough;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnOfferSet
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferDetailsWidgetBase::OnOfferSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "OnOfferSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnUpdateStatus
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferDetailsWidgetBase::OnUpdateStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "OnUpdateStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.PurchaseAmountLeft
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferDetailsWidgetBase::PurchaseAmountLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "PurchaseAmountLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.PurchaseAmountRight
// (Event, Public, BlueprintEvent)

void UFortStoreFrontOfferDetailsWidgetBase::PurchaseAmountRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "PurchaseAmountRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RefreshOfferInfo
// (Final, Native, Public, BlueprintCallable)

void UFortStoreFrontOfferDetailsWidgetBase::RefreshOfferInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "RefreshOfferInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RequestExternalPurchase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::RequestExternalPurchase(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "RequestExternalPurchase");

	Params::FortStoreFrontOfferDetailsWidgetBase_RequestExternalPurchase Parms{};

	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetIsInItemViewMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::SetIsInItemViewMode(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "SetIsInItemViewMode");

	Params::FortStoreFrontOfferDetailsWidgetBase_SetIsInItemViewMode Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetPagedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortStoreFrontOfferInfo*> InPagedItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::SetPagedItems(const TArray<class UFortStoreFrontOfferInfo*>& InPagedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "SetPagedItems");

	Params::FortStoreFrontOfferDetailsWidgetBase_SetPagedItems Parms{};

	Parms.InPagedItems = std::move(InPagedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetShouldAllowItemViewModeAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::SetShouldAllowItemViewModeAction(const bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "SetShouldAllowItemViewModeAction");

	Params::FortStoreFrontOfferDetailsWidgetBase_SetShouldAllowItemViewModeAction Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetupOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortStoreFrontOfferInfo*         InOfferData                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::SetupOffer(class UFortStoreFrontOfferInfo* InOfferData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "SetupOffer");

	Params::FortStoreFrontOfferDetailsWidgetBase_SetupOffer Parms{};

	Parms.InOfferData = InOfferData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.UpdateItemViewModeBP
// (Event, Protected, BlueprintEvent)

void UFortStoreFrontOfferDetailsWidgetBase::UpdateItemViewModeBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "UpdateItemViewModeBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.GetOfferInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreFrontOfferInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreFrontOfferInfo* UFortStoreFrontOfferDetailsWidgetBase::GetOfferInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "GetOfferInfo");

	Params::FortStoreFrontOfferDetailsWidgetBase_GetOfferInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendShopInteractionAnalytic
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class FString                           Interaction                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreFrontOfferDetailsWidgetBase::SendShopInteractionAnalytic(const class FString& Interaction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "SendShopInteractionAnalytic");

	Params::FortStoreFrontOfferDetailsWidgetBase_SendShopInteractionAnalytic Parms{};

	Parms.Interaction = std::move(Interaction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShouldHavePurchaseConfirmation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortStoreFrontOfferDetailsWidgetBase::ShouldHavePurchaseConfirmation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreFrontOfferDetailsWidgetBase", "ShouldHavePurchaseConfirmation");

	Params::FortStoreFrontOfferDetailsWidgetBase_ShouldHavePurchaseConfirmation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreRootBase.OnAffiliateUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           AffiliateName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreRootBase::OnAffiliateUpdated(const class FString& AffiliateName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreRootBase", "OnAffiliateUpdated");

	Params::FortStoreRootBase_OnAffiliateUpdated Parms{};

	Parms.AffiliateName = std::move(AffiliateName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortStoreRootBase.OnUpdateOtherPlatformMTXMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    HasOtherPlatformCurrency                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             CurrencyMessageLocText                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortStoreRootBase::OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, const class FText& CurrencyMessageLocText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreRootBase", "OnUpdateOtherPlatformMTXMessage");

	Params::FortStoreRootBase_OnUpdateOtherPlatformMTXMessage Parms{};

	Parms.HasOtherPlatformCurrency = HasOtherPlatformCurrency;
	Parms.CurrencyMessageLocText = std::move(CurrencyMessageLocText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortStoreRootBase.PopulatePrerollOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess)>          Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortStoreRootBase::PopulatePrerollOffers(const TDelegate<void(bool bSuccess)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreRootBase", "PopulatePrerollOffers");

	Params::FortStoreRootBase_PopulatePrerollOffers Parms{};

	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.CloseSummaryScreen
// (Event, Public, BlueprintEvent)

void UFortStoreSummary::CloseSummaryScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "CloseSummaryScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreSummary.FinalizeFavoriteStatus
// (Final, Native, Public, BlueprintCallable)

void UFortStoreSummary::FinalizeFavoriteStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "FinalizeFavoriteStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.HandleContextMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary::HandleContextMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "HandleContextMenuOpenChanged");

	Params::FortStoreSummary_HandleContextMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.HandleContextMenuOpenChangedBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummary::HandleContextMenuOpenChangedBP(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "HandleContextMenuOpenChangedBP");

	Params::FortStoreSummary_HandleContextMenuOpenChangedBP Parms{};

	Parms.bIsOpen = bIsOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortStoreSummary.HideMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary::HideMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "HideMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.NotifyPanelActivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary::NotifyPanelActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "NotifyPanelActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.NotifyPanelDeactivated
// (Native, Protected, BlueprintCallable)

void UFortStoreSummary::NotifyPanelDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "NotifyPanelDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.SetCards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FCard>                    Cards                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortStoreSummary::SetCards(const TArray<struct FCard>& Cards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "SetCards");

	Params::FortStoreSummary_SetCards Parms{};

	Parms.Cards = std::move(Cards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummary.ShowMulchConfirmationModal
// (Native, Public, BlueprintCallable)

void UFortStoreSummary::ShowMulchConfirmationModal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummary", "ShowMulchConfirmationModal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummaryItemButton.GetPopupMenu
// (Final, Native, Private)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortStoreSummaryItemButton::GetPopupMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "GetPopupMenu");

	Params::FortStoreSummaryItemButton_GetPopupMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreSummaryItemButton.HandleItemMulchStateChanged
// (Event, Public, BlueprintEvent)

void UFortStoreSummaryItemButton::HandleItemMulchStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "HandleItemMulchStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortStoreSummaryItemButton.HandleMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsOpen                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::HandleMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "HandleMenuOpenChanged");

	Params::FortStoreSummaryItemButton_HandleMenuOpenChanged Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummaryItemButton.SetStoreCardObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStoreCardObject*                 CardObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::SetStoreCardObject(class UStoreCardObject* CardObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "SetStoreCardObject");

	Params::FortStoreSummaryItemButton_SetStoreCardObject Parms{};

	Parms.CardObject = CardObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummaryItemButton.UpdateMulchListWithItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAddingItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemButton::UpdateMulchListWithItem(bool bAddingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "UpdateMulchListWithItem");

	Params::FortStoreSummaryItemButton_UpdateMulchListWithItem Parms{};

	Parms.bAddingItem = bAddingItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummaryItemButton.GetStoreCardObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStoreCardObject*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStoreCardObject* UFortStoreSummaryItemButton::GetStoreCardObject() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemButton", "GetStoreCardObject");

	Params::FortStoreSummaryItemButton_GetStoreCardObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortStoreSummaryItemPopupMenu.HandleItemChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bItemChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAmmoChanged                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIngredientsChanged                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStoreSummaryItemPopupMenu::HandleItemChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemPopupMenu", "HandleItemChanged");

	Params::FortStoreSummaryItemPopupMenu_HandleItemChanged Parms{};

	Parms.bItemChanged = bItemChanged;
	Parms.bAmmoChanged = bAmmoChanged;
	Parms.bIngredientsChanged = bIngredientsChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortStoreSummaryItemPopupMenu.MulchItem
// (Final, Native, Protected, BlueprintCallable)

void UFortStoreSummaryItemPopupMenu::MulchItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemPopupMenu", "MulchItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortStoreSummaryItemPopupMenu.GetHostButton
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortStoreSummaryItemButton*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortStoreSummaryItemButton* UFortStoreSummaryItemPopupMenu::GetHostButton() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStoreSummaryItemPopupMenu", "GetHostButton");

	Params::FortStoreSummaryItemPopupMenu_GetHostButton Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadManagementScreen.PlayFeedbackForSlottingPerson
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortWorker*                      Worker                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortSurvivorSquadSlottingFeedbackDataFeedbackData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadManagementScreen::PlayFeedbackForSlottingPerson(class UFortWorker* Worker, int32 SlotIndex, const struct FFortSurvivorSquadSlottingFeedbackData& FeedbackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadManagementScreen", "PlayFeedbackForSlottingPerson");

	Params::FortSurvivorSquadManagementScreen_PlayFeedbackForSlottingPerson Parms{};

	Parms.Worker = Worker;
	Parms.SlotIndex = SlotIndex;
	Parms.FeedbackData = std::move(FeedbackData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSurvivorSquadManagementScreen.ShowHelpDialog
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadManagementScreen::ShowHelpDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadManagementScreen", "ShowHelpDialog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSurvivorSquadManagementScreen.UpdateCycleButtons
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadManagementScreen::UpdateCycleButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadManagementScreen", "UpdateCycleButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetPersonalityMatches
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSurvivorSquadSelectorButtonPersonalityMatchesOutPersonalityMatches                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetPersonalityMatches(struct FFortSurvivorSquadSelectorButtonPersonalityMatches* OutPersonalityMatches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadSelectorButton", "TryGetPersonalityMatches");

	Params::FortSurvivorSquadSelectorButton_TryGetPersonalityMatches Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPersonalityMatches != nullptr)
		*OutPersonalityMatches = std::move(Parms.OutPersonalityMatches);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetSquadMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortWorker*>              OutSquadMembers                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetSquadMembers(TArray<class UFortWorker*>* OutSquadMembers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadSelectorButton", "TryGetSquadMembers");

	Params::FortSurvivorSquadSelectorButton_TryGetSquadMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadMembers != nullptr)
		*OutSquadMembers = std::move(Parms.OutSquadMembers);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetSummaryStats
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSurvivorSquadSelectorButtonSummaryStatsOutSummaryStats                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadSelectorButton::TryGetSummaryStats(struct FFortSurvivorSquadSelectorButtonSummaryStats* OutSummaryStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadSelectorButton", "TryGetSummaryStats");

	Params::FortSurvivorSquadSelectorButton_TryGetSummaryStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSummaryStats != nullptr)
		*OutSummaryStats = std::move(Parms.OutSummaryStats);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadStatMatchBase.OnStatMatchUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FFortUISurvivorSquadStatMatch    UpdatedMatch                                           (Parm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchBase::OnStatMatchUpdated(const struct FFortUISurvivorSquadStatMatch& UpdatedMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchBase", "OnStatMatchUpdated");

	Params::FortSurvivorSquadStatMatchBase_OnStatMatchUpdated Parms{};

	Parms.UpdatedMatch = std::move(UpdatedMatch);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.AddStatMatch
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSurvivorSquadStatMatchBase*  SetBonus                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::AddStatMatch(class UFortSurvivorSquadStatMatchBase* SetBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "AddStatMatch");

	Params::FortSurvivorSquadStatMatchesBase_AddStatMatch Parms{};

	Parms.SetBonus = SetBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.HandleDifferentSquadSetBP
// (Event, Protected, BlueprintEvent)

void UFortSurvivorSquadStatMatchesBase::HandleDifferentSquadSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "HandleDifferentSquadSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.SetIdOfSquadToManageBP
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::SetIdOfSquadToManageBP(const class FName& SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "SetIdOfSquadToManageBP");

	Params::FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.SetSummaryView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInSummaryView                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSurvivorSquadStatMatchesBase::SetSummaryView(bool bInSummaryView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "SetSummaryView");

	Params::FortSurvivorSquadStatMatchesBase_SetSummaryView Parms{};

	Parms.bInSummaryView = bInSummaryView;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.GetIdOfSquadToManageBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortSurvivorSquadStatMatchesBase::GetIdOfSquadToManageBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "GetIdOfSquadToManageBP");

	Params::FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadStatMatchesBase.TryGetStaticSquadDataBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHomebaseSquad                   OutSquadData                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSurvivorSquadStatMatchesBase::TryGetStaticSquadDataBP(struct FHomebaseSquad* OutSquadData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadStatMatchesBase", "TryGetStaticSquadDataBP");

	Params::FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadData != nullptr)
		*OutSquadData = std::move(Parms.OutSquadData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortSurvivorSquadSummaryStatItem.SetAttributeModifierAccumulation
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAttributeModifierAccumulationAccumulation                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortSurvivorSquadSummaryStatItem::SetAttributeModifierAccumulation(const struct FFortAttributeModifierAccumulation& Accumulation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSurvivorSquadSummaryStatItem", "SetAttributeModifierAccumulation");

	Params::FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation Parms{};

	Parms.Accumulation = std::move(Accumulation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTabButtonInterface.SetTabLabelInfo
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortTabButtonLabelInfo          TabLabelInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void IFortTabButtonInterface::SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTabButtonInterface", "SetTabLabelInfo");

	Params::FortTabButtonInterface_SetTabLabelInfo Parms{};

	Parms.TabLabelInfo = std::move(TabLabelInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTeamMemberPedestalNameplate.OnPedestalSelectedChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTeamMemberPedestalNameplate::OnPedestalSelectedChanged(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestalNameplate", "OnPedestalSelectedChanged");

	Params::FortTeamMemberPedestalNameplate_OnPedestalSelectedChanged Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTeamMemberPedestalNameplate.OnReadyStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsReadyForMatchmaking                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTeamMemberPedestalNameplate::OnReadyStatusChanged(bool bIsReadyForMatchmaking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamMemberPedestalNameplate", "OnReadyStatusChanged");

	Params::FortTeamMemberPedestalNameplate_OnReadyStatusChanged Parms{};

	Parms.bIsReadyForMatchmaking = bIsReadyForMatchmaking;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTheaterSelect.OnNavigationLeft
// (Event, Public, BlueprintEvent)

void UFortTheaterSelect::OnNavigationLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterSelect", "OnNavigationLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortTheaterSelect.OnNavigationRight
// (Event, Public, BlueprintEvent)

void UFortTheaterSelect::OnNavigationRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterSelect", "OnNavigationRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortTheaterSelect.GetSurvivalCMSText
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             Title                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             Body                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTheaterSelect::GetSurvivalCMSText(class FText* Title, class FText* Body) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterSelect", "GetSurvivalCMSText");

	Params::FortTheaterSelect_GetSurvivalCMSText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Title != nullptr)
		*Title = std::move(Parms.Title);

	if (Body != nullptr)
		*Body = std::move(Parms.Body);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTheaterSelect.GetTheaterRecommendedRatingRange
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           UniqueId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minimum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Maximum                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTheaterSelect::GetTheaterRecommendedRatingRange(const class FString& UniqueId, int32* Minimum, int32* Maximum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterSelect", "GetTheaterRecommendedRatingRange");

	Params::FortTheaterSelect_GetTheaterRecommendedRatingRange Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Minimum != nullptr)
		*Minimum = Parms.Minimum;

	if (Maximum != nullptr)
		*Maximum = Parms.Maximum;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTierIndicator.ClearPreviewState
// (Final, Native, Public, BlueprintCallable)

void UFortTierIndicator::ClearPreviewState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTierIndicator", "ClearPreviewState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTierIndicator.SetBrushSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortBrushSize                          Param_BrushSize                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTierIndicator::SetBrushSize(EFortBrushSize Param_BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTierIndicator", "SetBrushSize");

	Params::FortTierIndicator_SetBrushSize Parms{};

	Parms.Param_BrushSize = Param_BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTierIndicator.SetInterPipPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Param_InterPipPadding                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTierIndicator::SetInterPipPadding(float Param_InterPipPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTierIndicator", "SetInterPipPadding");

	Params::FortTierIndicator_SetInterPipPadding Parms{};

	Parms.Param_InterPipPadding = Param_InterPipPadding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTierIndicator.SetItemToRepresent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        Param_ItemToRepresent                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTierIndicator::SetItemToRepresent(class UFortItem* Param_ItemToRepresent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTierIndicator", "SetItemToRepresent");

	Params::FortTierIndicator_SetItemToRepresent Parms{};

	Parms.Param_ItemToRepresent = Param_ItemToRepresent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTierIndicator.SetPreviewState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   TierIncrease                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTierIndicator::SetPreviewState(int32 TierIncrease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTierIndicator", "SetPreviewState");

	Params::FortTierIndicator_SetPreviewState Parms{};

	Parms.TierIncrease = TierIncrease;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTimelineBase.AddReplayEventToTimeline
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortReplayEventType                    EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RelativeTime                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTimelineBase::AddReplayEventToTimeline(EFortReplayEventType EventType, float RelativeTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimelineBase", "AddReplayEventToTimeline");

	Params::FortTimelineBase_AddReplayEventToTimeline Parms{};

	Parms.EventType = EventType;
	Parms.RelativeTime = RelativeTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTimelineBase.ClearTimelineMarkers
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFortTimelineBase::ClearTimelineMarkers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimelineBase", "ClearTimelineMarkers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortTimelineBase.GetProgressBarWidget
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortTimelineBase::GetProgressBarWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimelineBase", "GetProgressBarWidget");

	Params::FortTimelineBase_GetProgressBarWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTimespanDataSource.AddOnChangeDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UObject* Source)>  InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortTimespanDataSource::AddOnChangeDelegate(const TDelegate<void(class UObject* Source)>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimespanDataSource", "AddOnChangeDelegate");

	Params::FortTimespanDataSource_AddOnChangeDelegate Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTimespanDataSource.RemoveOnChangeDelegate
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UObject* Source)>  InDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortTimespanDataSource::RemoveOnChangeDelegate(const TDelegate<void(class UObject* Source)>& InDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimespanDataSource", "RemoveOnChangeDelegate");

	Params::FortTimespanDataSource_RemoveOnChangeDelegate Parms{};

	Parms.InDelegate = InDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTimespanDataSource.GetValue
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan IFortTimespanDataSource::GetValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimespanDataSource", "GetValue");

	Params::FortTimespanDataSource_GetValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetCombinedDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutDescription                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::GetCombinedDescription(const class UObject* Object, const class UFortTooltipContext* TooltipContext, class FText* OutDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetCombinedDescription");

	Params::FortTooltipUIContext_GetCombinedDescription Parms{};

	Parms.Object = Object;
	Parms.TooltipContext = TooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetComparisonStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ComparisonObject                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortDisplayAttribute>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortDisplayAttribute> UFortTooltipUIContext::GetComparisonStats(const class UObject* Object, const class UObject* ComparisonObject, const class UFortTooltipContext* TooltipContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetComparisonStats");

	Params::FortTooltipUIContext_GetComparisonStats Parms{};

	Parms.Object = Object;
	Parms.ComparisonObject = ComparisonObject;
	Parms.TooltipContext = TooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::GetDescription(const class UObject* Object, const class UFortTooltipContext* TooltipContext, TArray<class FText>* OutDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetDescription");

	Params::FortTooltipUIContext_GetDescription Parms{};

	Parms.Object = Object;
	Parms.TooltipContext = TooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetTooltipAttributes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayAttribute>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayAttribute> UFortTooltipUIContext::GetTooltipAttributes(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetTooltipAttributes");

	Params::FortTooltipUIContext_GetTooltipAttributes Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetTooltipStat
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDisplayAttribute            OutDisplayAttribute                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::GetTooltipStat(const class UObject* Object, class UFortTooltipContext* TooltipContext, const struct FGameplayTag& Token, struct FFortDisplayAttribute* OutDisplayAttribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetTooltipStat");

	Params::FortTooltipUIContext_GetTooltipStat Parms{};

	Parms.Object = Object;
	Parms.TooltipContext = TooltipContext;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttribute != nullptr)
		*OutDisplayAttribute = std::move(Parms.OutDisplayAttribute);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetTooltipStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortDisplayAttribute>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortDisplayAttribute> UFortTooltipUIContext::GetTooltipStats(const class UObject* Object, const class UFortTooltipContext* TooltipContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetTooltipStats");

	Params::FortTooltipUIContext_GetTooltipStats Parms{};

	Parms.Object = Object;
	Parms.TooltipContext = TooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetUpgradeStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              TooltipContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortDisplayAttribute>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortDisplayAttribute> UFortTooltipUIContext::GetUpgradeStats(const class UObject* Object, class UFortTooltipContext* TooltipContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetUpgradeStats");

	Params::FortTooltipUIContext_GetUpgradeStats Parms{};

	Parms.Object = Object;
	Parms.TooltipContext = TooltipContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.HasTooltipStats
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::HasTooltipStats(const class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "HasTooltipStats");

	Params::FortTooltipUIContext_HasTooltipStats Parms{};

	Parms.Object = Object;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetDisplayNameAndMultiBrushForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutDisplayName                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              OutBrush                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::GetDisplayNameAndMultiBrushForTag(const struct FGameplayTag& Tag, class FText* OutDisplayName, struct FFortMultiSizeBrush* OutBrush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetDisplayNameAndMultiBrushForTag");

	Params::FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayName != nullptr)
		*OutDisplayName = std::move(Parms.OutDisplayName);

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTooltipUIContext.GetUIDataForTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTagUIData                   OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltipUIContext::GetUIDataForTag(const struct FGameplayTag& Tag, struct FFortTagUIData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipUIContext", "GetUIDataForTag");

	Params::FortTooltipUIContext_GetUIDataForTag Parms{};

	Parms.Tag = std::move(Tag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTopBarPanel.AddIconToScreen
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UCommonLazyImage*                 Image                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTopBarPanel::AddIconToScreen(class UCommonLazyImage* Image)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTopBarPanel", "AddIconToScreen");

	Params::FortTopBarPanel_AddIconToScreen Parms{};

	Parms.Image = Image;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTopBarPanel.SetActiveInvitesCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewActiveInvitesCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTopBarPanel::SetActiveInvitesCount(int32 NewActiveInvitesCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTopBarPanel", "SetActiveInvitesCount");

	Params::FortTopBarPanel_SetActiveInvitesCount Parms{};

	Parms.NewActiveInvitesCount = NewActiveInvitesCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTopBarPanel.SetOnlineFriendsCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewOnlineFriendsCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTopBarPanel::SetOnlineFriendsCount(int32 NewOnlineFriendsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTopBarPanel", "SetOnlineFriendsCount");

	Params::FortTopBarPanel_SetOnlineFriendsCount Parms{};

	Parms.NewOnlineFriendsCount = NewOnlineFriendsCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTouchControlRegion.MovePlayerRegionTick
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::MovePlayerRegionTick(const struct FGeometry& InGeometry, const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "MovePlayerRegionTick");

	Params::FortTouchControlRegion_MovePlayerRegionTick Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnAdditionalTouchEnded
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnAdditionalTouchEnded(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnAdditionalTouchEnded");

	Params::FortTouchControlRegion_OnAdditionalTouchEnded Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnAdditionalTouchLost
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PointerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnAdditionalTouchLost(int32 PointerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnAdditionalTouchLost");

	Params::FortTouchControlRegion_OnAdditionalTouchLost Parms{};

	Parms.PointerIndex = PointerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnAdditionalTouchStarted
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnAdditionalTouchStarted(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnAdditionalTouchStarted");

	Params::FortTouchControlRegion_OnAdditionalTouchStarted Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnBuildModeChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bBuildModeEnabled                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnBuildModeChanged(bool bBuildModeEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnBuildModeChanged");

	Params::FortTouchControlRegion_OnBuildModeChanged Parms{};

	Parms.bBuildModeEnabled = bBuildModeEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnCursorModeChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bCursorModeEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      CustomWidget                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnCursorModeChanged(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CustomWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnCursorModeChanged");

	Params::FortTouchControlRegion_OnCursorModeChanged Parms{};

	Parms.bCursorModeEnabled = bCursorModeEnabled;
	Parms.ActionName = ActionName;
	Parms.CustomWidget = CustomWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchEnded
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnMovePlayerRegionTouchEnded(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnMovePlayerRegionTouchEnded");

	Params::FortTouchControlRegion_OnMovePlayerRegionTouchEnded Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchLost
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PointerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnMovePlayerRegionTouchLost(int32 PointerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnMovePlayerRegionTouchLost");

	Params::FortTouchControlRegion_OnMovePlayerRegionTouchLost Parms{};

	Parms.PointerIndex = PointerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchMoved
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnMovePlayerRegionTouchMoved(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnMovePlayerRegionTouchMoved");

	Params::FortTouchControlRegion_OnMovePlayerRegionTouchMoved Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchStarted
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnMovePlayerRegionTouchStarted(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnMovePlayerRegionTouchStarted");

	Params::FortTouchControlRegion_OnMovePlayerRegionTouchStarted Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnRegionTouchEnded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EFortTouchControlRegion                 Region                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRegionTouchEnded(const EFortTouchControlRegion Region, const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRegionTouchEnded");

	Params::FortTouchControlRegion_OnRegionTouchEnded Parms{};

	Parms.Region = Region;
	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTouchControlRegion.OnRegionTouchMoved
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// EFortTouchControlRegion                 Region                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector2D                        MoveDelta                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRegionTouchMoved(const EFortTouchControlRegion Region, const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent, const struct FVector2D& MoveDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRegionTouchMoved");

	Params::FortTouchControlRegion_OnRegionTouchMoved Parms{};

	Parms.Region = Region;
	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);
	Parms.MoveDelta = std::move(MoveDelta);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTouchControlRegion.OnRegionTouchStarted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// EFortTouchControlRegion                 Region                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRegionTouchStarted(const EFortTouchControlRegion Region, const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRegionTouchStarted");

	Params::FortTouchControlRegion_OnRegionTouchStarted Parms{};

	Parms.Region = Region;
	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchEnded
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRotatePlayerRegionTouchEnded(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRotatePlayerRegionTouchEnded");

	Params::FortTouchControlRegion_OnRotatePlayerRegionTouchEnded Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchLost
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PointerIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRotatePlayerRegionTouchLost(int32 PointerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRotatePlayerRegionTouchLost");

	Params::FortTouchControlRegion_OnRotatePlayerRegionTouchLost Parms{};

	Parms.PointerIndex = PointerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchMoved
// (Native, Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector2D                        MoveDelta                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRotatePlayerRegionTouchMoved(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent, const struct FVector2D& MoveDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRotatePlayerRegionTouchMoved");

	Params::FortTouchControlRegion_OnRotatePlayerRegionTouchMoved Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);
	Parms.MoveDelta = std::move(MoveDelta);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchStarted
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::OnRotatePlayerRegionTouchStarted(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "OnRotatePlayerRegionTouchStarted");

	Params::FortTouchControlRegion_OnRotatePlayerRegionTouchStarted Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.ResetTouchState
// (Final, Native, Protected)

void UFortTouchControlRegion::ResetTouchState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "ResetTouchState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.RotatePlayerRegionTick
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::RotatePlayerRegionTick(const struct FGeometry& InGeometry, const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "RotatePlayerRegionTick");

	Params::FortTouchControlRegion_RotatePlayerRegionTick Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.SetFeedbackPosition
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InGeometry                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    InGestureEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::SetFeedbackPosition(const struct FGeometry& InGeometry, const struct FPointerEvent& InGestureEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "SetFeedbackPosition");

	Params::FortTouchControlRegion_SetFeedbackPosition Parms{};

	Parms.InGeometry = std::move(InGeometry);
	Parms.InGestureEvent = std::move(InGestureEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.SetLockOnStickPosition
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        LocalPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::SetLockOnStickPosition(const struct FVector2D& LocalPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "SetLockOnStickPosition");

	Params::FortTouchControlRegion_SetLockOnStickPosition Parms{};

	Parms.LocalPos = std::move(LocalPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.SetMoveStickPos
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewMoveStickPos                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::SetMoveStickPos(const struct FVector2D& NewMoveStickPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "SetMoveStickPos");

	Params::FortTouchControlRegion_SetMoveStickPos Parms{};

	Parms.NewMoveStickPos = std::move(NewMoveStickPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.UpdateLockOnStickOrigin
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        LocalPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsTouchStartEvent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::UpdateLockOnStickOrigin(const struct FVector2D& LocalPos, bool IsTouchStartEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "UpdateLockOnStickOrigin");

	Params::FortTouchControlRegion_UpdateLockOnStickOrigin Parms{};

	Parms.LocalPos = std::move(LocalPos);
	Parms.IsTouchStartEvent = IsTouchStartEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.UpdateLockOnStickPosition
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        LocalPos                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::UpdateLockOnStickPosition(const struct FVector2D& LocalPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "UpdateLockOnStickPosition");

	Params::FortTouchControlRegion_UpdateLockOnStickPosition Parms{};

	Parms.LocalPos = std::move(LocalPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.UpdateMoveStickLock
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   DeltaTime                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchControlRegion::UpdateMoveStickLock(const float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "UpdateMoveStickLock");

	Params::FortTouchControlRegion_UpdateMoveStickLock Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchControlRegion.CanLockMoveStick
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::CanLockMoveStick() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "CanLockMoveStick");

	Params::FortTouchControlRegion_CanLockMoveStick Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.GetTouchStickRange
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortTouchControlRegion::GetTouchStickRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "GetTouchStickRange");

	Params::FortTouchControlRegion_GetTouchStickRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.IsFiring
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::IsFiring() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "IsFiring");

	Params::FortTouchControlRegion_IsFiring Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.IsMovePlayerRegionTouched
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::IsMovePlayerRegionTouched() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "IsMovePlayerRegionTouched");

	Params::FortTouchControlRegion_IsMovePlayerRegionTouched Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.IsRotatePlayerRegionTouched
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::IsRotatePlayerRegionTouched() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "IsRotatePlayerRegionTouched");

	Params::FortTouchControlRegion_IsRotatePlayerRegionTouched Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.MoveStickIsInLockPosition
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::MoveStickIsInLockPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "MoveStickIsInLockPosition");

	Params::FortTouchControlRegion_MoveStickIsInLockPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchControlRegion.MoveStickIsInSprintThreshold
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchControlRegion::MoveStickIsInSprintThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchControlRegion", "MoveStickIsInSprintThreshold");

	Params::FortTouchControlRegion_MoveStickIsInSprintThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchLookStick.SetFiringState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsFiring                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchLookStick::SetFiringState(bool IsFiring)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "SetFiringState");

	Params::FortTouchLookStick_SetFiringState Parms{};

	Parms.IsFiring = IsFiring;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchLookStick.SetSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchLookStick::SetSize(float NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "SetSize");

	Params::FortTouchLookStick_SetSize Parms{};

	Parms.NewSize = NewSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchLookStick.SetTouchStickPositionAbsolute
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchPosition                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchLookStick::SetTouchStickPositionAbsolute(const struct FVector2D& TouchPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "SetTouchStickPositionAbsolute");

	Params::FortTouchLookStick_SetTouchStickPositionAbsolute Parms{};

	Parms.TouchPosition = std::move(TouchPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchLookStick.SetTouchStickPositionLocal
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        TouchPosition                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchLookStick::SetTouchStickPositionLocal(const struct FVector2D& TouchPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "SetTouchStickPositionLocal");

	Params::FortTouchLookStick_SetTouchStickPositionLocal Parms{};

	Parms.TouchPosition = std::move(TouchPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchLookStick.GetShowAllTimeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchLookStick::GetShowAllTimeTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "GetShowAllTimeTime");

	Params::FortTouchLookStick_GetShowAllTimeTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchLookStick.GetSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortTouchLookStick::GetSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "GetSize");

	Params::FortTouchLookStick_GetSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchLookStick.IsFireButtonUnderTouch
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        TouchPosition                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchLookStick::IsFireButtonUnderTouch(const struct FVector2D& TouchPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchLookStick", "IsFireButtonUnderTouch");

	Params::FortTouchLookStick_IsFireButtonUnderTouch Parms{};

	Parms.TouchPosition = std::move(TouchPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchMoveStick.HandleTouchEnded
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortTouchMoveStick::HandleTouchEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "HandleTouchEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchMoveStick.HandleTouchStarted
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortTouchMoveStick::HandleTouchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "HandleTouchStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchMoveStick.SetMovementLockStatus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MovementIsLocked                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchMoveStick::SetMovementLockStatus(bool MovementIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "SetMovementLockStatus");

	Params::FortTouchMoveStick_SetMovementLockStatus Parms{};

	Parms.MovementIsLocked = MovementIsLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchMoveStick.SetStickPosition
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTouchMoveStick::SetStickPosition(const struct FVector2D& NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "SetStickPosition");

	Params::FortTouchMoveStick_SetStickPosition Parms{};

	Parms.NewPosition = std::move(NewPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTouchMoveStick.GetHalfHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortTouchMoveStick::GetHalfHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "GetHalfHeight");

	Params::FortTouchMoveStick_GetHalfHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTouchMoveStick.IsTouched
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTouchMoveStick::IsTouched() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTouchMoveStick", "IsTouched");

	Params::FortTouchMoveStick_IsTouched Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTransformKeyPicker.RebuildTransformKeys
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  InDataProvider                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTransformKeyPicker::RebuildTransformKeys(const TArray<class UObject*>& InDataProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransformKeyPicker", "RebuildTransformKeys");

	Params::FortTransformKeyPicker_RebuildTransformKeys Parms{};

	Parms.InDataProvider = std::move(InDataProvider);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTransformSlotItemPicker.RebuildSlottableItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EFortInventoryFilter>            ItemFilters                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ItemsToIgnore                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTransformSlotItemPicker::RebuildSlottableItems(const TArray<EFortInventoryFilter>& ItemFilters, EFortItemType ItemType, const TArray<class UFortItem*>& ItemsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTransformSlotItemPicker", "RebuildSlottableItems");

	Params::FortTransformSlotItemPicker_RebuildSlottableItems Parms{};

	Parms.ItemFilters = std::move(ItemFilters);
	Parms.ItemType = ItemType;
	Parms.ItemsToIgnore = std::move(ItemsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTrapDefenderItemPicker.HandleSelectionCommittedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortItem*                        CommittedItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTrapDefenderItemPicker::HandleSelectionCommittedBP(class UFortItem* CommittedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapDefenderItemPicker", "HandleSelectionCommittedBP");

	Params::FortTrapDefenderItemPicker_HandleSelectionCommittedBP Parms{};

	Parms.CommittedItem = CommittedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTwitchLogin.CancelLoginFlow
// (Final, Native, Private, BlueprintCallable)

void UFortTwitchLogin::CancelLoginFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "CancelLoginFlow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTwitchLogin.GetAccountName
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortTwitchLogin::GetAccountName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "GetAccountName");

	Params::FortTwitchLogin_GetAccountName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTwitchLogin.GetLinkedTwitchAccountName
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortTwitchLogin::GetLinkedTwitchAccountName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "GetLinkedTwitchAccountName");

	Params::FortTwitchLogin_GetLinkedTwitchAccountName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTwitchLogin.IsLoggedIn
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTwitchLogin::IsLoggedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "IsLoggedIn");

	Params::FortTwitchLogin_IsLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortTwitchLogin.Login
// (Final, Native, Private, BlueprintCallable)

void UFortTwitchLogin::Login()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "Login");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTwitchLogin.Logout
// (Final, Native, Private, BlueprintCallable)

void UFortTwitchLogin::Logout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "Logout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTwitchLogin.OnLinkedTwitchAccountChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           AccountName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTwitchLogin::OnLinkedTwitchAccountChanged(const class FString& AccountName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "OnLinkedTwitchAccountChanged");

	Params::FortTwitchLogin_OnLinkedTwitchAccountChanged Parms{};

	Parms.AccountName = std::move(AccountName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTwitchLogin.OnLoginFlowModalCreated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortTwitchLoginModalWidget*      Modal                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTwitchLogin::OnLoginFlowModalCreated(class UFortTwitchLoginModalWidget* Modal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "OnLoginFlowModalCreated");

	Params::FortTwitchLogin_OnLoginFlowModalCreated Parms{};

	Parms.Modal = Modal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTwitchLogin.OnLoginFlowModalDismissed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UFortTwitchLoginModalWidget*      Modal                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTwitchLogin::OnLoginFlowModalDismissed(class UFortTwitchLoginModalWidget* Modal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "OnLoginFlowModalDismissed");

	Params::FortTwitchLogin_OnLoginFlowModalDismissed Parms{};

	Parms.Modal = Modal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortTwitchLogin.OnLoginStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bLoggedIn                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AccountName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTwitchLogin::OnLoginStatusChanged(bool bLoggedIn, const class FString& AccountName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "OnLoginStatusChanged");

	Params::FortTwitchLogin_OnLoginStatusChanged Parms{};

	Parms.bLoggedIn = bLoggedIn;
	Parms.AccountName = std::move(AccountName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTwitchLogin.OnShowLoginError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ErrorTitle                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ErrorMessage                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortTwitchLogin::OnShowLoginError(const class FText& ErrorTitle, const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLogin", "OnShowLoginError");

	Params::FortTwitchLogin_OnShowLoginError Parms{};

	Parms.ErrorTitle = std::move(ErrorTitle);
	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortTwitchLoginModalWidget.OnNativeHostContentChanged
// (Native, Event, Public, BlueprintEvent)

void UFortTwitchLoginModalWidget::OnNativeHostContentChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchLoginModalWidget", "OnNativeHostContentChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetAssetFromTemplateId
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* UFortUIBlueprintFunctionLibrary::GetAssetFromTemplateId(const class FString& TemplateId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetAssetFromTemplateId");

	Params::FortUIBlueprintFunctionLibrary_GetAssetFromTemplateId Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemDefinitionSmallPreviewImageBrush
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UFortUIBlueprintFunctionLibrary::GetItemDefinitionSmallPreviewImageBrush(const class UFortItemDefinition* ItemDefinition, EFortBrushSize BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetItemDefinitionSmallPreviewImageBrush");

	Params::FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemDefinitionSmallPreviewImageMultiSizeBrush
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMultiSizeBrush UFortUIBlueprintFunctionLibrary::GetItemDefinitionSmallPreviewImageMultiSizeBrush(const class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetItemDefinitionSmallPreviewImageMultiSizeBrush");

	Params::FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemSmallPreviewImageBrush
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UFortUIBlueprintFunctionLibrary::GetItemSmallPreviewImageBrush(const class UFortItem* Item, EFortBrushSize BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetItemSmallPreviewImageBrush");

	Params::FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush Parms{};

	Parms.Item = Item;
	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemSmallPreviewImageMultiSizeBrush
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMultiSizeBrush UFortUIBlueprintFunctionLibrary::GetItemSmallPreviewImageMultiSizeBrush(const class UFortItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetItemSmallPreviewImageMultiSizeBrush");

	Params::FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaBoolOnOffer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCardPackOffer                   Offer                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDefaultValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIBlueprintFunctionLibrary::GetMetaBoolOnOffer(const struct FCardPackOffer& Offer, const class FString& Key, bool bDefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetMetaBoolOnOffer");

	Params::FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer Parms{};

	Parms.Offer = std::move(Offer);
	Parms.Key = std::move(Key);
	Parms.bDefaultValue = bDefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaIntOnOffer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCardPackOffer                   Offer                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefaultValue                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIBlueprintFunctionLibrary::GetMetaIntOnOffer(const struct FCardPackOffer& Offer, const class FString& Key, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetMetaIntOnOffer");

	Params::FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer Parms{};

	Parms.Offer = std::move(Offer);
	Parms.Key = std::move(Key);
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaStringOnOffer
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCardPackOffer                   Offer                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortUIBlueprintFunctionLibrary::GetMetaStringOnOffer(const struct FCardPackOffer& Offer, const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetMetaStringOnOffer");

	Params::FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer Parms{};

	Parms.Offer = std::move(Offer);
	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetOrLoadSynchronously
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        SoftTexture2D                                          (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortUIBlueprintFunctionLibrary::GetOrLoadSynchronously(const TSoftObjectPtr<class UTexture2D>& SoftTexture2D)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetOrLoadSynchronously");

	Params::FortUIBlueprintFunctionLibrary_GetOrLoadSynchronously Parms{};

	Parms.SoftTexture2D = SoftTexture2D;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetStandardBrushSize
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFortUIBlueprintFunctionLibrary::GetStandardBrushSize(EFortBrushSize BrushSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetStandardBrushSize");

	Params::FortUIBlueprintFunctionLibrary_GetStandardBrushSize Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetTimespanAsSimpleString
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTimespan                        Timespan                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUIBlueprintFunctionLibrary::GetTimespanAsSimpleString(const struct FTimespan& Timespan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortUIBlueprintFunctionLibrary", "GetTimespanAsSimpleString");

	Params::FortUIBlueprintFunctionLibrary_GetTimespanAsSimpleString Parms{};

	Parms.Timespan = std::move(Timespan);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.ArePartyFeaturesEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::ArePartyFeaturesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "ArePartyFeaturesEnabled");

	Params::FortUIDataConfigurationContext_ArePartyFeaturesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.AreSocialFeaturesEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::AreSocialFeaturesEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "AreSocialFeaturesEnabled");

	Params::FortUIDataConfigurationContext_AreSocialFeaturesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.GetFrontEndFFSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPostProcessSettings             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FPostProcessSettings UFortUIDataConfigurationContext::GetFrontEndFFSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "GetFrontEndFFSettings");

	Params::FortUIDataConfigurationContext_GetFrontEndFFSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.GetItemTypesToUseVaultCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortItemType>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortItemType> UFortUIDataConfigurationContext::GetItemTypesToUseVaultCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "GetItemTypesToUseVaultCamera");

	Params::FortUIDataConfigurationContext_GetItemTypesToUseVaultCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.IsChatEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::IsChatEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "IsChatEnabled");

	Params::FortUIDataConfigurationContext_IsChatEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.IsLimitedToES2Features
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::IsLimitedToES2Features() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "IsLimitedToES2Features");

	Params::FortUIDataConfigurationContext_IsLimitedToES2Features Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.IsQuestVOEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::IsQuestVOEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "IsQuestVOEnabled");

	Params::FortUIDataConfigurationContext_IsQuestVOEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIDataConfigurationContext.UseSpecificPinataWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIDataConfigurationContext::UseSpecificPinataWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIDataConfigurationContext", "UseSpecificPinataWeapon");

	Params::FortUIDataConfigurationContext_UseSpecificPinataWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIMessageManager.AddMessageItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortUIMessageItemWidget>MessageItemClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MessageID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StackCount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUIMessageItemWidget*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIMessageItemWidget* UFortUIMessageManager::AddMessageItem(TSubclassOf<class UFortUIMessageItemWidget> MessageItemClass, class APlayerController* OwningPlayer, class FName MessageID, int32 StackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageManager", "AddMessageItem");

	Params::FortUIMessageManager_AddMessageItem Parms{};

	Parms.MessageItemClass = MessageItemClass;
	Parms.OwningPlayer = OwningPlayer;
	Parms.MessageID = MessageID;
	Parms.StackCount = StackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIMessageManager.GetNextMessageInQueue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortUIMessageItemWidget*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUIMessageItemWidget* UFortUIMessageManager::GetNextMessageInQueue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageManager", "GetNextMessageInQueue");

	Params::FortUIMessageManager_GetNextMessageInQueue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIMessageManager.HandleMessageDisplayed
// (Final, Native, Private)
// Parameters:
// class UFortUIMessageItemWidget*         MessageItem                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIMessageManager::HandleMessageDisplayed(class UFortUIMessageItemWidget* MessageItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageManager", "HandleMessageDisplayed");

	Params::FortUIMessageManager_HandleMessageDisplayed Parms{};

	Parms.MessageItem = MessageItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIMessageManager.HandleMessageRemoved
// (Final, Native, Private)
// Parameters:
// class UFortUIMessageItemWidget*         MessageItem                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIMessageManager::HandleMessageRemoved(class UFortUIMessageItemWidget* MessageItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageManager", "HandleMessageRemoved");

	Params::FortUIMessageManager_HandleMessageRemoved Parms{};

	Parms.MessageItem = MessageItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIMessageManager.GetNumDisplayedItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIMessageManager::GetNumDisplayedItems() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessageManager", "GetNumDisplayedItems");

	Params::FortUIMessageManager_GetNumDisplayedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIMessagesPageBase.FillMessagesList
// (Final, Native, Public, BlueprintCallable)

void UFortUIMessagesPageBase::FillMessagesList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessagesPageBase", "FillMessagesList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIMessagesPageBase.OnMessageAvailable
// (Final, Native, Private)

void UFortUIMessagesPageBase::OnMessageAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessagesPageBase", "OnMessageAvailable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIMessagesPageBase.OnNotificationCleared
// (Final, Native, Private)
// Parameters:
// class UFortUINotification*              ClearedMessage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIMessagesPageBase::OnNotificationCleared(class UFortUINotification* ClearedMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIMessagesPageBase", "OnNotificationCleared");

	Params::FortUIMessagesPageBase_OnNotificationCleared Parms{};

	Parms.ClearedMessage = ClearedMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIRewardReport.GetRewardedChestIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIRewardReport::GetRewardedChestIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIRewardReport", "GetRewardedChestIndex");

	Params::FortUIRewardReport_GetRewardedChestIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetBadgeScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        BadgeItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetBadgeScore(class UFortItem* BadgeItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetBadgeScore");

	Params::FortUIScoreReport_GetBadgeScore Parms{};

	Parms.BadgeItem = BadgeItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetCurrentPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UFortUIScoreReport::GetCurrentPlayerPawn(int32 ScoreReportIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetCurrentPlayerPawn");

	Params::FortUIScoreReport_GetCurrentPlayerPawn Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetCurrentPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerState*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerState* UFortUIScoreReport::GetCurrentPlayerState(int32 ScoreReportIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetCurrentPlayerState");

	Params::FortUIScoreReport_GetCurrentPlayerState Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetDifficultBonusMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortUIScoreReport::GetDifficultBonusMultiplier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetDifficultBonusMultiplier");

	Params::FortUIScoreReport_GetDifficultBonusMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetDifficultBonusScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetDifficultBonusScore() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetDifficultBonusScore");

	Params::FortUIScoreReport_GetDifficultBonusScore Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetLevelProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DisplayXp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortUIScoreReport::GetLevelProgress(int32 Level, int32 DisplayXp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetLevelProgress");

	Params::FortUIScoreReport_GetLevelProgress Parms{};

	Parms.Level = Level;
	Parms.DisplayXp = DisplayXp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetPlayerCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetPlayerCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetPlayerCount");

	Params::FortUIScoreReport_GetPlayerCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetPlayerIDFromScoreReportIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 OutUniqueNetIdRepl                                     (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIScoreReport::GetPlayerIDFromScoreReportIndex(int32 ScoreReportIndex, struct FUniqueNetIdRepl* OutUniqueNetIdRepl) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetPlayerIDFromScoreReportIndex");

	Params::FortUIScoreReport_GetPlayerIDFromScoreReportIndex Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutUniqueNetIdRepl != nullptr)
		*OutUniqueNetIdRepl = std::move(Parms.OutUniqueNetIdRepl);
}


// Function FortniteUI.FortUIScoreReport.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUIScoreReport::GetPlayerName(int32 ScoreReportIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetPlayerName");

	Params::FortUIScoreReport_GetPlayerName Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetPlayerPlatform
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortUIScoreReport::GetPlayerPlatform(int32 ScoreReportIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetPlayerPlatform");

	Params::FortUIScoreReport_GetPlayerPlatform Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetPlayerScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortUIScoreType                        ScoreType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetPlayerScore(int32 ScoreReportIndex, EFortUIScoreType ScoreType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetPlayerScore");

	Params::FortUIScoreReport_GetPlayerScore Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;
	Parms.ScoreType = ScoreType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetScoreReportIndex
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetScoreReportIndex(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetScoreReportIndex");

	Params::FortUIScoreReport_GetScoreReportIndex Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetScoreReportIndicesByPlayerID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int32>                           SortedScoreReportIndices                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortUIScoreReport::GetScoreReportIndicesByPlayerID(TArray<int32>* SortedScoreReportIndices) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetScoreReportIndicesByPlayerID");

	Params::FortUIScoreReport_GetScoreReportIndicesByPlayerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SortedScoreReportIndices != nullptr)
		*SortedScoreReportIndices = std::move(Parms.SortedScoreReportIndices);
}


// Function FortniteUI.FortUIScoreReport.GetTeamScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortUIScoreType                        ScoreType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetTeamScore(EFortUIScoreType ScoreType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetTeamScore");

	Params::FortUIScoreReport_GetTeamScore Parms{};

	Parms.ScoreType = ScoreType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetXpInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortUIXpInfo                    OutXpInfo                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIScoreReport::GetXpInfo(int32 ScoreReportIndex, struct FFortUIXpInfo* OutXpInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetXpInfo");

	Params::FortUIScoreReport_GetXpInfo Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutXpInfo != nullptr)
		*OutXpInfo = std::move(Parms.OutXpInfo);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.GetXpToCompleteLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUIScoreReport::GetXpToCompleteLevel(int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "GetXpToCompleteLevel");

	Params::FortUIScoreReport_GetXpToCompleteLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIScoreReport.IsLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ScoreReportIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUIScoreReport::IsLocalPlayer(int32 ScoreReportIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIScoreReport", "IsLocalPlayer");

	Params::FortUIScoreReport_IsLocalPlayer Parms{};

	Parms.ScoreReportIndex = ScoreReportIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_Login.HideTopBarOptions
// (Event, Protected, BlueprintEvent)

void UFortUIStateWidget_Login::HideTopBarOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "HideTopBarOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIStateWidget_Login.OnDisplayWebAccountCreation
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          WebWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Login::OnDisplayWebAccountCreation(class UWidget* WebWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "OnDisplayWebAccountCreation");

	Params::FortUIStateWidget_Login_OnDisplayWebAccountCreation Parms{};

	Parms.WebWidget = WebWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Login.OnDisplayWebLogin
// (Final, Native, Protected)
// Parameters:
// class UWidget*                          WebWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Login::OnDisplayWebLogin(class UWidget* WebWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "OnDisplayWebLogin");

	Params::FortUIStateWidget_Login_OnDisplayWebLogin Parms{};

	Parms.WebWidget = WebWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Login.PushWidgetOntoFlowStack
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUIStateWidget_Login::PushWidgetOntoFlowStack(class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "PushWidgetOntoFlowStack");

	Params::FortUIStateWidget_Login_PushWidgetOntoFlowStack Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Login.SafePopFlowStack
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UFortUIStateWidget_Login::SafePopFlowStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "SafePopFlowStack");

	Params::FortUIStateWidget_Login_SafePopFlowStack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUIStateWidget_Login.SafePopFlowStackNoReturn
// (Final, Native, Protected)

void UFortUIStateWidget_Login::SafePopFlowStackNoReturn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "SafePopFlowStackNoReturn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUIStateWidget_Login.SetConsoleWidgetDisplayName
// (Event, Protected, BlueprintEvent)

void UFortUIStateWidget_Login::SetConsoleWidgetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "SetConsoleWidgetDisplayName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIStateWidget_Login.ShowBackBar
// (Event, Protected, BlueprintEvent)

void UFortUIStateWidget_Login::ShowBackBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "ShowBackBar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUIStateWidget_Login.GetPlatformDisplayName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUIStateWidget_Login::GetPlatformDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIStateWidget_Login", "GetPlatformDisplayName");

	Params::FortUIStateWidget_Login_GetPlatformDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeDetailsBase.OnPurchaseComplete
// (Event, Public, BlueprintEvent)

void UFortUpgradeDetailsBase::OnPurchaseComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeDetailsBase", "OnPurchaseComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeDetailsBase.OnScreenActive
// (Event, Public, BlueprintEvent)

void UFortUpgradeDetailsBase::OnScreenActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeDetailsBase", "OnScreenActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeDetailsBase.OnShowIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UTexture2D*                       Icon                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeDetailsBase::OnShowIcon(class UTexture2D* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeDetailsBase", "OnShowIcon");

	Params::FortUpgradeDetailsBase_OnShowIcon Parms{};

	Parms.Icon = Icon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUpgradeDetailsBase.OnUpgradeToDetailChanged
// (Event, Protected, BlueprintEvent)

void UFortUpgradeDetailsBase::OnUpgradeToDetailChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeDetailsBase", "OnUpgradeToDetailChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeDetailsBase.RequestPurchaseNode
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeDetailsBase::RequestPurchaseNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeDetailsBase", "RequestPurchaseNode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeInfo.BackwardPreview
// (Final, Native, Public, BlueprintCallable)

void UFortUpgradeInfo::BackwardPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "BackwardPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeInfo.ForwardPreview
// (Final, Native, Public, BlueprintCallable)

void UFortUpgradeInfo::ForwardPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "ForwardPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeInfo.CanAffordUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::CanAffordUpgrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "CanAffordUpgrade");

	Params::FortUpgradeInfo_CanAffordUpgrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.CanPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::CanPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "CanPreview");

	Params::FortUpgradeInfo_CanPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetCost");

	Params::FortUpgradeInfo_GetCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetCurrentLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetCurrentLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetCurrentLevel");

	Params::FortUpgradeInfo_GetCurrentLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetDescription");

	Params::FortUpgradeInfo_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetDisplayAttributes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortDisplayAttribute>    OutDisplayAttributes                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::GetDisplayAttributes(TArray<struct FFortDisplayAttribute>* OutDisplayAttributes) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetDisplayAttributes");

	Params::FortUpgradeInfo_GetDisplayAttributes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDisplayAttributes != nullptr)
		*OutDisplayAttributes = std::move(Parms.OutDisplayAttributes);

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUpgradeInfoImageSize                   ImageSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortUpgradeInfo::GetIcon(EUpgradeInfoImageSize ImageSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetIcon");

	Params::FortUpgradeInfo_GetIcon Parms{};

	Parms.ImageSize = ImageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetItemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetItemName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetItemName");

	Params::FortUpgradeInfo_GetItemName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetMaxLevel");

	Params::FortUpgradeInfo_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetNextLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetNextLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetNextLevel");

	Params::FortUpgradeInfo_GetNextLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetNextLevelDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetNextLevelDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetNextLevelDescription");

	Params::FortUpgradeInfo_GetNextLevelDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetNextLevelTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetNextLevelTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetNextLevelTitle");

	Params::FortUpgradeInfo_GetNextLevelTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetTitle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortUpgradeInfo::GetTitle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetTitle");

	Params::FortUpgradeInfo_GetTitle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetUpgradeUnlockLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeInfo::GetUpgradeUnlockLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetUpgradeUnlockLevel");

	Params::FortUpgradeInfo_GetUpgradeUnlockLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.GetVideo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMediaSource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSource* UFortUpgradeInfo::GetVideo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "GetVideo");

	Params::FortUpgradeInfo_GetVideo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.IsPreviewing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::IsPreviewing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "IsPreviewing");

	Params::FortUpgradeInfo_IsPreviewing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeInfo.IsUpgradeUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeInfo::IsUpgradeUnlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeInfo", "IsUpgradeUnlocked");

	Params::FortUpgradeInfo_IsUpgradeUnlocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeScreenBase.HandleTabSelected
// (Final, Native, Private)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeScreenBase::HandleTabSelected(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "HandleTabSelected");

	Params::FortUpgradeScreenBase_HandleTabSelected Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeScreenBase.OnPurchaseNodeComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnPurchaseNodeComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "OnPurchaseNodeComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeScreenBase.OnUpgradeInfoChanged
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnUpgradeInfoChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "OnUpgradeInfoChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeScreenBase.OnUseUpgradesRespecTokenComplete
// (Event, Protected, BlueprintEvent)

void UFortUpgradeScreenBase::OnUseUpgradesRespecTokenComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "OnUseUpgradesRespecTokenComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortUpgradeScreenBase.RefreshFocus
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::RefreshFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "RefreshFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeScreenBase.TogglePreview
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::TogglePreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "TogglePreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeScreenBase.UseUpgradesRespecToken
// (Final, Native, Protected, BlueprintCallable)

void UFortUpgradeScreenBase::UseUpgradesRespecToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "UseUpgradesRespecToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortUpgradeScreenBase.AreUpgradesRespecTokensAvailable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::AreUpgradesRespecTokensAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "AreUpgradesRespecTokensAvailable");

	Params::FortUpgradeScreenBase_AreUpgradesRespecTokensAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeScreenBase.CanPreview
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::CanPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "CanPreview");

	Params::FortUpgradeScreenBase_CanPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeScreenBase.GetUpgradesRespecTokenCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortUpgradeScreenBase::GetUpgradesRespecTokenCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "GetUpgradesRespecTokenCount");

	Params::FortUpgradeScreenBase_GetUpgradesRespecTokenCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeScreenBase.IsPreviewing
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUpgradeScreenBase::IsPreviewing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeScreenBase", "IsPreviewing");

	Params::FortUpgradeScreenBase_IsPreviewing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.FortUpgradeTileBase.OnDataRefresh
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUpgrade                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUpgradeTileBase::OnDataRefresh(bool bUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUpgradeTileBase", "OnDataRefresh");

	Params::FortUpgradeTileBase_OnDataRefresh Parms{};

	Parms.bUpgrade = bUpgrade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortUserChoiceWidget.SetChoices
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FChoiceData                      ChoiceItems                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortUserChoiceWidget::SetChoices(const struct FChoiceData& ChoiceItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUserChoiceWidget", "SetChoices");

	Params::FortUserChoiceWidget_SetChoices Parms{};

	Parms.ChoiceItems = std::move(ChoiceItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.FortVariantPicker.InitFromCosmeticItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticAccountItem*       InCosmeticItem                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVariantPicker::InitFromCosmeticItem(class UAthenaCosmeticAccountItem* InCosmeticItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVariantPicker", "InitFromCosmeticItem");

	Params::FortVariantPicker_InitFromCosmeticItem Parms{};

	Parms.InCosmeticItem = InCosmeticItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortVariantPicker.InitFromCosmeticItemDef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaCosmeticItemDefinition*    InCosmeticItemDef                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortVariantPicker::InitFromCosmeticItemDef(class UAthenaCosmeticItemDefinition* InCosmeticItemDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortVariantPicker", "InitFromCosmeticItemDef");

	Params::FortVariantPicker_InitFromCosmeticItemDef Parms{};

	Parms.InCosmeticItemDef = InCosmeticItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.FortWorkerSetBonusIcon.HandleDifferentGameplayTagSetBP
// (Event, Protected, BlueprintEvent)

void UFortWorkerSetBonusIcon::HandleDifferentGameplayTagSetBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorkerSetBonusIcon", "HandleDifferentGameplayTagSetBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.FortWorkerSetBonusIcon.SetGameplayTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InGameplayTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortWorkerSetBonusIcon::SetGameplayTag(const struct FGameplayTag& InGameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorkerSetBonusIcon", "SetGameplayTag");

	Params::FortWorkerSetBonusIcon_SetGameplayTag Parms{};

	Parms.InGameplayTag = std::move(InGameplayTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.OnDisplayBlingUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnDisplayBlingUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnDisplayBlingUI");

	Params::HeistWidgetBase_OnDisplayBlingUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnDisplayExitCraftUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnDisplayExitCraftUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnDisplayExitCraftUI");

	Params::HeistWidgetBase_OnDisplayExitCraftUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnExitCraftsUIChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EHeistExitCraftUIState                  NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnExitCraftsUIChanged(EHeistExitCraftUIState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnExitCraftsUIChanged");

	Params::HeistWidgetBase_OnExitCraftsUIChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnHandleSpectatingChanged");

	Params::HeistWidgetBase_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.OnMutatorObjectUpdated
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGameplayMutatorObjectDataArray  MutatorArray                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnMutatorObjectUpdated(const struct FGameplayMutatorObjectDataArray& MutatorArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnMutatorObjectUpdated");

	Params::HeistWidgetBase_OnMutatorObjectUpdated Parms{};

	Parms.MutatorArray = std::move(MutatorArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.OnSpecialActorAdded
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FSpecialActorRepData             SpecialActorData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnSpecialActorAdded(const struct FSpecialActorRepData& SpecialActorData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnSpecialActorAdded");

	Params::HeistWidgetBase_OnSpecialActorAdded Parms{};

	Parms.SpecialActorData = std::move(SpecialActorData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.OnSpecialActorRemoved
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FSpecialActorRepData             SpecialActorData                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnSpecialActorRemoved(const struct FSpecialActorRepData& SpecialActorData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnSpecialActorRemoved");

	Params::HeistWidgetBase_OnSpecialActorRemoved Parms{};

	Parms.SpecialActorData = std::move(SpecialActorData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.OnUpdateBlingIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHeistBlingIconData              BlingIconData                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnUpdateBlingIcon(const struct FHeistBlingIconData& BlingIconData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnUpdateBlingIcon");

	Params::HeistWidgetBase_OnUpdateBlingIcon Parms{};

	Parms.BlingIconData = std::move(BlingIconData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnUpdateExitCraftIcon
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHeistExitCraftIconData          ExitCraftIconData                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnUpdateExitCraftIcon(const struct FHeistExitCraftIconData& ExitCraftIconData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnUpdateExitCraftIcon");

	Params::HeistWidgetBase_OnUpdateExitCraftIcon Parms{};

	Parms.ExitCraftIconData = std::move(ExitCraftIconData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnUpdateStateText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             StateText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EHeistExitCraftUIState                  CurrState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnUpdateStateText(const class FText& StateText, EHeistExitCraftUIState CurrState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnUpdateStateText");

	Params::HeistWidgetBase_OnUpdateStateText Parms{};

	Parms.StateText = std::move(StateText);
	Parms.CurrState = CurrState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.OnUpdateStateTimeText
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             TimeText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EHeistExitCraftUIState                  CurrState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::OnUpdateStateTimeText(const class FText& TimeText, EHeistExitCraftUIState CurrState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "OnUpdateStateTimeText");

	Params::HeistWidgetBase_OnUpdateStateTimeText Parms{};

	Parms.TimeText = std::move(TimeText);
	Parms.CurrState = CurrState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HeistWidgetBase.SetExitCraftUIState
// (Final, Native, Protected)
// Parameters:
// EHeistExitCraftUIState                  NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeistWidgetBase::SetExitCraftUIState(EHeistExitCraftUIState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "SetExitCraftUIState");

	Params::HeistWidgetBase_SetExitCraftUIState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HeistWidgetBase.UpdateAllUI
// (Final, Native, Protected)

void UHeistWidgetBase::UpdateAllUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeistWidgetBase", "UpdateAllUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.ClearLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELayoutDataType                         LayoutType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::ClearLayout(ELayoutDataType LayoutType, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "ClearLayout");

	Params::HUDLayoutToolContext_ClearLayout Parms{};

	Parms.LayoutType = LayoutType;
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.CloseLayoutTool
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::CloseLayoutTool(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "CloseLayoutTool");

	Params::HUDLayoutToolContext_CloseLayoutTool Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.LoadLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELayoutDataType                         LayoutType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::LoadLayout(ELayoutDataType LayoutType, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "LoadLayout");

	Params::HUDLayoutToolContext_LoadLayout Parms{};

	Parms.LayoutType = LayoutType;
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.OnPanZoomWidgetClick
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::OnPanZoomWidgetClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "OnPanZoomWidgetClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.OnRecenterPressed
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::OnRecenterPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "OnRecenterPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.OnToolOpened
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::OnToolOpened(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "OnToolOpened");

	Params::HUDLayoutToolContext_OnToolOpened Parms{};

	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.OnViewOffsetUpdated
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::OnViewOffsetUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "OnViewOffsetUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.ResetAllWidgets
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::ResetAllWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "ResetAllWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.ResetDirtyWidgets
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::ResetDirtyWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "ResetDirtyWidgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.ResetSelectedWidgetProperties
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolContext::ResetSelectedWidgetProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "ResetSelectedWidgetProperties");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SaveLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ELayoutDataType                         LayoutType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SaveLayout(ELayoutDataType LayoutType, const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SaveLayout");

	Params::HUDLayoutToolContext_SaveLayout Parms{};

	Parms.LayoutType = LayoutType;
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetCustomFireMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAutofireEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceTouchEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTapToShootEnabled                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAlwaysShowDedicatedButton                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetCustomFireMode(bool bAutofireEnabled, bool bForceTouchEnabled, bool bTapToShootEnabled, bool bAlwaysShowDedicatedButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetCustomFireMode");

	Params::HUDLayoutToolContext_SetCustomFireMode Parms{};

	Parms.bAutofireEnabled = bAutofireEnabled;
	Parms.bForceTouchEnabled = bForceTouchEnabled;
	Parms.bTapToShootEnabled = bTapToShootEnabled;
	Parms.bAlwaysShowDedicatedButton = bAlwaysShowDedicatedButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetFireMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFireModeType                           NewFireMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetFireMode(EFireModeType NewFireMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetFireMode");

	Params::HUDLayoutToolContext_SetFireMode Parms{};

	Parms.NewFireMode = NewFireMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetFireModeOpenState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewlyOpened                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetFireModeOpenState(bool bNewlyOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetFireModeOpenState");

	Params::HUDLayoutToolContext_SetFireModeOpenState Parms{};

	Parms.bNewlyOpened = bNewlyOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetLayoutVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowCombat                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowBuild                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowEdit                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowCreative                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetLayoutVisibility(const bool bShowCombat, const bool bShowBuild, const bool bShowEdit, const bool bShowCreative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetLayoutVisibility");

	Params::HUDLayoutToolContext_SetLayoutVisibility Parms{};

	Parms.bShowCombat = bShowCombat;
	Parms.bShowBuild = bShowBuild;
	Parms.bShowEdit = bShowEdit;
	Parms.bShowCreative = bShowCreative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetPropertyMenuState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewlyOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetPropertyMenuState(bool bNewlyOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetPropertyMenuState");

	Params::HUDLayoutToolContext_SetPropertyMenuState Parms{};

	Parms.bNewlyOpen = bNewlyOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.SetSelectedWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHUDLayoutToolPlacementWidget*    NewSelectedWidget                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::SetSelectedWidget(class UHUDLayoutToolPlacementWidget* NewSelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "SetSelectedWidget");

	Params::HUDLayoutToolContext_SetSelectedWidget Parms{};

	Parms.NewSelectedWidget = NewSelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.StartLerping
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewViewOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::StartLerping(const struct FVector2D& NewViewOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "StartLerping");

	Params::HUDLayoutToolContext_StartLerping Parms{};

	Parms.NewViewOffset = std::move(NewViewOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolContext.GetCurrentOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UHUDLayoutToolContext::GetCurrentOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetCurrentOffset");

	Params::HUDLayoutToolContext_GetCurrentOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.GetFireMode
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFireModeType                           FireMode                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAutofireEnabled                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceTouchEnabled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTapToShootEnabled                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAlwaysShowDedicatedButton                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolContext::GetFireMode(EFireModeType* FireMode, bool* bAutofireEnabled, bool* bForceTouchEnabled, bool* bTapToShootEnabled, bool* bAlwaysShowDedicatedButton) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetFireMode");

	Params::HUDLayoutToolContext_GetFireMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FireMode != nullptr)
		*FireMode = Parms.FireMode;

	if (bAutofireEnabled != nullptr)
		*bAutofireEnabled = Parms.bAutofireEnabled;

	if (bForceTouchEnabled != nullptr)
		*bForceTouchEnabled = Parms.bForceTouchEnabled;

	if (bTapToShootEnabled != nullptr)
		*bTapToShootEnabled = Parms.bTapToShootEnabled;

	if (bAlwaysShowDedicatedButton != nullptr)
		*bAlwaysShowDedicatedButton = Parms.bAlwaysShowDedicatedButton;
}


// Function FortniteUI.HUDLayoutToolContext.GetFireModeOpenState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::GetFireModeOpenState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetFireModeOpenState");

	Params::HUDLayoutToolContext_GetFireModeOpenState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.GetIsLerping
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::GetIsLerping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetIsLerping");

	Params::HUDLayoutToolContext_GetIsLerping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.GetIsPanning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::GetIsPanning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetIsPanning");

	Params::HUDLayoutToolContext_GetIsPanning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.GetPropertyMenuState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::GetPropertyMenuState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "GetPropertyMenuState");

	Params::HUDLayoutToolContext_GetPropertyMenuState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.HasSavedLayout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELayoutDataType                         LayoutType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::HasSavedLayout(ELayoutDataType LayoutType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "HasSavedLayout");

	Params::HUDLayoutToolContext_HasSavedLayout Parms{};

	Parms.LayoutType = LayoutType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.HasSelectedWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::HasSelectedWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "HasSelectedWidget");

	Params::HUDLayoutToolContext_HasSelectedWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.IsCentered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::IsCentered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "IsCentered");

	Params::HUDLayoutToolContext_IsCentered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.IsFireModeAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFireModeType                           NewFireMode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::IsFireModeAvailable(EFireModeType NewFireMode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "IsFireModeAvailable");

	Params::HUDLayoutToolContext_IsFireModeAvailable Parms{};

	Parms.NewFireMode = NewFireMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.IsLayoutDirty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::IsLayoutDirty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "IsLayoutDirty");

	Params::HUDLayoutToolContext_IsLayoutDirty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.IsSelectedWidgetUnderPanel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::IsSelectedWidgetUnderPanel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "IsSelectedWidgetUnderPanel");

	Params::HUDLayoutToolContext_IsSelectedWidgetUnderPanel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolContext.ShouldShowSelectedWidgetProperties
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolContext::ShouldShowSelectedWidgetProperties() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolContext", "ShouldShowSelectedWidgetProperties");

	Params::HUDLayoutToolContext_ShouldShowSelectedWidgetProperties Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolFireModePanel.SetOpenState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewOpenState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolFireModePanel::SetOpenState(bool bNewOpenState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolFireModePanel", "SetOpenState");

	Params::HUDLayoutToolFireModePanel_SetOpenState Parms{};

	Parms.bNewOpenState = bNewOpenState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolFireModeButton.OnDeselected
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UHUDLayoutToolFireModeButton::OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolFireModeButton", "OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.HUDLayoutToolFireModeButton.OnSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UHUDLayoutToolFireModeButton::OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolFireModeButton", "OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.HUDLayoutToolFireModeButton.GetFireModeDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHUDLayoutToolFireModeButton::GetFireModeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolFireModeButton", "GetFireModeDescription");

	Params::HUDLayoutToolFireModeButton_GetFireModeDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolFireModeButton.GetFireModeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFireModeType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFireModeType UHUDLayoutToolFireModeButton::GetFireModeType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolFireModeButton", "GetFireModeType");

	Params::HUDLayoutToolFireModeButton_GetFireModeType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPanZoomWidget.Recenter
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolPanZoomWidget::Recenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPanZoomWidget", "Recenter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPanZoomWidget.StartOffsetLerp
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewTargetOffset                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPanZoomWidget::StartOffsetLerp(const struct FVector2D& NewTargetOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPanZoomWidget", "StartOffsetLerp");

	Params::HUDLayoutToolPanZoomWidget_StartOffsetLerp Parms{};

	Parms.NewTargetOffset = std::move(NewTargetOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPanZoomWidget.StopOffsetLerp
// (Final, Native, Public, BlueprintCallable)

void UHUDLayoutToolPanZoomWidget::StopOffsetLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPanZoomWidget", "StopOffsetLerp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.OnInsideGridStateChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInsideGrid                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPlacementWidget::OnInsideGridStateChange(bool bInsideGrid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "OnInsideGridStateChange");

	Params::HUDLayoutToolPlacementWidget_OnInsideGridStateChange Parms{};

	Parms.bInsideGrid = bInsideGrid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.OnLayoutVisibilityChanged
// (Final, Native, Public)
// Parameters:
// bool                                    bShowCombat                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowBuild                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowEdit                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowCreative                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPlacementWidget::OnLayoutVisibilityChanged(bool bShowCombat, bool bShowBuild, bool bShowEdit, bool bShowCreative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "OnLayoutVisibilityChanged");

	Params::HUDLayoutToolPlacementWidget_OnLayoutVisibilityChanged Parms{};

	Parms.bShowCombat = bShowCombat;
	Parms.bShowBuild = bShowBuild;
	Parms.bShowEdit = bShowEdit;
	Parms.bShowCreative = bShowCreative;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.OnWidgetSelected
// (Final, Native, Protected)
// Parameters:
// class UHUDLayoutToolPlacementWidget*    InSelectedWidget                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPlacementWidget::OnWidgetSelected(class UHUDLayoutToolPlacementWidget* InSelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "OnWidgetSelected");

	Params::HUDLayoutToolPlacementWidget_OnWidgetSelected Parms{};

	Parms.InSelectedWidget = InSelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.BP_GetMobileVisualType
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UHUDLayoutToolPlacementWidget::BP_GetMobileVisualType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "BP_GetMobileVisualType");

	Params::HUDLayoutToolPlacementWidget_BP_GetMobileVisualType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.CanEditVisibility
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolPlacementWidget::CanEditVisibility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "CanEditVisibility");

	Params::HUDLayoutToolPlacementWidget_CanEditVisibility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.GetIsOverlapping
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolPlacementWidget::GetIsOverlapping() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "GetIsOverlapping");

	Params::HUDLayoutToolPlacementWidget_GetIsOverlapping Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPlacementWidget.IsInsideGrid
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolPlacementWidget::IsInsideGrid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPlacementWidget", "IsInsideGrid");

	Params::HUDLayoutToolPlacementWidget_IsInsideGrid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPropertyPanel.OnClose
// (Native, Event, Protected, BlueprintEvent)

void UHUDLayoutToolPropertyPanel::OnClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyPanel", "OnClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyPanel.OnMenuStateChange
// (Final, Native, Protected)
// Parameters:
// bool                                    bNewlyOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyPanel::OnMenuStateChange(bool bNewlyOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyPanel", "OnMenuStateChange");

	Params::HUDLayoutToolPropertyPanel_OnMenuStateChange Parms{};

	Parms.bNewlyOpen = bNewlyOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyPanel.OnOpen
// (Native, Event, Protected, BlueprintEvent)

void UHUDLayoutToolPropertyPanel::OnOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyPanel", "OnOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyPanel.OnWidgetSelected
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHUDLayoutToolPlacementWidget*    NewlySelectedWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyPanel::OnWidgetSelected(class UHUDLayoutToolPlacementWidget* NewlySelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyPanel", "OnWidgetSelected");

	Params::HUDLayoutToolPropertyPanel_OnWidgetSelected Parms{};

	Parms.NewlySelectedWidget = NewlySelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyPanel.GetIsOpen
// (Final, Native, Protected, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolPropertyPanel::GetIsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyPanel", "GetIsOpen");

	Params::HUDLayoutToolPropertyPanel_GetIsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.OnNewBoolValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::OnNewBoolValue(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "OnNewBoolValue");

	Params::HUDLayoutToolPropertyWidget_OnNewBoolValue Parms{};

	Parms.bNewValue = bNewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.OnNewRotatorValue
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   NormalizedValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::OnNewRotatorValue(int32 NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "OnNewRotatorValue");

	Params::HUDLayoutToolPropertyWidget_OnNewRotatorValue Parms{};

	Parms.NormalizedValue = NormalizedValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.OnNewSliderValue
// (Final, Native, Protected)
// Parameters:
// float                                   NormalizedValue                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::OnNewSliderValue(float NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "OnNewSliderValue");

	Params::HUDLayoutToolPropertyWidget_OnNewSliderValue Parms{};

	Parms.NormalizedValue = NormalizedValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.OnWidgetSelected
// (Final, Native, Protected)
// Parameters:
// class UHUDLayoutToolPlacementWidget*    NewlySelectedWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::OnWidgetSelected(class UHUDLayoutToolPlacementWidget* NewlySelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "OnWidgetSelected");

	Params::HUDLayoutToolPropertyWidget_OnWidgetSelected Parms{};

	Parms.NewlySelectedWidget = NewlySelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.RefreshProperties
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UHUDLayoutToolPropertyWidget::RefreshProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "RefreshProperties");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.SetBoolValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::SetBoolValue(bool bNewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "SetBoolValue");

	Params::HUDLayoutToolPropertyWidget_SetBoolValue Parms{};

	Parms.bNewValue = bNewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.SetPropertyType
// (Event, Protected, BlueprintEvent)
// Parameters:
// ELayoutPropertyType                     NewPropertyType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolPropertyWidget::SetPropertyType(ELayoutPropertyType NewPropertyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "SetPropertyType");

	Params::HUDLayoutToolPropertyWidget_SetPropertyType Parms{};

	Parms.NewPropertyType = NewPropertyType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.GetCurrentValue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHUDLayoutToolPropertyWidget::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "GetCurrentValue");

	Params::HUDLayoutToolPropertyWidget_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.GetCurrentValueAsBool
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDLayoutToolPropertyWidget::GetCurrentValueAsBool() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "GetCurrentValueAsBool");

	Params::HUDLayoutToolPropertyWidget_GetCurrentValueAsBool Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.GetCurrentValueAsInt
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHUDLayoutToolPropertyWidget::GetCurrentValueAsInt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "GetCurrentValueAsInt");

	Params::HUDLayoutToolPropertyWidget_GetCurrentValueAsInt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolPropertyWidget.GetRotatorLabels
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UHUDLayoutToolPropertyWidget::GetRotatorLabels() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolPropertyWidget", "GetRotatorLabels");

	Params::HUDLayoutToolPropertyWidget_GetRotatorLabels Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_SetPropertyValue
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolProxy::BP_SetPropertyValue(int32 PropertyIndex, float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_SetPropertyValue");

	Params::HUDLayoutToolProxy_BP_SetPropertyValue Parms{};

	Parms.PropertyIndex = PropertyIndex;
	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetMultiOptionLabels
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UHUDLayoutToolProxy::BP_GetMultiOptionLabels(int32 PropertyIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetMultiOptionLabels");

	Params::HUDLayoutToolProxy_BP_GetMultiOptionLabels Parms{};

	Parms.PropertyIndex = PropertyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetNumOfProperties
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHUDLayoutToolProxy::BP_GetNumOfProperties() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetNumOfProperties");

	Params::HUDLayoutToolProxy_BP_GetNumOfProperties Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetPropertyName
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHUDLayoutToolProxy::BP_GetPropertyName(int32 PropertyIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetPropertyName");

	Params::HUDLayoutToolProxy_BP_GetPropertyName Parms{};

	Parms.PropertyIndex = PropertyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetPropertyRange
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMin                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMax                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolProxy::BP_GetPropertyRange(int32 PropertyIndex, float* OutMin, float* OutMax) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetPropertyRange");

	Params::HUDLayoutToolProxy_BP_GetPropertyRange Parms{};

	Parms.PropertyIndex = PropertyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMin != nullptr)
		*OutMin = Parms.OutMin;

	if (OutMax != nullptr)
		*OutMax = Parms.OutMax;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetPropertyType
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ELayoutPropertyType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ELayoutPropertyType UHUDLayoutToolProxy::BP_GetPropertyType(int32 PropertyIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetPropertyType");

	Params::HUDLayoutToolProxy_BP_GetPropertyType Parms{};

	Parms.PropertyIndex = PropertyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetPropertyValue
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// int32                                   PropertyIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHUDLayoutToolProxy::BP_GetPropertyValue(int32 PropertyIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetPropertyValue");

	Params::HUDLayoutToolProxy_BP_GetPropertyValue Parms{};

	Parms.PropertyIndex = PropertyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolProxy.BP_GetWidgetName
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHUDLayoutToolProxy::BP_GetWidgetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolProxy", "BP_GetWidgetName");

	Params::HUDLayoutToolProxy_BP_GetWidgetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.OnBuildClicked
// (Final, Native, Protected)

void UHUDLayoutToolVisibilityWidget::OnBuildClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "OnBuildClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.OnCombatClicked
// (Final, Native, Protected)

void UHUDLayoutToolVisibilityWidget::OnCombatClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "OnCombatClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.OnCreativeClicked
// (Final, Native, Protected)

void UHUDLayoutToolVisibilityWidget::OnCreativeClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "OnCreativeClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.OnEditClicked
// (Final, Native, Protected)

void UHUDLayoutToolVisibilityWidget::OnEditClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "OnEditClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.OnWidgetSelected
// (Final, Native, Protected)
// Parameters:
// class UHUDLayoutToolPlacementWidget*    NewlySelectedWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolVisibilityWidget::OnWidgetSelected(class UHUDLayoutToolPlacementWidget* NewlySelectedWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "OnWidgetSelected");

	Params::HUDLayoutToolVisibilityWidget_OnWidgetSelected Parms{};

	Parms.NewlySelectedWidget = NewlySelectedWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.Refresh
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UHUDLayoutToolVisibilityWidget::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.HUDLayoutToolVisibilityWidget.GetVisibilities
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EBacchusHUDStateType                    CombatVisibility                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBacchusHUDStateType                    BuildVisibility                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBacchusHUDStateType                    EditVisibility                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBacchusHUDStateType                    CreativeVisibility                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDLayoutToolVisibilityWidget::GetVisibilities(EBacchusHUDStateType* CombatVisibility, EBacchusHUDStateType* BuildVisibility, EBacchusHUDStateType* EditVisibility, EBacchusHUDStateType* CreativeVisibility) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDLayoutToolVisibilityWidget", "GetVisibilities");

	Params::HUDLayoutToolVisibilityWidget_GetVisibilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CombatVisibility != nullptr)
		*CombatVisibility = Parms.CombatVisibility;

	if (BuildVisibility != nullptr)
		*BuildVisibility = Parms.BuildVisibility;

	if (EditVisibility != nullptr)
		*EditVisibility = Parms.EditVisibility;

	if (CreativeVisibility != nullptr)
		*CreativeVisibility = Parms.CreativeVisibility;
}


// Function FortniteUI.IconTextButtonSpectatorBase.SetText
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UIconTextButtonSpectatorBase::SetText(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IconTextButtonSpectatorBase", "SetText");

	Params::IconTextButtonSpectatorBase_SetText Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MassiveGadgetEquippedWidget.HandleMassiveTagChanged
// (Final, Native, Private)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMassiveGadgetEquippedWidget::HandleMassiveTagChanged(const struct FGameplayTag& Tag, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MassiveGadgetEquippedWidget", "HandleMassiveTagChanged");

	Params::MassiveGadgetEquippedWidget_HandleMassiveTagChanged Parms{};

	Parms.Tag = std::move(Tag);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MatchmakingInputIndicatorBase.OnInputSourceTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ECommonInputType                        InputType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingInputIndicatorBase::OnInputSourceTypeChanged(ECommonInputType InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingInputIndicatorBase", "OnInputSourceTypeChanged");

	Params::MatchmakingInputIndicatorBase_OnInputSourceTypeChanged Parms{};

	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MatchmakingInputIndicatorBase.SetRemotePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueId                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingInputIndicatorBase::SetRemotePlayer(const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingInputIndicatorBase", "SetRemotePlayer");

	Params::MatchmakingInputIndicatorBase_SetRemotePlayer Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.MakeMessageData
// (Final, Native, Static, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// EAthenaGameMsgType                      MsgType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MsgText                                                (Parm, NativeAccessSpecifierPublic)
// class USoundCue*                        MsgSound                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DisplayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaGameMessageData           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaGameMessageData UMinigameWidgetBase::MakeMessageData(EAthenaGameMsgType MsgType, const class FText& MsgText, class USoundCue* MsgSound, float DisplayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MinigameWidgetBase", "MakeMessageData");

	Params::MinigameWidgetBase_MakeMessageData Parms{};

	Parms.MsgType = MsgType;
	Parms.MsgText = std::move(MsgText);
	Parms.MsgSound = MsgSound;
	Parms.DisplayTime = DisplayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.MinigameWidgetBase.HideAllMinigameWidgetUI
// (Final, Native, Protected)

void UMinigameWidgetBase::HideAllMinigameWidgetUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "HideAllMinigameWidgetUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.OnCurrentStateChangedDelegate
// (Final, Native, Protected)
// Parameters:
// EFortMinigameState                      MinigameState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnCurrentStateChangedDelegate(EFortMinigameState MinigameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnCurrentStateChangedDelegate");

	Params::MinigameWidgetBase_OnCurrentStateChangedDelegate Parms{};

	Parms.MinigameState = MinigameState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.OnDisplayCaptureObjectiveUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnDisplayCaptureObjectiveUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnDisplayCaptureObjectiveUI");

	Params::MinigameWidgetBase_OnDisplayCaptureObjectiveUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MinigameWidgetBase.OnDisplayLeavingVolumeUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnDisplayLeavingVolumeUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnDisplayLeavingVolumeUI");

	Params::MinigameWidgetBase_OnDisplayLeavingVolumeUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MinigameWidgetBase.OnDisplayMiniGameAbortUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnDisplayMiniGameAbortUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnDisplayMiniGameAbortUI");

	Params::MinigameWidgetBase_OnDisplayMiniGameAbortUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MinigameWidgetBase.OnDisplayMinigameEndUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnDisplayMinigameEndUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnDisplayMinigameEndUI");

	Params::MinigameWidgetBase_OnDisplayMinigameEndUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MinigameWidgetBase.OnDisplayMinigameStartUI
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDisplay                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnDisplayMinigameStartUI(bool bDisplay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnDisplayMinigameStartUI");

	Params::MinigameWidgetBase_OnDisplayMinigameStartUI Parms{};

	Parms.bDisplay = bDisplay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.MinigameWidgetBase.OnEnteredVolume
// (Final, Native, Public)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      EnteredVolume                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnEnteredVolume(class APlayerState* ClientState, class AFortVolume* EnteredVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnEnteredVolume");

	Params::MinigameWidgetBase_OnEnteredVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.EnteredVolume = EnteredVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.OnExitingVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      ExitingVolume                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnExitingVolume(class APlayerState* ClientState, class AFortVolume* ExitingVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnExitingVolume");

	Params::MinigameWidgetBase_OnExitingVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.ExitingVolume = ExitingVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.OnExitVolume
// (Final, Native, Public)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      ExitedVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnExitVolume(class APlayerState* ClientState, class AFortVolume* ExitedVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnExitVolume");

	Params::MinigameWidgetBase_OnExitVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.ExitedVolume = ExitedVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.OnObjectiveUpdated
// (Event, Protected, BlueprintEvent)

void UMinigameWidgetBase::OnObjectiveUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnObjectiveUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.MinigameWidgetBase.OnPlayerStatUpdated
// (Event, Protected, BlueprintEvent)

void UMinigameWidgetBase::OnPlayerStatUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnPlayerStatUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.MinigameWidgetBase.OnStopExitingVolume
// (Final, Native, Protected)
// Parameters:
// class APlayerState*                     ClientState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortVolume*                      ExitedVolume                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMinigameWidgetBase::OnStopExitingVolume(class APlayerState* ClientState, class AFortVolume* ExitedVolume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "OnStopExitingVolume");

	Params::MinigameWidgetBase_OnStopExitingVolume Parms{};

	Parms.ClientState = ClientState;
	Parms.ExitedVolume = ExitedVolume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.MinigameWidgetBase.ResetDisplayValues
// (Event, Protected, BlueprintEvent)

void UMinigameWidgetBase::ResetDisplayValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinigameWidgetBase", "ResetDisplayValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.MobileHUDVisual.GetVisualType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UMobileHUDVisual::GetVisualType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileHUDVisual", "GetVisualType");

	Params::MobileHUDVisual_GetVisualType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.MobileHUDButtonVisual.SetButtonSprite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPaperSprite*                     NewSprite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMobileHUDButtonVisual::SetButtonSprite(class UPaperSprite* NewSprite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MobileHUDButtonVisual", "SetButtonSprite");

	Params::MobileHUDButtonVisual_SetButtonSprite Parms{};

	Parms.NewSprite = NewSprite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.SeasonPassLevelWidget.AttemptClaim
// (Final, Native, Public, BlueprintCallable)

void USeasonPassLevelWidget::AttemptClaim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "AttemptClaim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.SeasonPassLevelWidget.OnAttemptClaimFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    FreeClaimed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PaidClaimed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassLevelWidget::OnAttemptClaimFinished(bool FreeClaimed, bool PaidClaimed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "OnAttemptClaimFinished");

	Params::SeasonPassLevelWidget_OnAttemptClaimFinished Parms{};

	Parms.FreeClaimed = FreeClaimed;
	Parms.PaidClaimed = PaidClaimed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassLevelWidget.OnLockedStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    FreeUnlocked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PaidUnlocked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassLevelWidget::OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "OnLockedStatusChanged");

	Params::SeasonPassLevelWidget_OnLockedStatusChanged Parms{};

	Parms.FreeUnlocked = FreeUnlocked;
	Parms.PaidUnlocked = PaidUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassLevelWidget.OnNavigateTo
// (Event, Public, BlueprintEvent)

void USeasonPassLevelWidget::OnNavigateTo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "OnNavigateTo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassLevelWidget.OnSetup
// (Event, Public, BlueprintEvent)

void USeasonPassLevelWidget::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassLevelWidget.PlayIntro
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USeasonPassLevelWidget::PlayIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "PlayIntro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassLevelWidget.GetLevelInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSeasonPassLevelInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSeasonPassLevelInfo* USeasonPassLevelWidget::GetLevelInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelWidget", "GetLevelInfo");

	Params::SeasonPassLevelWidget_GetLevelInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassLevelPanel.OnLockedStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    FreeUnlocked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    PaidUnlocked                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassLevelPanel::OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelPanel", "OnLockedStatusChanged");

	Params::SeasonPassLevelPanel_OnLockedStatusChanged Parms{};

	Parms.FreeUnlocked = FreeUnlocked;
	Parms.PaidUnlocked = PaidUnlocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassLevelPanel.OnSetup
// (Event, Public, BlueprintEvent)

void USeasonPassLevelPanel::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelPanel", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassLevelPanel.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSeasonPassLevelInfo*         Info                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassLevelPanel::Setup(class UFortSeasonPassLevelInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelPanel", "Setup");

	Params::SeasonPassLevelPanel_Setup Parms{};

	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.SeasonPassLevelPanel.GetLevelInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSeasonPassLevelInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSeasonPassLevelInfo* USeasonPassLevelPanel::GetLevelInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassLevelPanel", "GetLevelInfo");

	Params::SeasonPassLevelPanel_GetLevelInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassPageWidget.ContainsLevel
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassPageWidget::ContainsLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "ContainsLevel");

	Params::SeasonPassPageWidget_ContainsLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassPageWidget.NavigatePageLeft
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USeasonPassPageWidget::NavigatePageLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "NavigatePageLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassPageWidget.NavigatePageRight
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USeasonPassPageWidget::NavigatePageRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "NavigatePageRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassPageWidget.OnBattlePassChanged
// (Event, Protected, BlueprintEvent)

void USeasonPassPageWidget::OnBattlePassChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "OnBattlePassChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassPageWidget.ScreenShown
// (Event, Public, BlueprintCallable, BlueprintEvent)

void USeasonPassPageWidget::ScreenShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "ScreenShown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassPageWidget.ShouldPlayInto
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   FirstLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassPageWidget::ShouldPlayInto(int32 FirstLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "ShouldPlayInto");

	Params::SeasonPassPageWidget_ShouldPlayInto Parms{};

	Parms.FirstLevel = FirstLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassPageWidget.GetCurrentSeasonNumber
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USeasonPassPageWidget::GetCurrentSeasonNumber() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "GetCurrentSeasonNumber");

	Params::SeasonPassPageWidget_GetCurrentSeasonNumber Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassPageWidget.OwnsSeasonPass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassPageWidget::OwnsSeasonPass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassPageWidget", "OwnsSeasonPass");

	Params::SeasonPassPageWidget_OwnsSeasonPass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.GenerateLevelWidgets
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortSeasonPassLevelInfo*         LevelInfo                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USeasonPassLevelWidget*>   ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class USeasonPassLevelWidget*> USeasonPassScreenBase::GenerateLevelWidgets(class UFortSeasonPassLevelInfo* LevelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GenerateLevelWidgets");

	Params::SeasonPassScreenBase_GenerateLevelWidgets Parms{};

	Parms.LevelInfo = LevelInfo;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.NavigateToLevel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassScreenBase::NavigateToLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "NavigateToLevel");

	Params::SeasonPassScreenBase_NavigateToLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.SeasonPassScreenBase.OnLevelsGenerated
// (Event, Protected, BlueprintEvent)

void USeasonPassScreenBase::OnLevelsGenerated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OnLevelsGenerated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassScreenBase.OnNavigateToLevel
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassScreenBase::OnNavigateToLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OnNavigateToLevel");

	Params::SeasonPassScreenBase_OnNavigateToLevel Parms{};

	Parms.Level = Level;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassScreenBase.OnNoCurrentSeason
// (Event, Protected, BlueprintEvent)

void USeasonPassScreenBase::OnNoCurrentSeason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OnNoCurrentSeason");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassScreenBase.OnSeasonPassChanged
// (Event, Protected, BlueprintEvent)

void USeasonPassScreenBase::OnSeasonPassChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OnSeasonPassChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassScreenBase.OnSetGiftability
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsGiftable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassScreenBase::OnSetGiftability(bool bIsGiftable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OnSetGiftability");

	Params::SeasonPassScreenBase_OnSetGiftability Parms{};

	Parms.bIsGiftable = bIsGiftable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassScreenBase.ScrollNegative
// (Event, Protected, BlueprintEvent)

void USeasonPassScreenBase::ScrollNegative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "ScrollNegative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassScreenBase.ScrollPositive
// (Event, Protected, BlueprintEvent)

void USeasonPassScreenBase::ScrollPositive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "ScrollPositive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteUI.SeasonPassScreenBase.ShouldOpenAboutScreen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassScreenBase::ShouldOpenAboutScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "ShouldOpenAboutScreen");

	Params::SeasonPassScreenBase_ShouldOpenAboutScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.UpdateStoreHasStarsNotification
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowNotification                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USeasonPassScreenBase::UpdateStoreHasStarsNotification(bool bShowNotification)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "UpdateStoreHasStarsNotification");

	Params::SeasonPassScreenBase_UpdateStoreHasStarsNotification Parms{};

	Parms.bShowNotification = bShowNotification;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.SeasonPassScreenBase.GetAllLevelInfos
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TMap<int32, class UFortSeasonPassLevelInfo*>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const TMap<int32, class UFortSeasonPassLevelInfo*> USeasonPassScreenBase::GetAllLevelInfos() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GetAllLevelInfos");

	Params::SeasonPassScreenBase_GetAllLevelInfos Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.GetLevelInfo
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSeasonPassLevelInfo*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSeasonPassLevelInfo* USeasonPassScreenBase::GetLevelInfo(int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GetLevelInfo");

	Params::SeasonPassScreenBase_GetLevelInfo Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.GetSeasonEndDate
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime USeasonPassScreenBase::GetSeasonEndDate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GetSeasonEndDate");

	Params::SeasonPassScreenBase_GetSeasonEndDate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.GetSeasonPassLevel
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USeasonPassScreenBase::GetSeasonPassLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GetSeasonPassLevel");

	Params::SeasonPassScreenBase_GetSeasonPassLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.GetSeasonPassLevelMax
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USeasonPassScreenBase::GetSeasonPassLevelMax() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "GetSeasonPassLevelMax");

	Params::SeasonPassScreenBase_GetSeasonPassLevelMax Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.OwnsSeasonPass
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassScreenBase::OwnsSeasonPass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "OwnsSeasonPass");

	Params::SeasonPassScreenBase_OwnsSeasonPass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonPassScreenBase.PurchaseAvailible
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USeasonPassScreenBase::PurchaseAvailible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonPassScreenBase", "PurchaseAvailible");

	Params::SeasonPassScreenBase_PurchaseAvailible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.SeasonRewardsGridWidget.Populate
// (Final, Native, Public, BlueprintCallable)

void USeasonRewardsGridWidget::Populate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SeasonRewardsGridWidget", "Populate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.StoreToastRequest.BeginRequest
// (Native, Public, BlueprintCallable)

void UStoreToastRequest::BeginRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "BeginRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.StoreToastRequest.CompleteRequest
// (Native, Public, BlueprintCallable)

void UStoreToastRequest::CompleteRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "CompleteRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.StoreToastRequest.IsRequestReady
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreToastRequest::IsRequestReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "IsRequestReady");

	Params::StoreToastRequest_IsRequestReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.StoreToastRequest.ShouldBeginRequest
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreToastRequest::ShouldBeginRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "ShouldBeginRequest");

	Params::StoreToastRequest_ShouldBeginRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.StoreToastRequest.SkipRequest
// (Native, Public, BlueprintCallable)

void UStoreToastRequest::SkipRequest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "SkipRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.StoreToastRequest.GetToast
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FStoreCallout                    ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FStoreCallout UStoreToastRequest::GetToast() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreToastRequest", "GetToast");

	Params::StoreToastRequest_GetToast Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnCountdownTimerUpdate
// (Final, Native, Protected)

void UTwoTeamScoreWidgetBase::OnCountdownTimerUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnCountdownTimerUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnGamePhaseChanged
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        GamePhase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTwoTeamScoreWidgetBase::OnGamePhaseChanged(EAthenaGamePhase GamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnGamePhaseChanged");

	Params::TwoTeamScoreWidgetBase_OnGamePhaseChanged Parms{};

	Parms.GamePhase = GamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnHandleSpectatingChanged
// (Final, Native, Protected)
// Parameters:
// class AFortPlayerStateZone*             SpectatingTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTwoTeamScoreWidgetBase::OnHandleSpectatingChanged(class AFortPlayerStateZone* SpectatingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnHandleSpectatingChanged");

	Params::TwoTeamScoreWidgetBase_OnHandleSpectatingChanged Parms{};

	Parms.SpectatingTarget = SpectatingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnPlayScoreProgressSound
// (Event, Protected, BlueprintEvent)
// Parameters:
// ETDMScoreProgressTypes                  ScoreProgressType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalTeam                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTwoTeamScoreWidgetBase::OnPlayScoreProgressSound(ETDMScoreProgressTypes ScoreProgressType, bool bIsLocalTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnPlayScoreProgressSound");

	Params::TwoTeamScoreWidgetBase_OnPlayScoreProgressSound Parms{};

	Parms.ScoreProgressType = ScoreProgressType;
	Parms.bIsLocalTeam = bIsLocalTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnUpdateTeamScore
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// int32                                   TeamIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTDMTeamScoreData                ScoreData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTwoTeamScoreWidgetBase::OnUpdateTeamScore(int32 TeamIndex, const struct FTDMTeamScoreData& ScoreData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnUpdateTeamScore");

	Params::TwoTeamScoreWidgetBase_OnUpdateTeamScore Parms{};

	Parms.TeamIndex = TeamIndex;
	Parms.ScoreData = std::move(ScoreData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.TwoTeamScoreWidgetBase.OnUpdateTotalScore
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             TotalScoreText                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UTwoTeamScoreWidgetBase::OnUpdateTotalScore(const class FText& TotalScoreText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "OnUpdateTotalScore");

	Params::TwoTeamScoreWidgetBase_OnUpdateTotalScore Parms{};

	Parms.TotalScoreText = std::move(TotalScoreText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteUI.TwoTeamScoreWidgetBase.UpdateAllUI
// (Final, Native, Protected)

void UTwoTeamScoreWidgetBase::UpdateAllUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TwoTeamScoreWidgetBase", "UpdateAllUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.WeaponOverheatWidget.OnPawnChanged
// (Final, Native, Protected)

void UWeaponOverheatWidget::OnPawnChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponOverheatWidget", "OnPawnChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.WeaponOverheatWidget.OnWeaponEquipped
// (Final, Native, Protected)
// Parameters:
// class AFortWeapon*                      CurrentWeapon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWeaponOverheatWidget::OnWeaponEquipped(class AFortWeapon* CurrentWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponOverheatWidget", "OnWeaponEquipped");

	Params::WeaponOverheatWidget_OnWeaponEquipped Parms{};

	Parms.CurrentWeapon = CurrentWeapon;
	Parms.PrevWeapon = PrevWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteUI.WeaponOverheatWidget.OnWeaponUnEquipped
// (Final, Native, Protected)

void UWeaponOverheatWidget::OnWeaponUnEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WeaponOverheatWidget", "OnWeaponUnEquipped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}

}

