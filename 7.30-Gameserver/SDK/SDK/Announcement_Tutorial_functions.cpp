#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_Tutorial

#include "Basic.hpp"

#include "Announcement_Tutorial_classes.hpp"
#include "Announcement_Tutorial_parameters.hpp"


namespace SDK
{

// Function Announcement_Tutorial.Announcement_Tutorial_C.ExecuteUbergraph_Announcement_Tutorial
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAnnouncement_Tutorial_C::ExecuteUbergraph_Announcement_Tutorial(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "ExecuteUbergraph_Announcement_Tutorial");

	Params::Announcement_Tutorial_C_ExecuteUbergraph_Announcement_Tutorial Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.ResetTutorialAnnoucementWidget
// (BlueprintCallable, BlueprintEvent)

void UAnnouncement_Tutorial_C::ResetTutorialAnnoucementWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "ResetTutorialAnnoucementWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.HandleClientEvent_OnboardingHideUI
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          EventFocus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UAnnouncement_Tutorial_C::HandleClientEvent_OnboardingHideUI(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "HandleClientEvent_OnboardingHideUI");

	Params::Announcement_Tutorial_C_HandleClientEvent_OnboardingHideUI Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.HandleClientEvent_OnboardingShowUI
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          EventFocus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UAnnouncement_Tutorial_C::HandleClientEvent_OnboardingShowUI(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "HandleClientEvent_OnboardingShowUI");

	Params::Announcement_Tutorial_C_HandleClientEvent_OnboardingShowUI Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UAnnouncement_Tutorial_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.HandleUpdateTutorial
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortClientAnnouncementData_TutorialTutorialData                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAnnouncement_Tutorial_C::HandleUpdateTutorial(const struct FFortClientAnnouncementData_Tutorial& TutorialData, bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "HandleUpdateTutorial");

	Params::Announcement_Tutorial_C_HandleUpdateTutorial Parms{};

	Parms.TutorialData = std::move(TutorialData);
	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.AddTextLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Transparent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAnnouncement_Tutorial_C::AddTextLine(const class FText& Text, bool Transparent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "AddTextLine");

	Params::Announcement_Tutorial_C_AddTextLine Parms{};

	Parms.Text = std::move(Text);
	Parms.Transparent = Transparent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.UpdateTutorialData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortClientAnnouncementData_TutorialTutorialData                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UAnnouncement_Tutorial_C::UpdateTutorialData(const struct FFortClientAnnouncementData_Tutorial& TutorialData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "UpdateTutorialData");

	Params::Announcement_Tutorial_C_UpdateTutorialData Parms{};

	Parms.TutorialData = std::move(TutorialData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.RefreshTextLines
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAnnouncement_Tutorial_C::RefreshTextLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "RefreshTextLines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.GetLightboxVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFortClientAnnouncementData_TutorialFortClientAnnouncementData_Tutorial                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UAnnouncement_Tutorial_C::GetLightboxVisibility(const struct FFortClientAnnouncementData_Tutorial& FortClientAnnouncementData_Tutorial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "GetLightboxVisibility");

	Params::Announcement_Tutorial_C_GetLightboxVisibility Parms{};

	Parms.FortClientAnnouncementData_Tutorial = std::move(FortClientAnnouncementData_Tutorial);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.CheckContinueTutorial
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortClientAnnouncementData_TutorialTutorialData                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UAnnouncement_Tutorial_C::CheckContinueTutorial(const struct FFortClientAnnouncementData_Tutorial& TutorialData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "CheckContinueTutorial");

	Params::Announcement_Tutorial_C_CheckContinueTutorial Parms{};

	Parms.TutorialData = std::move(TutorialData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Announcement_Tutorial.Announcement_Tutorial_C.ContinueTutorial
// (Public, BlueprintCallable, BlueprintEvent)

void UAnnouncement_Tutorial_C::ContinueTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Announcement_Tutorial_C", "ContinueTutorial");

	UObject::ProcessEvent(Func, nullptr);
}

}

