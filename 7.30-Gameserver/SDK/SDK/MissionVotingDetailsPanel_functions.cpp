#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionVotingDetailsPanel

#include "Basic.hpp"

#include "MissionVotingDetailsPanel_classes.hpp"
#include "MissionVotingDetailsPanel_parameters.hpp"


namespace SDK
{

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnRecepientVoted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::OnRecepientVoted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnRecepientVoted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnVoteLockedOut__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::OnVoteLockedOut__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnVoteLockedOut__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnVoteResultFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionVotingDetailsPanel_C::OnVoteResultFinished__DelegateSignature(EFortVoteType VoteType, bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnVoteResultFinished__DelegateSignature");

	Params::MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature Parms{};

	Parms.VoteType = VoteType;
	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnMissionActivateNoVote__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::OnMissionActivateNoVote__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnMissionActivateNoVote__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.ExecuteUbergraph_MissionVotingDetailsPanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::ExecuteUbergraph_MissionVotingDetailsPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "ExecuteUbergraph_MissionVotingDetailsPanel");

	Params::MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature");

	Params::MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "Tick");

	Params::MissionVotingDetailsPanel_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionVotingDetailsPanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.PlayHideVoteResultAnimation
// (BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::PlayHideVoteResultAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "PlayHideVoteResultAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.HandleHideVoteResultAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::HandleHideVoteResultAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "HandleHideVoteResultAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.HandleShowVoteResultAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::HandleShowVoteResultAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "HandleShowVoteResultAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnVoteUpdatedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::OnVoteUpdatedBP(EFortVoteType VoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnVoteUpdatedBP");

	Params::MissionVotingDetailsPanel_C_OnVoteUpdatedBP Parms{};

	Parms.VoteType = VoteType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnMultiplayerChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsMultiplayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionVotingDetailsPanel_C::OnMultiplayerChangedBP(bool bIsMultiplayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnMultiplayerChangedBP");

	Params::MissionVotingDetailsPanel_C_OnMultiplayerChangedBP Parms{};

	Parms.bIsMultiplayer = bIsMultiplayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVoteActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_VoteResult                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 Param_VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OnActiveVoteChangedBP");

	Params::MissionVotingDetailsPanel_C_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.Param_VoteResult = Param_VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.ShowVoteResult
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionVotingDetailsPanel_C::ShowVoteResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "ShowVoteResult");

	Params::MissionVotingDetailsPanel_C_ShowVoteResult Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature");

	Params::MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");

	Params::MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionVotingDetailsPanel_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.InitializePanel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortVoteType                           InVoteType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionVotingDetailsPanel_C::InitializePanel(EFortVoteType InVoteType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "InitializePanel");

	Params::MissionVotingDetailsPanel_C_InitializePanel Parms{};

	Parms.InVoteType = InVoteType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.RefreshPanel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::RefreshPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "RefreshPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateRemainingVoteTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateRemainingVoteTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateRemainingVoteTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteInstigatorInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateVoteInstigatorInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateVoteInstigatorInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateVoteButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateVoteButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateObjectiveReadyTime
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateObjectiveReadyTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateObjectiveReadyTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.IsVoteRequired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    VoteRequired                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionVotingDetailsPanel_C::IsVoteRequired(bool* VoteRequired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "IsVoteRequired");

	Params::MissionVotingDetailsPanel_C_IsVoteRequired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VoteRequired != nullptr)
		*VoteRequired = Parms.VoteRequired;
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OpenDetails
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::OpenDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "OpenDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.CloseDetails
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::CloseDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "CloseDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateDisplay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteCounts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::UpdateVoteCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "UpdateVoteCounts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.CleanupVoteResultAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionVotingDetailsPanel_C::CleanupVoteResultAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "CleanupVoteResultAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.IsVoteMultiPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionVotingDetailsPanel_C::IsVoteMultiPlayer(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionVotingDetailsPanel_C", "IsVoteMultiPlayer");

	Params::MissionVotingDetailsPanel_C_IsVoteMultiPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}

}

