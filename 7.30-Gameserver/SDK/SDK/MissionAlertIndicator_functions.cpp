#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionAlertIndicator

#include "Basic.hpp"

#include "MissionAlertIndicator_classes.hpp"
#include "MissionAlertIndicator_parameters.hpp"


namespace SDK
{

// Function MissionAlertIndicator.MissionAlertIndicator_C.ExecuteUbergraph_MissionAlertIndicator
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionAlertIndicator_C::ExecuteUbergraph_MissionAlertIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "ExecuteUbergraph_MissionAlertIndicator");

	Params::MissionAlertIndicator_C_ExecuteUbergraph_MissionAlertIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionAlertIndicator.MissionAlertIndicator_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionAlertIndicator_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionAlertIndicator.MissionAlertIndicator_C.ToggleTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionAlertIndicator_C::ToggleTimer(bool IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "ToggleTimer");

	Params::MissionAlertIndicator_C_ToggleTimer Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionAlertIndicator.MissionAlertIndicator_C.Update
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionAlertIndicator_C::Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionAlertIndicator.MissionAlertIndicator_C.Config
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            AlertVisualTags                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UMissionAlertIndicator_C::Config(const struct FGameplayTagContainer& AlertVisualTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "Config");

	Params::MissionAlertIndicator_C_Config Parms{};

	Parms.AlertVisualTags = std::move(AlertVisualTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionAlertIndicator.MissionAlertIndicator_C.Get Mission Alert Visual Icon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FSlateBrush                      OutBrush                                               (Parm, OutParm)

void UMissionAlertIndicator_C::Get_Mission_Alert_Visual_Icon(struct FGameplayTagContainer& TagContainer, struct FSlateBrush* OutBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionAlertIndicator_C", "Get Mission Alert Visual Icon");

	Params::MissionAlertIndicator_C_Get_Mission_Alert_Visual_Icon Parms{};

	Parms.TagContainer = std::move(TagContainer);

	UObject::ProcessEvent(Func, &Parms);

	TagContainer = std::move(Parms.TagContainer);

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);
}

}

