#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_ThrowConsumable

#include "Basic.hpp"

#include "GA_ThrowConsumable_classes.hpp"
#include "GA_ThrowConsumable_parameters.hpp"


namespace SDK
{

// Function GA_ThrowConsumable.GA_ThrowConsumable_C.ExecuteUbergraph_GA_ThrowConsumable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::ExecuteUbergraph_GA_ThrowConsumable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "ExecuteUbergraph_GA_ThrowConsumable");

	Params::GA_ThrowConsumable_C_ExecuteUbergraph_GA_ThrowConsumable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.UpdateTrajectory
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::UpdateTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "UpdateTrajectory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.CleanupTrajectoryIndicatorOnUnequip
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::CleanupTrajectoryIndicatorOnUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "CleanupTrajectoryIndicatorOnUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_ThrowConsumable_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnAbilityInputReleased
// (Event, Protected, BlueprintEvent)

void UGA_ThrowConsumable_C::OnAbilityInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnAbilityInputReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.InitTrajectoryVariables
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::InitTrajectoryVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "InitTrajectoryVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_ThrowConsumable_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "K2_OnEndAbility");

	Params::GA_ThrowConsumable_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.AttemptSpawnThrownProjectile
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::AttemptSpawnThrownProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "AttemptSpawnThrownProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.ThrowProjectile
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::ThrowProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "ThrowProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnCompleted_D89CCB8E47DB19D6DCF41F96F207CC3D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnBlendOut_D89CCB8E47DB19D6DCF41F96F207CC3D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnInterrupted_D89CCB8E47DB19D6DCF41F96F207CC3D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnCancelled_D89CCB8E47DB19D6DCF41F96F207CC3D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnFinish_96367E244486362FDDE5ED87D909C17B
// (BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnFinish_96367E244486362FDDE5ED87D909C17B()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnFinish_96367E244486362FDDE5ED87D909C17B");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.Triggered_01C5B37D48E3DC6F82DDC58640CE2A27
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::Triggered_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "Triggered_01C5B37D48E3DC6F82DDC58640CE2A27");

	Params::GA_ThrowConsumable_C_Triggered_01C5B37D48E3DC6F82DDC58640CE2A27 Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27");

	Params::GA_ThrowConsumable_C_Cancelled_01C5B37D48E3DC6F82DDC58640CE2A27 Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.Completed_01C5B37D48E3DC6F82DDC58640CE2A27
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     ApplicationTag                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::Completed_01C5B37D48E3DC6F82DDC58640CE2A27(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "Completed_01C5B37D48E3DC6F82DDC58640CE2A27");

	Params::GA_ThrowConsumable_C_Completed_01C5B37D48E3DC6F82DDC58640CE2A27 Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.PrethrowSetup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::PrethrowSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "PrethrowSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.SpawnThrownProjectile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_ProjectileClass                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ProjectileSpawnLocation                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ProjectileSpawnDirection                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FFortGameplayEffectContainerSpec Param_ExplosionEffectContainerSpec                     (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   ProjectileInitialSpeed                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Param_ProjectileGravityScale                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortProjectileBase*              Param_SpawnedProjectile                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::SpawnThrownProjectile(class UClass* Param_ProjectileClass, const struct FVector& ProjectileSpawnLocation, const struct FRotator& ProjectileSpawnDirection, const struct FFortGameplayEffectContainerSpec& Param_ExplosionEffectContainerSpec, float ProjectileInitialSpeed, float Param_ProjectileGravityScale, class AFortProjectileBase** Param_SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "SpawnThrownProjectile");

	Params::GA_ThrowConsumable_C_SpawnThrownProjectile Parms{};

	Parms.Param_ProjectileClass = Param_ProjectileClass;
	Parms.ProjectileSpawnLocation = std::move(ProjectileSpawnLocation);
	Parms.ProjectileSpawnDirection = std::move(ProjectileSpawnDirection);
	Parms.Param_ExplosionEffectContainerSpec = std::move(Param_ExplosionEffectContainerSpec);
	Parms.ProjectileInitialSpeed = ProjectileInitialSpeed;
	Parms.Param_ProjectileGravityScale = Param_ProjectileGravityScale;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SpawnedProjectile != nullptr)
		*Param_SpawnedProjectile = Parms.Param_SpawnedProjectile;
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnProjectileSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortProjectileBase*              Param_SpawnedProjectile                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::OnProjectileSpawned(class AFortProjectileBase* Param_SpawnedProjectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnProjectileSpawned");

	Params::GA_ThrowConsumable_C_OnProjectileSpawned Parms{};

	Parms.Param_SpawnedProjectile = Param_SpawnedProjectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.OnProjectileSetup
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::OnProjectileSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "OnProjectileSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.SetupDummyProjectile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::SetupDummyProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "SetupDummyProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.UpdateTrajectorySpline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::UpdateTrajectorySpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "UpdateTrajectorySpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.PostThrowCleanup
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::PostThrowCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "PostThrowCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.CleanupTrajectory
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_ThrowConsumable_C::CleanupTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "CleanupTrajectory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.SpawnTrajectoryIndicator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpawnOnEquip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFortProjectileTrajectory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFortProjectileTrajectory* UGA_ThrowConsumable_C::SpawnTrajectoryIndicator(bool bSpawnOnEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "SpawnTrajectoryIndicator");

	Params::GA_ThrowConsumable_C_SpawnTrajectoryIndicator Parms{};

	Parms.bSpawnOnEquip = bSpawnOnEquip;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.GetSpawnLocationAndRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_ThrowConsumable_C::GetSpawnLocationAndRotation(struct FVector* Location, struct FRotator* Rotation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "GetSpawnLocationAndRotation");

	Params::GA_ThrowConsumable_C_GetSpawnLocationAndRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.GetOwningPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_ThrowConsumable_C::GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "GetOwningPlayer");

	Params::GA_ThrowConsumable_C_GetOwningPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Pawn != nullptr)
		*Player_Pawn = Parms.Player_Pawn;
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.GetProjectileTrajectoryPoints
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  OutSplinePoints                                        (Parm, OutParm, ZeroConstructor)
// TArray<struct FVector>                  OutSplineTangents                                      (Parm, OutParm, ZeroConstructor)
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_ThrowConsumable_C::GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "GetProjectileTrajectoryPoints");

	Params::GA_ThrowConsumable_C_GetProjectileTrajectoryPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSplinePoints != nullptr)
		*OutSplinePoints = std::move(Parms.OutSplinePoints);

	if (OutSplineTangents != nullptr)
		*OutSplineTangents = std::move(Parms.OutSplineTangents);

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);
}


// Function GA_ThrowConsumable.GA_ThrowConsumable_C.GetProjectileTrajectoryActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortProjectileTrajectory>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class AFortProjectileTrajectory> UGA_ThrowConsumable_C::GetProjectileTrajectoryActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_ThrowConsumable_C", "GetProjectileTrajectoryActor");

	Params::GA_ThrowConsumable_C_GetProjectileTrajectoryActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

