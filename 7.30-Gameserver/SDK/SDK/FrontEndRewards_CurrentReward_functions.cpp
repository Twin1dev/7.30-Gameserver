#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_CurrentReward

#include "Basic.hpp"

#include "FrontEndRewards_CurrentReward_classes.hpp"
#include "FrontEndRewards_CurrentReward_parameters.hpp"


namespace SDK
{

// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.OnDropAnimationFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::OnDropAnimationFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "OnDropAnimationFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.OnPopAnimationFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::OnPopAnimationFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "OnPopAnimationFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.OnOpenAnimationStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::OnOpenAnimationStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "OnOpenAnimationStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.OnOpenAnimationFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::OnOpenAnimationFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "OnOpenAnimationFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.ExecuteUbergraph_FrontEndRewards_CurrentReward
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_CurrentReward_C::ExecuteUbergraph_FrontEndRewards_CurrentReward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "ExecuteUbergraph_FrontEndRewards_CurrentReward");

	Params::FrontEndRewards_CurrentReward_C_ExecuteUbergraph_FrontEndRewards_CurrentReward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.fadeIconToWhite
// (BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::FadeIconToWhite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "fadeIconToWhite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.PlayDropAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::PlayDropAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "PlayDropAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.PlayPopAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::PlayPopAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "PlayPopAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.PlayOpenAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::PlayOpenAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "PlayOpenAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.HandlePopAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::HandlePopAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "HandlePopAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.HandleDropAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::HandleDropAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "HandleDropAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.HandleOpenAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::HandleOpenAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "HandleOpenAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.updateFade
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::UpdateFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "updateFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.SkipOpenAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::SkipOpenAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "SkipOpenAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.PlayFadeOutAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::PlayFadeOutAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "PlayFadeOutAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.StopBounceAnimation
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::StopBounceAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "StopBounceAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.SkipPopAnimation
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::SkipPopAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "SkipPopAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Play Drop Animation Sound
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Play_Drop_Animation_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Play Drop Animation Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Play Pop Animation Sound
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Play_Pop_Animation_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Play Pop Animation Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Play Open Animation Sound
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Play_Open_Animation_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Play Open Animation Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Reset Reward Icon Translation and Scale
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Reset_Reward_Icon_Translation_and_Scale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Reset Reward Icon Translation and Scale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_CurrentReward.FrontEndRewards_CurrentReward_C.Reset Canvas Panel Slot Alignment and Anchors
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_CurrentReward_C::Reset_Canvas_Panel_Slot_Alignment_and_Anchors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_CurrentReward_C", "Reset Canvas Panel Slot Alignment and Anchors");

	UObject::ProcessEvent(Func, nullptr);
}

}

