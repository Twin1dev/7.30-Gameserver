#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadMappingInfo_v3

#include "Basic.hpp"

#include "GamepadMappingInfo_v3_classes.hpp"
#include "GamepadMappingInfo_v3_parameters.hpp"


namespace SDK
{

// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.CustomKeySelected__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::CustomKeySelected__DelegateSignature(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "CustomKeySelected__DelegateSignature");

	Params::GamepadMappingInfo_v3_C_CustomKeySelected__DelegateSignature Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Image_LightboxClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::Image_LightboxClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Image_LightboxClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.CustomButtonNavLeft__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::CustomButtonNavLeft__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "CustomButtonNavLeft__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.ExecuteUbergraph_GamepadMappingInfo_v3
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::ExecuteUbergraph_GamepadMappingInfo_v3(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "ExecuteUbergraph_GamepadMappingInfo_v3");

	Params::GamepadMappingInfo_v3_C_ExecuteUbergraph_GamepadMappingInfo_v3 Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.UpdateCustomButtons
// (BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::UpdateCustomButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "UpdateCustomButtons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.OnButtonClicked_Bind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::OnButtonClicked_Bind(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "OnButtonClicked_Bind");

	Params::GamepadMappingInfo_v3_C_OnButtonClicked_Bind Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Update Controller Images
// (BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::Update_Controller_Images()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Update Controller Images");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UGamepadMappingInfo_v3_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.OnLoaded_CDBC1B27496027B96D10BC9A64224F3D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::OnLoaded_CDBC1B27496027B96D10BC9A64224F3D(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "OnLoaded_CDBC1B27496027B96D10BC9A64224F3D");

	Params::GamepadMappingInfo_v3_C_OnLoaded_CDBC1B27496027B96D10BC9A64224F3D Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Update Displayed Mapping
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortInputActionGroup                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Configuration                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::Update_Displayed_Mapping(int32 Platform, EFortInputActionGroup Mode, int32 Configuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Update Displayed Mapping");

	Params::GamepadMappingInfo_v3_C_Update_Displayed_Mapping Parms{};

	Parms.Platform = Platform;
	Parms.Mode = Mode;
	Parms.Configuration = Configuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.OnConfigChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortInputActionGroup                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::OnConfigChanged(EFortInputActionGroup Mode, int32 Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "OnConfigChanged");

	Params::GamepadMappingInfo_v3_C_OnConfigChanged Parms{};

	Parms.Mode = Mode;
	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.HandleConfigChanged_Athena
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortInputActionGroup                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::HandleConfigChanged_Athena(EFortInputActionGroup Mode, int32 Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "HandleConfigChanged_Athena");

	Params::GamepadMappingInfo_v3_C_HandleConfigChanged_Athena Parms{};

	Parms.Mode = Mode;
	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.HandleConfigChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortInputActionGroup                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::HandleConfigChanged(EFortInputActionGroup Mode, int32 Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "HandleConfigChanged");

	Params::GamepadMappingInfo_v3_C_HandleConfigChanged Parms{};

	Parms.Mode = Mode;
	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Handle Config Changed STW Build Mode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::Handle_Config_Changed_STW_Build_Mode(int32 Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Handle Config Changed STW Build Mode");

	Params::GamepadMappingInfo_v3_C_Handle_Config_Changed_STW_Build_Mode Parms{};

	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Handle Config Changed STW Combat Mode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Config                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::Handle_Config_Changed_STW_Combat_Mode(int32 Config)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Handle Config Changed STW Combat Mode");

	Params::GamepadMappingInfo_v3_C_Handle_Config_Changed_STW_Combat_Mode Parms{};

	Parms.Config = Config;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Handle Config Changed Hide or Show Unused Text Lines
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::Handle_Config_Changed_Hide_or_Show_Unused_Text_Lines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Handle Config Changed Hide or Show Unused Text Lines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.InitializeListOfButtonLabelTextWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::InitializeListOfButtonLabelTextWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "InitializeListOfButtonLabelTextWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.InitializeListOfButtonTextForSTWCombatProBuild
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     ButtonTextLabels                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UGamepadMappingInfo_v3_C::InitializeListOfButtonTextForSTWCombatProBuild(TArray<class FText>& ButtonTextLabels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "InitializeListOfButtonTextForSTWCombatProBuild");

	Params::GamepadMappingInfo_v3_C_InitializeListOfButtonTextForSTWCombatProBuild Parms{};

	Parms.ButtonTextLabels = std::move(ButtonTextLabels);

	UObject::ProcessEvent(Func, &Parms);

	ButtonTextLabels = std::move(Parms.ButtonTextLabels);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.GetDesiredSlateVisibilityForAbilityChordFromTextDisplay
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTextBlock*                       TextWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        DesiredSlateVisibility                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::GetDesiredSlateVisibilityForAbilityChordFromTextDisplay(class UTextBlock* TextWidget, ESlateVisibility* DesiredSlateVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "GetDesiredSlateVisibilityForAbilityChordFromTextDisplay");

	Params::GamepadMappingInfo_v3_C_GetDesiredSlateVisibilityForAbilityChordFromTextDisplay Parms{};

	Parms.TextWidget = TextWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (DesiredSlateVisibility != nullptr)
		*DesiredSlateVisibility = Parms.DesiredSlateVisibility;
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.SetTextFieldVisibilityForExtraLine
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       TextWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::SetTextFieldVisibilityForExtraLine(class UTextBlock* TextWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "SetTextFieldVisibilityForExtraLine");

	Params::GamepadMappingInfo_v3_C_SetTextFieldVisibilityForExtraLine Parms{};

	Parms.TextWidget = TextWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.InitializeListOfButtonTextForSTWCombatProCombat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     ButtonTextLabels                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UGamepadMappingInfo_v3_C::InitializeListOfButtonTextForSTWCombatProCombat(TArray<class FText>& ButtonTextLabels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "InitializeListOfButtonTextForSTWCombatProCombat");

	Params::GamepadMappingInfo_v3_C_InitializeListOfButtonTextForSTWCombatProCombat Parms{};

	Parms.ButtonTextLabels = std::move(ButtonTextLabels);

	UObject::ProcessEvent(Func, &Parms);

	ButtonTextLabels = std::move(Parms.ButtonTextLabels);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.ClearAllComboTextLines
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::ClearAllComboTextLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "ClearAllComboTextLines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.GetControllerImage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (Parm, OutParm, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::GetControllerImage(TSoftObjectPtr<class UTexture2D>* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "GetControllerImage");

	Params::GamepadMappingInfo_v3_C_GetControllerImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.InitializeListOfButtonTextForSTW_BuilderProBuild
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     ButtonTextLabels                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UGamepadMappingInfo_v3_C::InitializeListOfButtonTextForSTW_BuilderProBuild(TArray<class FText>& ButtonTextLabels)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "InitializeListOfButtonTextForSTW_BuilderProBuild");

	Params::GamepadMappingInfo_v3_C_InitializeListOfButtonTextForSTW_BuilderProBuild Parms{};

	Parms.ButtonTextLabels = std::move(ButtonTextLabels);

	UObject::ProcessEvent(Func, &Parms);

	ButtonTextLabels = std::move(Parms.ButtonTextLabels);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.SetButtonTextLabelsFromTextArray
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UGamepadMappingInfo_v3_C::SetButtonTextLabelsFromTextArray(TArray<class FText>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "SetButtonTextLabelsFromTextArray");

	Params::GamepadMappingInfo_v3_C_SetButtonTextLabelsFromTextArray Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.SetTextForMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortInputActionGroup                   Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadMappingInfo_v3_C::SetTextForMode(EFortInputActionGroup Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "SetTextForMode");

	Params::GamepadMappingInfo_v3_C_SetTextForMode Parms{};

	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.GetCustomButtonDataForKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             ActionName                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DescText                                               (Parm, OutParm)

void UGamepadMappingInfo_v3_C::GetCustomButtonDataForKey(const struct FKey& Key, class FName* ActionName, class FText* DescText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "GetCustomButtonDataForKey");

	Params::GamepadMappingInfo_v3_C_GetCustomButtonDataForKey Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);

	if (ActionName != nullptr)
		*ActionName = Parms.ActionName;

	if (DescText != nullptr)
		*DescText = std::move(Parms.DescText);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.On_Image_LightBox_MouseButtonDown_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UGamepadMappingInfo_v3_C::On_Image_LightBox_MouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "On_Image_LightBox_MouseButtonDown_0");

	Params::GamepadMappingInfo_v3_C_On_Image_LightBox_MouseButtonDown_0 Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.HideEditModeTab
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::HideEditModeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "HideEditModeTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.ShowEditModeTab
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::ShowEditModeTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "ShowEditModeTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.GamepadMappingInfoNavLeft
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::GamepadMappingInfoNavLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "GamepadMappingInfoNavLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadMappingInfo_v3.GamepadMappingInfo_v3_C.Set Controller Image
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGamepadMappingInfo_v3_C::Set_Controller_Image()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadMappingInfo_v3_C", "Set Controller Image");

	UObject::ProcessEvent(Func, nullptr);
}

}

