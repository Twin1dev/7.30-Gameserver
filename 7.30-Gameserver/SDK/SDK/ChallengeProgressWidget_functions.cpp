#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ChallengeProgressWidget

#include "Basic.hpp"

#include "ChallengeProgressWidget_classes.hpp"
#include "ChallengeProgressWidget_parameters.hpp"


namespace SDK
{

// Function ChallengeProgressWidget.ChallengeProgressWidget_C.ExecuteUbergraph_ChallengeProgressWidget
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeProgressWidget_C::ExecuteUbergraph_ChallengeProgressWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeProgressWidget_C", "ExecuteUbergraph_ChallengeProgressWidget");

	Params::ChallengeProgressWidget_C_ExecuteUbergraph_ChallengeProgressWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeProgressWidget.ChallengeProgressWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UChallengeProgressWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeProgressWidget_C", "PreConstruct");

	Params::ChallengeProgressWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeProgressWidget.ChallengeProgressWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UChallengeProgressWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeProgressWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ChallengeProgressWidget.ChallengeProgressWidget_C.Update
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Achieved                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Required                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PercentComplete                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ThresholdPercent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeProgressWidget_C::Update(int32 Achieved, int32 Required, float PercentComplete, float ThresholdPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeProgressWidget_C", "Update");

	Params::ChallengeProgressWidget_C_Update Parms{};

	Parms.Achieved = Achieved;
	Parms.Required = Required;
	Parms.PercentComplete = PercentComplete;
	Parms.ThresholdPercent = ThresholdPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ChallengeProgressWidget.ChallengeProgressWidget_C.SegmentHack
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NumSegments                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UChallengeProgressWidget_C::SegmentHack(int32 NumSegments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChallengeProgressWidget_C", "SegmentHack");

	Params::ChallengeProgressWidget_C_SegmentHack Parms{};

	Parms.NumSegments = NumSegments;

	UObject::ProcessEvent(Func, &Parms);
}

}

