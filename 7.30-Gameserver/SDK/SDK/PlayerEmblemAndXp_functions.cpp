#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerEmblemAndXp

#include "Basic.hpp"

#include "PlayerEmblemAndXp_classes.hpp"
#include "PlayerEmblemAndXp_parameters.hpp"


namespace SDK
{

// Function PlayerEmblemAndXp.PlayerEmblemAndXp_C.ExecuteUbergraph_PlayerEmblemAndXp
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerEmblemAndXp_C::ExecuteUbergraph_PlayerEmblemAndXp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerEmblemAndXp_C", "ExecuteUbergraph_PlayerEmblemAndXp");

	Params::PlayerEmblemAndXp_C_ExecuteUbergraph_PlayerEmblemAndXp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerEmblemAndXp.PlayerEmblemAndXp_C.OnAccountInfoChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortPublicAccountInfo           Result                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerEmblemAndXp_C::OnAccountInfoChanged(const struct FFortPublicAccountInfo& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerEmblemAndXp_C", "OnAccountInfoChanged");

	Params::PlayerEmblemAndXp_C_OnAccountInfoChanged Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerEmblemAndXp.PlayerEmblemAndXp_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerEmblemAndXp_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerEmblemAndXp_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerEmblemAndXp.PlayerEmblemAndXp_C.Refresh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPublicAccountInfo           FortPublicAccountInfo                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UPlayerEmblemAndXp_C::Refresh(struct FFortPublicAccountInfo& FortPublicAccountInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerEmblemAndXp_C", "Refresh");

	Params::PlayerEmblemAndXp_C_Refresh Parms{};

	Parms.FortPublicAccountInfo = std::move(FortPublicAccountInfo);

	UObject::ProcessEvent(Func, &Parms);

	FortPublicAccountInfo = std::move(Parms.FortPublicAccountInfo);
}


// Function PlayerEmblemAndXp.PlayerEmblemAndXp_C.SetupReward
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTextBlock*                       RewardText                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDailyQuestRewardInfo_C*          RewardInfoWidget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasReward                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFortItemQuantityPair            RewardItem                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   LevelRewarded                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerEmblemAndXp_C::SetupReward(class UWidget* Container, class UTextBlock* RewardText, class UDailyQuestRewardInfo_C* RewardInfoWidget, bool HasReward, const struct FFortItemQuantityPair& RewardItem, int32 LevelRewarded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerEmblemAndXp_C", "SetupReward");

	Params::PlayerEmblemAndXp_C_SetupReward Parms{};

	Parms.Container = Container;
	Parms.RewardText = RewardText;
	Parms.RewardInfoWidget = RewardInfoWidget;
	Parms.HasReward = HasReward;
	Parms.RewardItem = std::move(RewardItem);
	Parms.LevelRewarded = LevelRewarded;

	UObject::ProcessEvent(Func, &Parms);
}

}

