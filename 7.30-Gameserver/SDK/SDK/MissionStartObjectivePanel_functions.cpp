#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionStartObjectivePanel

#include "Basic.hpp"

#include "MissionStartObjectivePanel_classes.hpp"
#include "MissionStartObjectivePanel_parameters.hpp"


namespace SDK
{

// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.LockoutEndedAnimFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::LockoutEndedAnimFinished__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "LockoutEndedAnimFinished__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.HidePanelAnimEnded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::HidePanelAnimEnded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "HidePanelAnimEnded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.ExecuteUbergraph_MissionStartObjectivePanel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionStartObjectivePanel_C::ExecuteUbergraph_MissionStartObjectivePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "ExecuteUbergraph_MissionStartObjectivePanel");

	Params::MissionStartObjectivePanel_C_ExecuteUbergraph_MissionStartObjectivePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.OnActiveVoteChangedBP
// (Event, Protected, BlueprintEvent)
// Parameters:
// EFortVoteType                           VoteType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVoteActive                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   VoteResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMissionStartObjectivePanel_C::OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "OnActiveVoteChangedBP");

	Params::MissionStartObjectivePanel_C_OnActiveVoteChangedBP Parms{};

	Parms.VoteType = VoteType;
	Parms.bIsVoteActive = bIsVoteActive;
	Parms.VoteResult = VoteResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.HandleHidePanelFinished
// (BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::HandleHidePanelFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "HandleHidePanelFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.RewardAnimTrigger
// (BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::RewardAnimTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "RewardAnimTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.InfoObjectUpdated
// (Event, Protected, BlueprintEvent)

void UMissionStartObjectivePanel_C::InfoObjectUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "InfoObjectUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionStartObjectivePanel_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.HidePanel
// (BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::HidePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "HidePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.ShowPanel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceFinalState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMissionStartObjectivePanel_C::ShowPanel(bool ForceFinalState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "ShowPanel");

	Params::MissionStartObjectivePanel_C_ShowPanel Parms{};

	Parms.ForceFinalState = ForceFinalState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMissionStartObjectivePanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.UpdateRewards
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::UpdateRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "UpdateRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.UpdateDifficultyRating
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::UpdateDifficultyRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "UpdateDifficultyRating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Hover-Anim
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::HoverMinusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Hover-Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Leave-Anim
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::LeaveMinusAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Leave-Anim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Reward-ListAnim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::RewardMinusListAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Reward-ListAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Reward-IntroRewind
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::RewardMinusIntroRewind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Reward-IntroRewind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.Reward-IntroReset
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::RewardMinusIntroReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "Reward-IntroReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.ShowLockoutState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::ShowLockoutState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "ShowLockoutState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.UpdateLockoutTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::UpdateLockoutTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "UpdateLockoutTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.HideLockoutState
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::HideLockoutState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "HideLockoutState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.BindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::BindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "BindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MissionStartObjectivePanel.MissionStartObjectivePanel_C.UnbindDelegates
// (Public, BlueprintCallable, BlueprintEvent)

void UMissionStartObjectivePanel_C::UnbindDelegates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MissionStartObjectivePanel_C", "UnbindDelegates");

	UObject::ProcessEvent(Func, nullptr);
}

}

