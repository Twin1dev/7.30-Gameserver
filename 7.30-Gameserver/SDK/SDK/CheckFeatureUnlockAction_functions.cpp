#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CheckFeatureUnlockAction

#include "Basic.hpp"

#include "CheckFeatureUnlockAction_classes.hpp"
#include "CheckFeatureUnlockAction_parameters.hpp"


namespace SDK
{

// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.ExecuteUbergraph_CheckFeatureUnlockAction
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACheckFeatureUnlockAction_C::ExecuteUbergraph_CheckFeatureUnlockAction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "ExecuteUbergraph_CheckFeatureUnlockAction");

	Params::CheckFeatureUnlockAction_C_ExecuteUbergraph_CheckFeatureUnlockAction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.Execute
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortScriptedActionParams        Params_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ACheckFeatureUnlockAction_C::Execute(const struct FFortScriptedActionParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "Execute");

	Params::CheckFeatureUnlockAction_C_Execute Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACheckFeatureUnlockAction_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.IsFrontEndRewardsRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACheckFeatureUnlockAction_C::IsFrontEndRewardsRunning(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "IsFrontEndRewardsRunning");

	Params::CheckFeatureUnlockAction_C_IsFrontEndRewardsRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.IsFeatureUnlockAvailable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Feature_Unlock_Available                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACheckFeatureUnlockAction_C::IsFeatureUnlockAvailable(bool* Feature_Unlock_Available)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "IsFeatureUnlockAvailable");

	Params::CheckFeatureUnlockAction_C_IsFeatureUnlockAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Feature_Unlock_Available != nullptr)
		*Feature_Unlock_Available = Parms.Feature_Unlock_Available;
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.ShowFeatureUnlock
// (Public, BlueprintCallable, BlueprintEvent)

void ACheckFeatureUnlockAction_C::ShowFeatureUnlock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "ShowFeatureUnlock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.IsFrontendDailyRewardsRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsRunning                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACheckFeatureUnlockAction_C::IsFrontendDailyRewardsRunning(bool* IsRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "IsFrontendDailyRewardsRunning");

	Params::CheckFeatureUnlockAction_C_IsFrontendDailyRewardsRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRunning != nullptr)
		*IsRunning = Parms.IsRunning;
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.IsFeatureUnlockRunning
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACheckFeatureUnlockAction_C::IsFeatureUnlockRunning(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "IsFeatureUnlockRunning");

	Params::CheckFeatureUnlockAction_C_IsFeatureUnlockRunning Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function CheckFeatureUnlockAction.CheckFeatureUnlockAction_C.HandleFeatureUnlockClosed
// (Public, BlueprintCallable, BlueprintEvent)

void ACheckFeatureUnlockAction_C::HandleFeatureUnlockClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckFeatureUnlockAction_C", "HandleFeatureUnlockClosed");

	UObject::ProcessEvent(Func, nullptr);
}

}

