#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_Expedition

#include "Basic.hpp"

#include "FrontEndRewards_Expedition_classes.hpp"
#include "FrontEndRewards_Expedition_parameters.hpp"


namespace SDK
{

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.OnExpeditionCompleted__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Succeeded                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEndRewards_Expedition_C::OnExpeditionCompleted__DelegateSignature(bool Succeeded, TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "OnExpeditionCompleted__DelegateSignature");

	Params::FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature Parms{};

	Parms.Succeeded = Succeeded;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.ExecuteUbergraph_FrontEndRewards_Expedition
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_Expedition_C::ExecuteUbergraph_FrontEndRewards_Expedition(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "ExecuteUbergraph_FrontEndRewards_Expedition");

	Params::FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UFrontEndRewards_Expedition_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.OnPrimaryAction
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::OnPrimaryAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "OnPrimaryAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.OnCollectExpeditionCompleted
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSucceeded                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UFrontEndRewards_Expedition_C::OnCollectExpeditionCompleted(const class UFortExpeditionItem* Expedition, bool bSucceeded, const TArray<struct FFortItemInstanceQuantityPair>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "OnCollectExpeditionCompleted");

	Params::FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted Parms{};

	Parms.Expedition = Expedition;
	Parms.bSucceeded = bSucceeded;
	Parms.Rewards = std::move(Rewards);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.TransitionOutBegin
// (Event, Protected, BlueprintEvent)

void UFrontEndRewards_Expedition_C::TransitionOutBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "TransitionOutBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.TransitionInBegin
// (Event, Protected, BlueprintEvent)

void UFrontEndRewards_Expedition_C::TransitionInBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "TransitionInBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.PopulateFromExpedition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortExpeditionItem*              Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFrontEndRewards_Expedition_C::PopulateFromExpedition(class UFortExpeditionItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "PopulateFromExpedition");

	Params::FrontEndRewards_Expedition_C_PopulateFromExpedition Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetBrushFromExpedition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::SetBrushFromExpedition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "SetBrushFromExpedition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetTitleFromExpedition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::SetTitleFromExpedition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "SetTitleFromExpedition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetSuccessChanceFromExpedition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::SetSuccessChanceFromExpedition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "SetSuccessChanceFromExpedition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.Check
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::Check()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "Check");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.ContinueFail
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::ContinueFail()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "ContinueFail");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.ContinueSuccess
// (Private, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::ContinueSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "ContinueSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.HandleTransitionInComplete
// (Public, BlueprintCallable, BlueprintEvent)

void UFrontEndRewards_Expedition_C::HandleTransitionInComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontEndRewards_Expedition_C", "HandleTransitionInComplete");

	UObject::ProcessEvent(Func, nullptr);
}

}

