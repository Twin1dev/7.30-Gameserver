#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CheckExpeditionRewardsAction

#include "Basic.hpp"

#include "CheckExpeditionRewardsAction_classes.hpp"
#include "CheckExpeditionRewardsAction_parameters.hpp"


namespace SDK
{

// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.ExecuteUbergraph_CheckExpeditionRewardsAction
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACheckExpeditionRewardsAction_C::ExecuteUbergraph_CheckExpeditionRewardsAction(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "ExecuteUbergraph_CheckExpeditionRewardsAction");

	Params::CheckExpeditionRewardsAction_C_ExecuteUbergraph_CheckExpeditionRewardsAction Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.Handle Rewards Running
// (BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::Handle_Rewards_Running()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "Handle Rewards Running");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.Execute
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortScriptedActionParams        Params_0                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ACheckExpeditionRewardsAction_C::Execute(const struct FFortScriptedActionParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "Execute");

	Params::CheckExpeditionRewardsAction_C_Execute Parms{};

	Parms.Params_0 = std::move(Params_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.CompleteRewardsAction
// (Private, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::CompleteRewardsAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "CompleteRewardsAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.GetCompletedQuests
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           Completed_Quests                                       (Parm, OutParm, ZeroConstructor)

void ACheckExpeditionRewardsAction_C::GetCompletedQuests(TArray<class UFortQuestItem*>* Completed_Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "GetCompletedQuests");

	Params::CheckExpeditionRewardsAction_C_GetCompletedQuests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Completed_Quests != nullptr)
		*Completed_Quests = std::move(Parms.Completed_Quests);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.PopulateCompletedQuests
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::PopulateCompletedQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "PopulateCompletedQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.OpenFrontEndRewards
// (Private, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::OpenFrontEndRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "OpenFrontEndRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.PopulateRewards
// (Private, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::PopulateRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "PopulateRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.PopulateExpeditionRewards
// (Public, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::PopulateExpeditionRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "PopulateExpeditionRewards");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.HandleRewardsClaimed
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFrontEndRewards_Widget_C*        RewardsWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACheckExpeditionRewardsAction_C::HandleRewardsClaimed(class UFrontEndRewards_Widget_C* RewardsWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "HandleRewardsClaimed");

	Params::CheckExpeditionRewardsAction_C_HandleRewardsClaimed Parms{};

	Parms.RewardsWidget = RewardsWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.Clear
// (Private, BlueprintCallable, BlueprintEvent)

void ACheckExpeditionRewardsAction_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.HandleRewardsClaimError
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFrontEndRewards_Widget_C*        RewardsWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACheckExpeditionRewardsAction_C::HandleRewardsClaimError(class UFrontEndRewards_Widget_C* RewardsWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "HandleRewardsClaimError");

	Params::CheckExpeditionRewardsAction_C_HandleRewardsClaimError Parms{};

	Parms.RewardsWidget = RewardsWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.Is FrontEndRewards Running
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRunning                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACheckExpeditionRewardsAction_C::Is_FrontEndRewards_Running(bool* bRunning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "Is FrontEndRewards Running");

	Params::CheckExpeditionRewardsAction_C_Is_FrontEndRewards_Running Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bRunning != nullptr)
		*bRunning = Parms.bRunning;
}


// Function CheckExpeditionRewardsAction.CheckExpeditionRewardsAction_C.Find First Valid Player Controller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPlayerController*            FoundPC1                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACheckExpeditionRewardsAction_C::Find_First_Valid_Player_Controller(class AFortPlayerController** FoundPC1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CheckExpeditionRewardsAction_C", "Find First Valid Player Controller");

	Params::CheckExpeditionRewardsAction_C_Find_First_Valid_Player_Controller Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FoundPC1 != nullptr)
		*FoundPC1 = Parms.FoundPC1;
}

}

