#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_FireworksMortar_Holder

#include "Basic.hpp"

#include "B_Prj_FireworksMortar_Holder_classes.hpp"
#include "B_Prj_FireworksMortar_Holder_parameters.hpp"


namespace SDK
{

// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.ExecuteUbergraph_B_Prj_FireworksMortar_Holder
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_FireworksMortar_Holder_C::ExecuteUbergraph_B_Prj_FireworksMortar_Holder(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "ExecuteUbergraph_B_Prj_FireworksMortar_Holder");

	Params::B_Prj_FireworksMortar_Holder_C_ExecuteUbergraph_B_Prj_FireworksMortar_Holder Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.FlashShield
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_FireworksMortar_Holder_C::FlashShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "FlashShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Prj_FireworksMortar_Holder_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.OnStop
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Prj_FireworksMortar_Holder_C::OnStop(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "OnStop");

	Params::B_Prj_FireworksMortar_Holder_C_OnStop Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Prj_FireworksMortar_Holder_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "ReceiveHit");

	Params::B_Prj_FireworksMortar_Holder_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.SetRotation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         PlayerRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   YawOffset                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Prj_FireworksMortar_Holder_C::SetRotation(const struct FRotator& PlayerRotation, float YawOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "SetRotation");

	Params::B_Prj_FireworksMortar_Holder_C_SetRotation Parms{};

	Parms.PlayerRotation = std::move(PlayerRotation);
	Parms.YawOffset = YawOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.Rotate__FinishedFunc
// (BlueprintEvent)

void AB_Prj_FireworksMortar_Holder_C::Rotate__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "Rotate__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.Rotate__UpdateFunc
// (BlueprintEvent)

void AB_Prj_FireworksMortar_Holder_C::Rotate__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "Rotate__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Prj_FireworksMortar_Holder.B_Prj_FireworksMortar_Holder_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_Prj_FireworksMortar_Holder_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Prj_FireworksMortar_Holder_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

