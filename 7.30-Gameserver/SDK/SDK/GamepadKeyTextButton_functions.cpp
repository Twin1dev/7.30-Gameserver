#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadKeyTextButton

#include "Basic.hpp"

#include "GamepadKeyTextButton_classes.hpp"
#include "GamepadKeyTextButton_parameters.hpp"


namespace SDK
{

// Function GamepadKeyTextButton.GamepadKeyTextButton_C.ChangeTheBinding_Button__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::ChangeTheBinding_Button__DelegateSignature(class FName ActionName, const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "ChangeTheBinding_Button__DelegateSignature");

	Params::GamepadKeyTextButton_C_ChangeTheBinding_Button__DelegateSignature Parms{};

	Parms.ActionName = ActionName;
	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.ExecuteUbergraph_GamepadKeyTextButton
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::ExecuteUbergraph_GamepadKeyTextButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "ExecuteUbergraph_GamepadKeyTextButton");

	Params::GamepadKeyTextButton_C_ExecuteUbergraph_GamepadKeyTextButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.SetTabLabelInfo
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortTabButtonLabelInfo          TabLabelInfo                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGamepadKeyTextButton_C::SetTabLabelInfo(const struct FFortTabButtonLabelInfo& TabLabelInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "SetTabLabelInfo");

	Params::GamepadKeyTextButton_C_SetTabLabelInfo Parms{};

	Parms.TabLabelInfo = std::move(TabLabelInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.UpdateButton
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGamepadKeyTextButton_C*          Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::UpdateButton(class UGamepadKeyTextButton_C* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "UpdateButton");

	Params::GamepadKeyTextButton_C_UpdateButton Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.SetDataAndUpdateButton
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             DescText                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::SetDataAndUpdateButton(const struct FKey& Key, const class FText& DescText, class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "SetDataAndUpdateButton");

	Params::GamepadKeyTextButton_C_SetDataAndUpdateButton Parms{};

	Parms.Key = std::move(Key);
	Parms.DescText = std::move(DescText);
	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGamepadKeyTextButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "PreConstruct");

	Params::GamepadKeyTextButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.SetData
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FText                             DescText                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::SetData(const struct FKey& Key, const class FText& DescText, class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "SetData");

	Params::GamepadKeyTextButton_C_SetData Parms{};

	Parms.Key = std::move(Key);
	Parms.DescText = std::move(DescText);
	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.OnListItemObjectSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UObject*                          ListItemObject                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::OnListItemObjectSet(class UObject* ListItemObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "OnListItemObjectSet");

	Params::GamepadKeyTextButton_C_OnListItemObjectSet Parms{};

	Parms.ListItemObject = ListItemObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.UpdateContentAlignment
// (Private, BlueprintCallable, BlueprintEvent)

void UGamepadKeyTextButton_C::UpdateContentAlignment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "UpdateContentAlignment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.SetContentAlignment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHorizontalAlignment                    Param_ContentAlignment                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGamepadKeyTextButton_C::SetContentAlignment(EHorizontalAlignment Param_ContentAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "SetContentAlignment");

	Params::GamepadKeyTextButton_C_SetContentAlignment Parms{};

	Parms.Param_ContentAlignment = Param_ContentAlignment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GamepadKeyTextButton.GamepadKeyTextButton_C.SetNonInteractableStyle
// (Public, BlueprintCallable, BlueprintEvent)

void UGamepadKeyTextButton_C::SetNonInteractableStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GamepadKeyTextButton_C", "SetNonInteractableStyle");

	UObject::ProcessEvent(Func, nullptr);
}

}

