#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CUBE

#include "Basic.hpp"

#include "CUBE_classes.hpp"
#include "CUBE_parameters.hpp"


namespace SDK
{

// Function CUBE.CUBE_C.CubeSetupComplete__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::CubeSetupComplete__DelegateSignature(int32 CurrentIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeSetupComplete__DelegateSignature");

	Params::CUBE_C_CubeSetupComplete__DelegateSignature Parms{};

	Parms.CurrentIndex = CurrentIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.StopRuneGlow__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ACUBE_C::StopRuneGlow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "StopRuneGlow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LandedAtRune__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::LandedAtRune__DelegateSignature(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LandedAtRune__DelegateSignature");

	Params::CUBE_C_LandedAtRune__DelegateSignature Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.CubeReady__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeReady__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeReady__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeLeftPosition__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeLeftPosition__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeLeftPosition__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ExecuteUbergraph_CUBE
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::ExecuteUbergraph_CUBE(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ExecuteUbergraph_CUBE");

	Params::CUBE_C_ExecuteUbergraph_CUBE Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ResetImpulseTimer
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ResetImpulseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ResetImpulseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.TurnOn
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::TurnOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "TurnOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Reset
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACUBE_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Next
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::Next(int32 NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Next");

	Params::CUBE_C_Next Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.SetupLake
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::SetupLake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "SetupLake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Tilted Impact Sound
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::Tilted_Impact_Sound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Tilted Impact Sound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ReplayScrubSetup
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ReplayScrubSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ReplayScrubSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.End Roll Audio Lake
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::End_Roll_Audio_Lake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "End Roll Audio Lake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.New
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::New(int32 NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "New");

	Params::CUBE_C_New Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ReplayScrubbed
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ReplayScrubbed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ReplayScrubbed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeAppear
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeAppear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeAppear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.On Amb Zap Spawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::On_Amb_Zap_Spawn(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "On Amb Zap Spawn");

	Params::CUBE_C_On_Amb_Zap_Spawn Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ClearLastLaunchedPlayer
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ClearLastLaunchedPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ClearLastLaunchedPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Rollforward
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::Rollforward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Rollforward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeLeftPathPoint
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeLeftPathPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeLeftPathPoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LeftRuneLocation
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::LeftRuneLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LeftRuneLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ContinueSetup
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ContinueSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ContinueSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.On Spawn Dust Appear
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EmitterTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::On_Spawn_Dust_Appear(class FName EventName, float EmitterTime, const struct FVector& Location, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "On Spawn Dust Appear");

	Params::CUBE_C_On_Spawn_Dust_Appear Parms{};

	Parms.EventName = EventName;
	Parms.EmitterTime = EmitterTime;
	Parms.Location = std::move(Location);
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.Set Rune Print Audio Enabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::Set_Rune_Print_Audio_Enabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Set Rune Print Audio Enabled");

	Params::CUBE_C_Set_Rune_Print_Audio_Enabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.CrushPlayer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::CrushPlayer(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CrushPlayer");

	Params::CUBE_C_CrushPlayer Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ACUBE_C::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnDamagePlayEffects");

	Params::CUBE_C_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.TestForCrushOnHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Trace_Distance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::TestForCrushOnHit(float Trace_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "TestForCrushOnHit");

	Params::CUBE_C_TestForCrushOnHit Parms{};

	Parms.Trace_Distance = Trace_Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.CubeSpawnEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeSpawnEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeSpawnEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Update Roll Audio
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Percent_Complete                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::Update_Roll_Audio(float Percent_Complete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Update Roll Audio");

	Params::CUBE_C_Update_Roll_Audio Parms{};

	Parms.Percent_Complete = Percent_Complete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.End Roll Audio
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::End_Roll_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "End Roll Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Start Roll Audio Part 2
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::Start_Roll_Audio_Part_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Start Roll Audio Part 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Start Roll Audio Part 1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_2_Part_Roll                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::Start_Roll_Audio_Part_1(bool Is_2_Part_Roll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Start Roll Audio Part 1");

	Params::CUBE_C_Start_Roll_Audio_Part_1 Parms{};

	Parms.Is_2_Part_Roll = Is_2_Part_Roll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.Set Ambient Audio Enabled
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::Set_Ambient_Audio_Enabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Set Ambient Audio Enabled");

	Params::CUBE_C_Set_Ambient_Audio_Enabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.SpawnCube
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::SpawnCube()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "SpawnCube");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.SetRuneGlow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::SetRuneGlow(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "SetRuneGlow");

	Params::CUBE_C_SetRuneGlow Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ResetRollInit
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ResetRollInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ResetRollInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.RippleGC
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Source                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::RippleGC(const struct FVector& Location, const struct FVector& Normal, class AActor* Source, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "RippleGC");

	Params::CUBE_C_RippleGC Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);
	Parms.Source = Source;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.Show
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::Show()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Show");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CalcStepsPerRuneIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::CalcStepsPerRuneIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CalcStepsPerRuneIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ImpactLake
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ImpactLake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ImpactLake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeRollFeedback
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::CubeRollFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeRollFeedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.IncrementIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::IncrementIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "IncrementIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.ClearStartingPosition
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ClearStartingPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ClearStartingPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.StartRuneSequence
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StartMidway                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::StartRuneSequence(bool StartMidway)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "StartRuneSequence");

	Params::CUBE_C_StartRuneSequence Parms{};

	Parms.StartMidway = StartMidway;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.FindDownFaces
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::FindDownFaces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "FindDownFaces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.PlayFinalSink
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::PlayFinalSink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "PlayFinalSink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.3- DuplicateSpecified
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::ThreeMinus_DuplicateSpecified()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "3- DuplicateSpecified");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.SwapLast2Indicies
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::SwapLast2Indicies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "SwapLast2Indicies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.TwoPartTransitionEvent
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::TwoPartTransitionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "TwoPartTransitionEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.2- DeleteLastIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::TwoMinus_DeleteLastIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "2- DeleteLastIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.1 - DupLastIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::One_Minus_DupLastIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "1 - DupLastIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.PerformStep
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::PerformStep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "PerformStep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ACUBE_C::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnDamageServer");

	Params::CUBE_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACUBE_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ReceiveHit");

	Params::CUBE_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventActive_750DF2F749472DA252073089796089C8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventActive_750DF2F749472DA252073089796089C8(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventActive_750DF2F749472DA252073089796089C8");

	Params::CUBE_C_OnEventActive_750DF2F749472DA252073089796089C8 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventUpdated_750DF2F749472DA252073089796089C8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventUpdated_750DF2F749472DA252073089796089C8(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventUpdated_750DF2F749472DA252073089796089C8");

	Params::CUBE_C_OnEventUpdated_750DF2F749472DA252073089796089C8 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventEnded_750DF2F749472DA252073089796089C8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventEnded_750DF2F749472DA252073089796089C8(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventEnded_750DF2F749472DA252073089796089C8");

	Params::CUBE_C_OnEventEnded_750DF2F749472DA252073089796089C8 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0");

	Params::CUBE_C_OnEventActive_2648B1B24D74D365B5C956ACA1EAECB0 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0");

	Params::CUBE_C_OnEventUpdated_2648B1B24D74D365B5C956ACA1EAECB0 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0");

	Params::CUBE_C_OnEventEnded_2648B1B24D74D365B5C956ACA1EAECB0 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9");

	Params::CUBE_C_OnEventActive_16C2560C48CD325DC3C47CA23BEBB2C9 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9");

	Params::CUBE_C_OnEventUpdated_16C2560C48CD325DC3C47CA23BEBB2C9 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FTimespan                        Param_TimeUntilEnd                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        TimeSinceBegin                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   TimespanRatio                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9(const class FString& EventName, const struct FTimespan& Param_TimeUntilEnd, const struct FTimespan& TimeSinceBegin, float TimespanRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9");

	Params::CUBE_C_OnEventEnded_16C2560C48CD325DC3C47CA23BEBB2C9 Parms{};

	Parms.EventName = std::move(EventName);
	Parms.Param_TimeUntilEnd = std::move(Param_TimeUntilEnd);
	Parms.TimeSinceBegin = std::move(TimeSinceBegin);
	Parms.TimespanRatio = TimespanRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.RollTimeline__UpdateFunc
// (BlueprintEvent)

void ACUBE_C::RollTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "RollTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.RollTimeline__FinishedFunc
// (BlueprintEvent)

void ACUBE_C::RollTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "RollTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LakeTimeline__TurnOn__EventFunc
// (BlueprintEvent)

void ACUBE_C::LakeTimeline__TurnOn__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LakeTimeline__TurnOn__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LakeTimeline__DoneSinking__EventFunc
// (BlueprintEvent)

void ACUBE_C::LakeTimeline__DoneSinking__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LakeTimeline__DoneSinking__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LakeTimeline__UpdateFunc
// (BlueprintEvent)

void ACUBE_C::LakeTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LakeTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.LakeTimeline__FinishedFunc
// (BlueprintEvent)

void ACUBE_C::LakeTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LakeTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeAppearGlow__UpdateFunc
// (BlueprintEvent)

void ACUBE_C::CubeAppearGlow__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeAppearGlow__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.CubeAppearGlow__FinishedFunc
// (BlueprintEvent)

void ACUBE_C::CubeAppearGlow__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CubeAppearGlow__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.RuneEffect__UpdateFunc
// (BlueprintEvent)

void ACUBE_C::RuneEffect__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "RuneEffect__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.RuneEffect__FinishedFunc
// (BlueprintEvent)

void ACUBE_C::RuneEffect__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "RuneEffect__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.FinalSinkTimeline__UpdateFunc
// (BlueprintEvent)

void ACUBE_C::FinalSinkTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "FinalSinkTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.FinalSinkTimeline__FinishedFunc
// (BlueprintEvent)

void ACUBE_C::FinalSinkTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "FinalSinkTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACUBE_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.FindBottomFace
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FVector                          Downward_Face                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::FindBottomFace(const struct FTransform& Transform, struct FVector* Downward_Face)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "FindBottomFace");

	Params::CUBE_C_FindBottomFace Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Downward_Face != nullptr)
		*Downward_Face = std::move(Parms.Downward_Face);
}


// Function CUBE.CUBE_C.LaunchPlayerAway
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerPawn_Athena_C*             Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ForceMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FlashCube                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::LaunchPlayerAway(const struct FVector& HitLocation, const struct FVector& HitNormal, class APlayerPawn_Athena_C* Player, float ForceMultiplier, bool FlashCube)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "LaunchPlayerAway");

	Params::CUBE_C_LaunchPlayerAway Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.Player = Player;
	Parms.ForceMultiplier = ForceMultiplier;
	Parms.FlashCube = FlashCube;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ShouldDie
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ACUBE_C::ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ShouldDie");

	Params::CUBE_C_ShouldDie Parms{};

	Parms.Damage = Damage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CUBE.CUBE_C.OnRep_PathIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_PathIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_PathIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.DoFindDownFace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StepToTest                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FaceIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::DoFindDownFace(int32 StepToTest, int32* FaceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "DoFindDownFace");

	Params::CUBE_C_DoFindDownFace Parms{};

	Parms.StepToTest = StepToTest;

	UObject::ProcessEvent(Func, &Parms);

	if (FaceIndex != nullptr)
		*FaceIndex = Parms.FaceIndex;
}


// Function CUBE.CUBE_C.OnRep_StartingIndex
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_StartingIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_StartingIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.TraceCubeShape
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hit                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::TraceCubeShape(bool* Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "TraceCubeShape");

	Params::CUBE_C_TraceCubeShape Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Hit != nullptr)
		*Hit = Parms.Hit;
}


// Function CUBE.CUBE_C.CalculateNextMove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTimespan                        TimespanTillEnd                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_RuneDestination                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NextIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SecondsTillMove                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::CalculateNextMove(const struct FTimespan& TimespanTillEnd, int32 Param_RuneDestination, int32* NextIndex, float* SecondsTillMove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CalculateNextMove");

	Params::CUBE_C_CalculateNextMove Parms{};

	Parms.TimespanTillEnd = std::move(TimespanTillEnd);
	Parms.Param_RuneDestination = Param_RuneDestination;

	UObject::ProcessEvent(Func, &Parms);

	if (NextIndex != nullptr)
		*NextIndex = Parms.NextIndex;

	if (SecondsTillMove != nullptr)
		*SecondsTillMove = Parms.SecondsTillMove;
}


// Function CUBE.CUBE_C.UnhideAndSetCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnedOn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::UnhideAndSetCollision(bool TurnedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "UnhideAndSetCollision");

	Params::CUBE_C_UnhideAndSetCollision Parms{};

	Parms.TurnedOn = TurnedOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnRep_CubeHidden
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_CubeHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_CubeHidden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.OnRep_CubeTurnedOn
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_CubeTurnedOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_CubeTurnedOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.StepsThisRuneIndex
// (Public, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_RuneDestination                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::StepsThisRuneIndex(int32 Param_RuneDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "StepsThisRuneIndex");

	Params::CUBE_C_StepsThisRuneIndex Parms{};

	Parms.Param_RuneDestination = Param_RuneDestination;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.CalcRuneSteps
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACUBE_C::CalcRuneSteps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "CalcRuneSteps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.OnRep_PrintingRune
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_PrintingRune()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_PrintingRune");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.OnRep_CubeSpawn
// (BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_CubeSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_CubeSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.Set Tree MPC
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AtStartup                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACUBE_C::Set_Tree_MPC(bool AtStartup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "Set Tree MPC");

	Params::CUBE_C_Set_Tree_MPC Parms{};

	Parms.AtStartup = AtStartup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.SetSpecificTimeOfDay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Seconds                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::SetSpecificTimeOfDay(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "SetSpecificTimeOfDay");

	Params::CUBE_C_SetSpecificTimeOfDay Parms{};

	Parms.Seconds = Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.ImpulseVehicle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortAthenaVehicle*               Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ZMultiplier                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACUBE_C::ImpulseVehicle(class AFortAthenaVehicle* Vehicle, const struct FVector& Normal, const struct FVector& Location, float ZMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "ImpulseVehicle");

	Params::CUBE_C_ImpulseVehicle Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Normal = std::move(Normal);
	Parms.Location = std::move(Location);
	Parms.ZMultiplier = ZMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CUBE.CUBE_C.OnRep_GravVolumesSpawned
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_GravVolumesSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_GravVolumesSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CUBE.CUBE_C.IsLakeSplash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ACUBE_C::IsLakeSplash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "IsLakeSplash");

	Params::CUBE_C_IsLakeSplash Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function CUBE.CUBE_C.OnRep_DestTurnedOn
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void ACUBE_C::OnRep_DestTurnedOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CUBE_C", "OnRep_DestTurnedOn");

	UObject::ProcessEvent(Func, nullptr);
}

}

