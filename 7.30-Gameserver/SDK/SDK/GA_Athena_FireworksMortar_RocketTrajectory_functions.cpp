#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_FireworksMortar_RocketTrajectory

#include "Basic.hpp"

#include "GA_Athena_FireworksMortar_RocketTrajectory_classes.hpp"
#include "GA_Athena_FireworksMortar_RocketTrajectory_parameters.hpp"


namespace SDK
{

// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.ExecuteUbergraph_GA_Athena_FireworksMortar_RocketTrajectory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::ExecuteUbergraph_GA_Athena_FireworksMortar_RocketTrajectory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "ExecuteUbergraph_GA_Athena_FireworksMortar_RocketTrajectory");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_ExecuteUbergraph_GA_Athena_FireworksMortar_RocketTrajectory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.CleanupTrajectoryIndicatorOnUnequip
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::CleanupTrajectoryIndicatorOnUnequip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "CleanupTrajectoryIndicatorOnUnequip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "K2_ActivateAbilityFromEvent");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.InitTrajectoryVariables
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::InitTrajectoryVariables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "InitTrajectoryVariables");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.UpdateTrajectory
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::UpdateTrajectory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "UpdateTrajectory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.CleanupTrajectoryDisplay
// (BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::CleanupTrajectoryDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "CleanupTrajectoryDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "K2_OnEndAbility");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.OnFinish_D1543F914BF6E9ACEF45F0B020AC5C51
// (BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::OnFinish_D1543F914BF6E9ACEF45F0B020AC5C51()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "OnFinish_D1543F914BF6E9ACEF45F0B020AC5C51");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.SetupDummyProjectile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::SetupDummyProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "SetupDummyProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.UpdateTrajectorySpline
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::UpdateTrajectorySpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "UpdateTrajectorySpline");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.SpawnTrajectoryIndicator
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSpawnOnEquip                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFortProjectileTrajectory*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AFortProjectileTrajectory* UGA_Athena_FireworksMortar_RocketTrajectory_C::SpawnTrajectoryIndicator(bool bSpawnOnEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "SpawnTrajectoryIndicator");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_SpawnTrajectoryIndicator Parms{};

	Parms.bSpawnOnEquip = bSpawnOnEquip;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.SpawnLocationAndRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutLoc                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRot                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "SpawnLocationAndRotation");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_SpawnLocationAndRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLoc != nullptr)
		*OutLoc = std::move(Parms.OutLoc);

	if (OutRot != nullptr)
		*OutRot = std::move(Parms.OutRot);
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.CalcGrenadeSpeedFromPitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   AimPitch                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   GrenadeSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::CalcGrenadeSpeedFromPitch(float AimPitch, float* GrenadeSpeed) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "CalcGrenadeSpeedFromPitch");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_CalcGrenadeSpeedFromPitch Parms{};

	Parms.AimPitch = AimPitch;

	UObject::ProcessEvent(Func, &Parms);

	if (GrenadeSpeed != nullptr)
		*GrenadeSpeed = Parms.GrenadeSpeed;
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.GetOwningPlayer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  Player_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::GetOwningPlayer(class AFortPlayerPawn** Player_Pawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "GetOwningPlayer");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_GetOwningPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Pawn != nullptr)
		*Player_Pawn = Parms.Player_Pawn;
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.GetProjectileTrajectoryActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortProjectileTrajectory>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

TSubclassOf<class AFortProjectileTrajectory> UGA_Athena_FireworksMortar_RocketTrajectory_C::GetProjectileTrajectoryActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "GetProjectileTrajectoryActor");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_GetProjectileTrajectoryActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Athena_FireworksMortar_RocketTrajectory.GA_Athena_FireworksMortar_RocketTrajectory_C.GetProjectileTrajectoryPoints
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  OutSplinePoints                                        (Parm, OutParm, ZeroConstructor)
// TArray<struct FVector>                  OutSplineTangents                                      (Parm, OutParm, ZeroConstructor)
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UGA_Athena_FireworksMortar_RocketTrajectory_C::GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Athena_FireworksMortar_RocketTrajectory_C", "GetProjectileTrajectoryPoints");

	Params::GA_Athena_FireworksMortar_RocketTrajectory_C_GetProjectileTrajectoryPoints Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSplinePoints != nullptr)
		*OutSplinePoints = std::move(Parms.OutSplinePoints);

	if (OutSplineTangents != nullptr)
		*OutSplineTangents = std::move(Parms.OutSplineTangents);

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);
}

}

