#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainTabTutorialWrapper

#include "Basic.hpp"

#include "MainTabTutorialWrapper_classes.hpp"
#include "MainTabTutorialWrapper_parameters.hpp"


namespace SDK
{

// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.ExecuteUbergraph_MainTabTutorialWrapper
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainTabTutorialWrapper_C::ExecuteUbergraph_MainTabTutorialWrapper(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "ExecuteUbergraph_MainTabTutorialWrapper");

	Params::MainTabTutorialWrapper_C_ExecuteUbergraph_MainTabTutorialWrapper Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.Tab Reveal Message Closed
// (BlueprintCallable, BlueprintEvent)

void UMainTabTutorialWrapper_C::Tab_Reveal_Message_Closed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "Tab Reveal Message Closed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.OnStartCallout
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                             TutorialObjectiveName                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETutorialType                           TutorialType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainTabTutorialWrapper_C::OnStartCallout(class FName TutorialObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "OnStartCallout");

	Params::MainTabTutorialWrapper_C_OnStartCallout Parms{};

	Parms.TutorialObjectiveName = TutorialObjectiveName;
	Parms.TutorialType = TutorialType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.OnStopCallout
// (Event, Protected, BlueprintEvent)

void UMainTabTutorialWrapper_C::OnStopCallout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "OnStopCallout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.OnBangStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainTabTutorialWrapper_C::OnBangStateChanged(bool bEnabled, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "OnBangStateChanged");

	Params::MainTabTutorialWrapper_C_OnBangStateChanged Parms{};

	Parms.bEnabled = bEnabled;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.CheckFinishTutorialWrapper
// (Public, BlueprintCallable, BlueprintEvent)

void UMainTabTutorialWrapper_C::CheckFinishTutorialWrapper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "CheckFinishTutorialWrapper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.HandleTutorialCallout
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TutorialObjectiveName                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETutorialType                           TutorialType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainTabTutorialWrapper_C::HandleTutorialCallout(const class FName& TutorialObjectiveName, ETutorialType TutorialType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "HandleTutorialCallout");

	Params::MainTabTutorialWrapper_C_HandleTutorialCallout Parms{};

	Parms.TutorialObjectiveName = TutorialObjectiveName;
	Parms.TutorialType = TutorialType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.HasValidData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFortUITutorialData              FortUITutorialData                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMainTabTutorialWrapper_C::HasValidData(const struct FFortUITutorialData& FortUITutorialData, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "HasValidData");

	Params::MainTabTutorialWrapper_C_HasValidData Parms{};

	Parms.FortUITutorialData = std::move(FortUITutorialData);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.GetTutorialCalloutData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FFortUITutorialData              TutorialData                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FFortToastDisplayInfo            FortToastDisplayInfo                                   (Parm, OutParm)

void UMainTabTutorialWrapper_C::GetTutorialCalloutData(const struct FFortUITutorialData& TutorialData, struct FFortToastDisplayInfo* FortToastDisplayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "GetTutorialCalloutData");

	Params::MainTabTutorialWrapper_C_GetTutorialCalloutData Parms{};

	Parms.TutorialData = std::move(TutorialData);

	UObject::ProcessEvent(Func, &Parms);

	if (FortToastDisplayInfo != nullptr)
		*FortToastDisplayInfo = std::move(Parms.FortToastDisplayInfo);
}


// Function MainTabTutorialWrapper.MainTabTutorialWrapper_C.SetParentButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButton*                    Param_ParentButton                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMainTabTutorialWrapper_C::SetParentButton(class UCommonButton* Param_ParentButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MainTabTutorialWrapper_C", "SetParentButton");

	Params::MainTabTutorialWrapper_C_SetParentButton Parms{};

	Parms.Param_ParentButton = Param_ParentButton;

	UObject::ProcessEvent(Func, &Parms);
}

}

