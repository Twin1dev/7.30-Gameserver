#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaChallengeTreeEntry

#include "Basic.hpp"

#include "AthenaChallengeTreeEntry_classes.hpp"
#include "AthenaChallengeTreeEntry_parameters.hpp"


namespace SDK
{

// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.ExecuteUbergraph_AthenaChallengeTreeEntry
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::ExecuteUbergraph_AthenaChallengeTreeEntry(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "ExecuteUbergraph_AthenaChallengeTreeEntry");

	Params::AthenaChallengeTreeEntry_C_ExecuteUbergraph_AthenaChallengeTreeEntry Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.BP_OnItemExpansionChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsExpanded                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaChallengeTreeEntry_C::BP_OnItemExpansionChanged(bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "BP_OnItemExpansionChanged");

	Params::AthenaChallengeTreeEntry_C_BP_OnItemExpansionChanged Parms{};

	Parms.bIsExpanded = bIsExpanded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UAthenaChallengeTreeEntry_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.SetupAsChallengeBundle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleInfo*         Bundle                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::SetupAsChallengeBundle(class UFortChallengeBundleInfo* Bundle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "SetupAsChallengeBundle");

	Params::AthenaChallengeTreeEntry_C_SetupAsChallengeBundle Parms{};

	Parms.Bundle = Bundle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.SetupAsChallengeBundleSchedule
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleCategoryInfo* Schedule                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::SetupAsChallengeBundleSchedule(class UFortChallengeBundleCategoryInfo* Schedule)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "SetupAsChallengeBundleSchedule");

	Params::AthenaChallengeTreeEntry_C_SetupAsChallengeBundleSchedule Parms{};

	Parms.Schedule = Schedule;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateHeaderCategoryStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleCategoryInfo* CategoryInfo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::UpdateHeaderCategoryStyle(class UFortChallengeBundleCategoryInfo* CategoryInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "UpdateHeaderCategoryStyle");

	Params::AthenaChallengeTreeEntry_C_UpdateHeaderCategoryStyle Parms{};

	Parms.CategoryInfo = CategoryInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateBundleStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleInfo*         BundleInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::UpdateBundleStyle(class UFortChallengeBundleInfo* BundleInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "UpdateBundleStyle");

	Params::AthenaChallengeTreeEntry_C_UpdateBundleStyle Parms{};

	Parms.BundleInfo = BundleInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateBundleData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortChallengeBundleInfo*         BundleInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAthenaChallengeTreeEntry_C::UpdateBundleData(class UFortChallengeBundleInfo* BundleInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "UpdateBundleData");

	Params::AthenaChallengeTreeEntry_C_UpdateBundleData Parms{};

	Parms.BundleInfo = BundleInfo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.UpdateReward
// (Public, BlueprintCallable, BlueprintEvent)

void UAthenaChallengeTreeEntry_C::UpdateReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "UpdateReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.GetRewardToShow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UFortItem* UAthenaChallengeTreeEntry_C::GetRewardToShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "GetRewardToShow");

	Params::AthenaChallengeTreeEntry_C_GetRewardToShow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AthenaChallengeTreeEntry.AthenaChallengeTreeEntry_C.SetTimespanSource
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IFortTimespanDataSource>Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAthenaChallengeTreeEntry_C::SetTimespanSource(TScriptInterface<class IFortTimespanDataSource> Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaChallengeTreeEntry_C", "SetTimespanSource");

	Params::AthenaChallengeTreeEntry_C_SetTimespanSource Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

