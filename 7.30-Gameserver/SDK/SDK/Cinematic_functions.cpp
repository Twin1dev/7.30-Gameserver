#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cinematic

#include "Basic.hpp"

#include "Cinematic_classes.hpp"
#include "Cinematic_parameters.hpp"


namespace SDK
{

// Function Cinematic.Cinematic_C.ExecuteUbergraph_Cinematic
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::ExecuteUbergraph_Cinematic(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ExecuteUbergraph_Cinematic");

	Params::Cinematic_C_ExecuteUbergraph_Cinematic Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.OnExitState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            NextUIState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::OnExitState(EFortUIState NextUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "OnExitState");

	Params::Cinematic_C_OnExitState Parms{};

	Parms.NextUIState = NextUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.OnEnterState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            PreviousUIState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::OnEnterState(EFortUIState PreviousUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "OnEnterState");

	Params::Cinematic_C_OnEnterState Parms{};

	Parms.PreviousUIState = PreviousUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.PushContentWidgetInternal
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UCinematic_C::PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "PushContentWidgetInternal");

	Params::Cinematic_C_PushContentWidgetInternal Parms{};

	Parms.Widget = Widget;
	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.HandleClientEvent_SkipCinematic
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          EventFocus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UCinematic_C::HandleClientEvent_SkipCinematic(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "HandleClientEvent_SkipCinematic");

	Params::Cinematic_C_HandleClientEvent_SkipCinematic Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.HandleEndReached
// (BlueprintCallable, BlueprintEvent)

void UCinematic_C::HandleEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "HandleEndReached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCinematic_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.HandleClientEvent_QueueCinematic
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          EventFocus                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UCinematic_C::HandleClientEvent_QueueCinematic(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "HandleClientEvent_QueueCinematic");

	Params::Cinematic_C_HandleClientEvent_QueueCinematic Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UCinematic_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.ShowMovie
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMediaSource*                     MediaSource                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNamedSlot*                       Param_MovieSlot                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMovieWidget_C*                   Param_MovieWidget                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::ShowMovie(class UMediaSource* MediaSource, class UNamedSlot*& Param_MovieSlot, class UMovieWidget_C*& Param_MovieWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ShowMovie");

	Params::Cinematic_C_ShowMovie Parms{};

	Parms.MediaSource = MediaSource;
	Parms.Param_MovieSlot = Param_MovieSlot;
	Parms.Param_MovieWidget = Param_MovieWidget;

	UObject::ProcessEvent(Func, &Parms);

	Param_MovieSlot = Parms.Param_MovieSlot;
	Param_MovieWidget = Parms.Param_MovieWidget;
}


// Function Cinematic.Cinematic_C.ClearMovie
// (Public, BlueprintCallable, BlueprintEvent)

void UCinematic_C::ClearMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ClearMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.SkipMovie
// (Public, BlueprintCallable, BlueprintEvent)

void UCinematic_C::SkipMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "SkipMovie");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.PopContentWidgetInternal
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UCinematic_C::PopContentWidgetInternal(const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "PopContentWidgetInternal");

	Params::Cinematic_C_PopContentWidgetInternal Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Cinematic.Cinematic_C.ClearMovieSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     MovieSlotToClear                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::ClearMovieSlot(class UPanelWidget*& MovieSlotToClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ClearMovieSlot");

	Params::Cinematic_C_ClearMovieSlot Parms{};

	Parms.MovieSlotToClear = MovieSlotToClear;

	UObject::ProcessEvent(Func, &Parms);

	MovieSlotToClear = Parms.MovieSlotToClear;
}


// Function Cinematic.Cinematic_C.ClearMovieWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortMovieWidget*                 MovieWidgetToClear                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::ClearMovieWidget(class UFortMovieWidget*& MovieWidgetToClear)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ClearMovieWidget");

	Params::Cinematic_C_ClearMovieWidget Parms{};

	Parms.MovieWidgetToClear = MovieWidgetToClear;

	UObject::ProcessEvent(Func, &Parms);

	MovieWidgetToClear = Parms.MovieWidgetToClear;
}


// Function Cinematic.Cinematic_C.SetMoviePlaying
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MoviePlaying                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCinematic_C::SetMoviePlaying(bool MoviePlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "SetMoviePlaying");

	Params::Cinematic_C_SetMoviePlaying Parms{};

	Parms.MoviePlaying = MoviePlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.ClearOldSubtitlesIfNecessary
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewSubtitlesExist                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UFortMediaSubtitlesPlayer*        NewSubtitles                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::ClearOldSubtitlesIfNecessary(bool NewSubtitlesExist, class UFortMediaSubtitlesPlayer* NewSubtitles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "ClearOldSubtitlesIfNecessary");

	Params::Cinematic_C_ClearOldSubtitlesIfNecessary Parms{};

	Parms.NewSubtitlesExist = NewSubtitlesExist;
	Parms.NewSubtitles = NewSubtitles;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Cinematic.Cinematic_C.StopAndClearSubtitles
// (Public, BlueprintCallable, BlueprintEvent)

void UCinematic_C::StopAndClearSubtitles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "StopAndClearSubtitles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Cinematic.Cinematic_C.GetAudioTrackIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AudioTrack                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCinematic_C::GetAudioTrackIndex(int32* AudioTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Cinematic_C", "GetAudioTrackIndex");

	Params::Cinematic_C_GetAudioTrackIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AudioTrack != nullptr)
		*AudioTrack = Parms.AudioTrack;
}

}

