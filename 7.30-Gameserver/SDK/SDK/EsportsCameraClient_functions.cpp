#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EsportsCameraClient

#include "Basic.hpp"

#include "EsportsCameraClient_classes.hpp"
#include "EsportsCameraClient_parameters.hpp"


namespace SDK
{

// Function EsportsCameraClient.EsportsCameraClient.HasDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEsportsCameraClient::HasDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EsportsCameraClient", "HasDynamicMaterial");

	Params::EsportsCameraClient_HasDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EsportsCameraClient.EsportsCameraClient.IsPlatformEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEsportsCameraClient::IsPlatformEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EsportsCameraClient", "IsPlatformEnabled");

	Params::EsportsCameraClient_IsPlatformEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EsportsCameraClient.EsportsCameraClient.IsPlayingWebMovie
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AEsportsCameraClient::IsPlayingWebMovie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EsportsCameraClient", "IsPlayingWebMovie");

	Params::EsportsCameraClient_IsPlayingWebMovie Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function EsportsCameraClient.EsportsCameraClient.SetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         MaterialInstanceDynamic                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AEsportsCameraClient::SetDynamicMaterial(class UMaterialInstanceDynamic* MaterialInstanceDynamic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EsportsCameraClient", "SetDynamicMaterial");

	Params::EsportsCameraClient_SetDynamicMaterial Parms{};

	Parms.MaterialInstanceDynamic = MaterialInstanceDynamic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function EsportsCameraClient.EsportsCameraStatusBase.FollowedPlayerChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEsportsCameraClient*             InEsportsCameraClient                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEsportsCameraStatusBase::FollowedPlayerChanged(class AEsportsCameraClient* InEsportsCameraClient)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EsportsCameraStatusBase", "FollowedPlayerChanged");

	Params::EsportsCameraStatusBase_FollowedPlayerChanged Parms{};

	Parms.InEsportsCameraClient = InEsportsCameraClient;

	UObject::ProcessEvent(Func, &Parms);
}

}

